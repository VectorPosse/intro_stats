[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "",
    "text": "Introduction\nWelcome to statistics!",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "Getting started",
    "text": "Getting started\nThis book assumes you are using the R language and the RStudio software. If you are using this book for a class, your teacher will let you know if you need to download R and RStudio on your own device or if you will be using R and RStudio through a web browser. If you are using a web browser, you might be using R installed on a central server, or you might be using it through a cloud service (like Posit Cloud, for example). If you are using this book for self-study, you can choose how you want to interact with R and RStudio. (R and RStudio can be downloaded and installed on your machine for free. Cloud services often have a selection of free and paid tiers.)\nOnce you get RStudio or Posit up and running, you are all set to go to Chapter 1 and get started.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#history-and-goals",
    "href": "index.html#history-and-goals",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "History and goals",
    "text": "History and goals\nIn 2015, a group of interdisciplinary faculty at Westminster University (then called Westminster College) in Salt Lake City, Utah, started a process that led to the creation of a new Data Science program. Preparatory to creating a more rigorous introductory statistics course using the statistical software R, I wrote a series of 22 modules that filled a gap in the R training literature. Most R training at the time was focused either on learning to program using R as a computer language, or using R to do sophisticated statistical analysis. We needed our students to use R as a tool for elementary statistical methods and we needed the learning curve to be as gentle as possible. I decided early on that to make the modules more useful, they needed to be structured more like an interactive textbook rather than just a series of lab exercises, and so I spent the summer of 2016 writing a free, open-source, self-contained, and nearly fully-featured introductory statistics textbook. The first sections of the newly-created DATA 220 were offered in Fall, 2016, using the materials I created.\nSince then, I have been revising and updating the modules a little every semester. At some point, however, it became clear that some big changes needed to happen:\n\nThe modules were more or less aligned with the OpenIntro book Introduction to Statistics with Randomization and Simulation (ISRS) by David Diez, Christopher Barr, and Mine Çetinkaya-Rundel. That book has now been supplanted by Introduction to Modern Statistics (IMS) by Mine Çetinkaya-Rundel and Johanna Hardin, also published through the OpenIntro project.\nThe initial materials were written mostly using a mix of base R tools, some tidyverse tools, and the amazing resources of the mosaic package. I wanted to convert everything to be more aligned with tidyverse packages now that they are mature, well-supported, and becoming a de facto standard for doing data analysis in R.\nThe initial choice of data sets that served as examples and exercises for students was guided by convenience. As I had only a short amount of time to write an entire textbook from scratch, I tended to grab the first data sets I could find that met the conditions needed for the statistical principles I was trying to illustrate. It has become clear in the last few years that the material will be more engaging with more interesting data sets. Ideally, we should use at least some data sets that speak to issues of social justice.\nMaking statistics more inclusive requires us to confront some ugly chapters in the development of the subject. Statistical principles are often named after people. (These are supposedly the people who “discovered” the principle, but keep in mind Stigler’s Law of Eponymy which states that no scientific discovery is truly named after its original discoverer. In a neat bit of self-referential irony, Stephen Stigler was not the first person to make this observation.) The beliefs of some of these people were problematic. For example, Francis Galton (famous for the concept of “regression to the mean”), Karl Pearson (of the Pearson correlation coefficient), and Ronald Fisher (famous for many things, including the P-value) were all deeply involved in the eugenics movement of the late 19th and early 20th century. The previous modules almost never referenced this important historical background and context. Additionally, it’s important to discuss ethics, whether that be issues of data provenance, data manipulation, choice of analytic techniques, framing conclusions, and many other topics.\n\nThe efforts of my revisions are here online. I’ve tried to address all the concerns mentioned above:\n\nThe chapter are arranged to align somewhat with IMS. There isn’t quite a one-to-one correspondence, but teachers who want to use the chapters of my book to supplement instruction from IMS, or vice versa, should be able to do so pretty easily. In the Appendix, I’ve included a concordance that shows how the books’ chapters match up, along with some notes that explain when one book does more or less than the other.\nThe book is now completely aligned with the tidyverse and other packages that are designed to integrate into the tidyverse. All plotting is done with ggplot2 and all data manipulation is done with dplyr, tidyr, and forcats. Tables are created using tabyl from the janitor package. Inference is taught using the cool tools in the infer package.\nI have made an effort to find more interesting data sets. It’s tremendously difficult to find data that is both fascinating on its merits and also meets the pedagogical requirements of an introductory statistics course. I would like to use even more data that addresses social justice issues. There’s some in the book now, and I plan to incorporate even more in the future as I come across data sets that are suitable.\nWhen statistical tools are introduced, I have tried to give a little historical context about their development if I can. I’ve also tried to frame every step of the inferential process as a decision-making process that requires not only analytical expertise, but also solid ethical grounding. Again, there’s a lot more I could do here, and my goal is to continue to develop more such discussion as I can in future revisions.\n\nNow, instead of a bunch of separate module files, all the material is gathered in one place as chapters of a book. In each chapter (starting with Chapter 2), students can download the chapter as a Quarto document, open it in RStudio, and work through the material.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#philosophy-and-pedagogy",
    "href": "index.html#philosophy-and-pedagogy",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "Philosophy and pedagogy",
    "text": "Philosophy and pedagogy\nTo understand my statistics teaching philosophy, it’s worth telling you a little about my background in statistics.\nAt the risk of undermining my own credibility, I’d like to tell you about the first statistics class I took. In the mid-2000s, I was working on my Ph.D. at the University of California, San Diego, studying geometric topology. To make a little extra money and get some teaching experience under my belt, I started teaching night and summer classes at Miramar College, a local community college in the San Diego Community College District. I had been there for several semesters, mostly teaching pre-calculus, calculus, and other lower-division math classes. One day, I got a call from my department chair with my assignment for the upcoming semester. I was scheduled to teach intro stats. I was about to respond, “Oh, I’ve never taken a stats class before.” But remembering this was the way I earned money to be able to live in expensive San Diego County, I said, “Sounds great. By the way, do you happen to have an extra copy of the textbook we’ll be using?”\nYes, the first statistics class I took was the one I taught. Not ideal, I know.\nI was lucky to start teaching with Intro Stats by De Veaux, Velleman, and Bock, a book that was incredibly well-written and included a lot of resources for teachers like me. (I learned quickly that I wasn’t the only math professor in the world who got thrown into teaching statistics classes with little-to-no training.) I got my full-time appointment at Westminster in 2008 and continued to teach intro stats classes for many years to follow. As I mentioned earlier, we started the Data Science program at Westminster in 2016 and moved everything from our earlier hodgepodge of calculators, spreadsheets, and SPSS, over to R.\nEventually, I got interested in Bayesian statistics and read everything I could get my hands on. I became convinced that Bayesian statistics is the right way to do statistical analysis. I started teaching special topics courses in Bayesian Data Analysis and working with students on research projects that involved Bayesian methods. If it were up to me, every introductory statistics class in the world would be taught using Bayesian methods. I know that sounds like a strong statement. (And I put it in boldface, so it looks even stronger.) But I truly believe that in an alternate universe where Fisher and his disciples didn’t “win” the stats wars of the 20th century (and perhaps one in which computing power got a little more advanced a little earlier in the development of statistics), we would all be Bayesians. Bayesian thinking is far more intuitive and more closely aligned with our intuitions about probabilities and uncertainty.\nUnfortunately, our current universe timeline didn’t play out that way. So we are left with frequentism. It’s not that I necessarily object to frequentist tools. All tools are just tools, after all. However, the standard form of frequentist inference, with its null hypothesis significance testing, P-values, and confidence intervals, can be confusing. It’s bad enough that professional researchers struggle with them. We teach undergraduate students in introductory classes.\nOkay, so we are stuck not in the world we want but in the world we’ve got. At my institution and most others, intro stats is a service course that trains far more people who are outside the fields of mathematics and statistics. In that world, students will go on to careers where they interact with research that reports P-values and confidence intervals.\nSo what’s the best we can do for our students, given that limitation? We need to be laser-focused on teaching the frequentist logic of inference the best we can. I want student to see P-values in papers and know how to interpret those P-values correctly. I want students to understand what a confidence interval tells them—and even more importantly, what it does not tell them. I want students to respect the severe limitations inherent in tests of significance. If we’re going to train frequentists, the least we can do is help them become good frequentists.\nOne source of inspiration for good statistical pedagogy comes from the Guidelines for Assessment and Instruction in Statistics Education (GAISE), a set of recommendations made by experienced stats educators and endorsed by the American Statistical Association. Their college guidelines are as follows:\n\nTeach statistical thinking.\n\nTeach statistics as an investigative process of problem-solving and decision-making.\nGive students experience with multivariable thinking.\n\nFocus on conceptual understanding.\nIntegrate real data with a context and purpose.\nFoster active learning.\nUse technology to explore concepts and analyze data.\nUse assessments to improve and evaluate student learning.\n\nIn every element of this book, I’ve tried to follow these guidelines:\n\nThe first part of the book is an extensive guide for exploratory data analysis. The rest of the book is about inference in the context of specific research questions that are answered using statistical tools. While multivariable thinking is a little harder to do in an intro stats class, I take the opportunity whenever possible to use graphs to explore more variables than we can handle with intro stats inferential techniques. I point out the the simple analyses taught in this class are only the first step in more comprehensive analyses that incorporate more information and control for confounders. I emphasize that students can continue their statistical growth by enrolling in more advanced stats classes.\nI often tell students that if they forget everything else from their stats class, the one think I want them to be able to do is interpret a P-value correctly. It’s not intuitive, so it takes an entire semester to set up the idea of a sampling distribution and explain over and over again how the P-value relates to it. In this book, I try to reinforce the logic of inference until the students know it almost instinctively. A huge pedagogical advantage is derived by using randomization and simulation to keep students from getting lost in the clouds of theoretical probability distributions. But they also need to know about the latter too. Every hypothesis test is presented both ways, a task made easy when using the infer package.\nThis is the thing I struggle with the most. Finding good data is hard. Over the years, I’ve found a few data sets I really like, but my goal is to continue to revise the book to incorporate more interesting data, especially data that serves to highlight issues of social justice.\nBack when I wrote the first set of modules that eventually became this book, the goal was to create assignments that merged content with activities so that students would be engaged in active learning. When these chapters are used in the classroom, students can collaborate with each other and with their professor. They learn by doing.\nUnlike most books out there, this book does not try to be agnostic about technology. This book is about doing statistics in R.\nThis one I’ll leave in the capable hands of the professors who use these materials. The chapter assignments should be completed and submitted, and that is one form of assessment. But I also believe in augmenting this material with other forms of assessment that may include supplemental assignments, open-ended data exploration, quizzes and tests, projects, etc.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#course-structure",
    "href": "index.html#course-structure",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "Course structure",
    "text": "Course structure\nAs explained above, this book is meant to be a workbook that students complete as they’re reading.\nAt Westminster University, we use Posit Cloud. The cloud solution has a free tier, but in our experience, it’s not quite enough compute hours for this course. Various affordable paid options are available, like having students pay a monthly fee for access, or having the institution pay for the accounts.\nIn the past, we’ve also hosted Posit Workbench on a local server that is connected to our single sign-on (SSO) systems so that students can access RStudio through a browser using their campus online usernames and passwords. If you have the ability to convince your IT folks to support such a server, it’s very helpful. Rather than spending the first day of class troubleshooting while students try to install software on their machines, you can just have them log in and get started right away. Campus admins install packages and tweak settings to make sure all students have a standardized interface and consistent experience.\nIf you don’t have that luxury, or if you don’t want to pay for the cloud accounts, you will need to have students download and install both R and RStudio. The installation processes for both pieces of software are very easy and straightforward for the majority of students. If your students are running R on their own machines or if they’re using Posit Cloud, they will need to use install.packages at the beginning of some of the chapters for any new packages that are introduced. (They are mentioned at the beginning of each chapter with instructions for installing them.)\nChapter 1 is fully online and introduces R and RStudio very gently using only commands at the Console. They will create a project called intro_stats in RStudio that should be used all semester to organize their work. There is a reminder at the beginning of all subsequent chapter to make sure they are in that project before starting to do any work. (Generally, there is no reason they will exit the project, but some students get curious and click on stuff.)\nIn Chapter 2, students are taught to click a link to download a Quarto document (.qmd). I have found that students struggle initially to get this file to the right place. If students are using RStudio online, they will need to use the “Upload” button in the Files tab in RStudio to get the file from their Downloads folder (or wherever they tell their machine to put downloaded files from the internet) into RStudio. If students are using R on their own machines, they will need to move the file from their Downloads folder into their project directory. There are some students who have never had to move files around on their computers, so this is a task that might require some guidance from classmates, TAs, or the professor. The location of the project directory and the downloaded files can vary from one machine to the next. They will have to use something like File Explorer for Windows or the Finder for MacOS, so there isn’t a single set of instructions that will get all students’ files successfully in the right place. Once the file is in the correct location, students can just click on it to open it in RStudio and start reading. Chapter 2 is all about using Quarto documents: markdown syntax, R code chunks, and inline code.\nBy Chapter 3, a rhythm is established that students will start to get used to:\n\nOpen the book online and open RStudio.\nInstall any packages in RStudio that are new to that chapter.\nCheck to make sure they’re are in the intro_stats project.\nClick the link online to download the Quarto document.\nMove the Quarto document from the Downloads folder to the project directory.\nOpen up the Quarto document.\nRestart R and Run All Chunks.\nStart reading and working.\n\nWhen students finish each assignment, they will Restart R and Run All Chunks one last time and then “Render” the Quarto document, which will create HTML output that can then be submitted. (Hopefully, they will also take the opportunity to spell check and proofread thoroughly before submission. It’s important to proofread the HTML document not just for the writing, but also to make sure that the code output and formatting all looks correct.)\nChapters 3 and 4 focus on exploratory data analysis for categorical and numerical data, respectively.\nChapter 5 is a primer on data manipulation using dplyr.\nChapters 6 and 7 cover correlation and regression. This “early regression” approach mirrors the IMS text. (IMS eventually circles back to hypothesis testing for regression, but this book does not. That’s a topic that is covered extensively in most second-semester stats classes.)\nChapters 8–11 are crucial for building the logical foundations for inference. The idea of a sampling distribution under the assumption of a null hypothesis is built up slowly and intuitively through randomization and simulation. By the end of Chapter 11, students will be fully introduced to the structure of a hypothesis test, and hopefully will have experienced the first sparks of intuition about why it “works.” All inference in this book is conducted using a “rubric” approach—basically, the steps are broken down into bite-sized pieces and students are expected to work through each step of the rubric every time they run a test. (The rubric steps are shown in the Appendix.)\nChapter 12 introduces a few more steps to the rubric for confidence intervals. As we are still using randomization to motivate inference, confidence intervals are calculated using the bootstrap approach for now.\nOnce students have developed a conceptual intuition for sampling distributions using simulation, we can introduce probability models. Chapter 13 introduces normal models and Chapter 14 explains why they are often appropriate for modeling sampling distributions.\nThe final chapters of the book (Chapters 15–22) are simply applications of inference in specific data settings: inference for one (Ch. 15) and two (Ch. 16) proportions, Chi-square tests for goodness-of-fit (Ch. 17) and independence (Ch. 18), inference for one mean (Ch. 19), paired data (Ch. 20), two independent means (Ch. 21), and finally ANOVA (Ch. 22). Along the way, students learn about the chi-square, Student t, and F distributions. Although the last part of the book follows a fairly traditional parametric approach, every chapter still includes randomization and simulation to some degree so that students don’t lose track of the intuition behind sampling distributions under the assumption of a null hypothesis.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#onward-and-upward",
    "href": "index.html#onward-and-upward",
    "title": "Introduction to Statistics: an integrated textbook and workbook using R",
    "section": "Onward and upward",
    "text": "Onward and upward\nI hope you enjoy the textbook. You can provide feedback two ways:\n\nThe preferred method is to file an issue on the Github page: https://github.com/VectorPosse/intro_stats/issues\nAlternatively, send me an email: sraleigh@westminsteru.edu",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "01-intro_to_r.html",
    "href": "01-intro_to_r.html",
    "title": "1  Introduction to R",
    "section": "",
    "text": "1.1 Introduction\nWelcome to R! This chapter will walk you through everything you need to know to get started using R.\nAs you go through this chapter (and all future chapters), please read slowly and carefully, and pay attention to detail. Many steps depend on the correct execution of all previous steps, so reading quickly and casually might come back to bite you later.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#what-is-r",
    "href": "01-intro_to_r.html#what-is-r",
    "title": "1  Introduction to R",
    "section": "1.2 What is R?",
    "text": "1.2 What is R?\nR is a programming language specifically designed for doing statistics. Don’t be intimidated by the word “programming” though. The goal of this course is not to make you a computer programmer. To use R to do statistics, you don’t need know anything about programming at all. Every chapter throughout the whole course will give you examples of the commands you need to use. All you have to do is use those example commands as templates and make the necessary changes to adapt them to the data you’re trying to analyze.\nThe greatest thing about R is that it is free and open source. This means that you can download it and use it for free, and also that you can inspect and modify the source code for all R functions. This kind of transparency does not exist in commercial software. The net result is a robust, secure, widely-used language with literally tens of thousands of contributions from R users all over the world.\nR has also become a standard tool for statistical analysis, from academia to industry to government. Although some commercial packages are still widely used, many practitioners are switching to R due to its cost (free!) and relative ease of use. After this course, you will be able to list some R experience on your résumé and your future employer will value this. It might even help get you a job!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#rstudio",
    "href": "01-intro_to_r.html#rstudio",
    "title": "1  Introduction to R",
    "section": "1.3 RStudio",
    "text": "1.3 RStudio\nRStudio is an “Integrated Development Environment,” or IDE for short. An IDE is a tool for working with a programming language that is fancier than just a simple text editor. Most IDEs give you shortcuts, menus, debugging facilities, syntax highlighting, and other things to make your life as easy as possible.\nOpen RStudio so we can explore some of the areas you’ll be using in the future. (How to do this will depend on whether you’ve installed RStudio on your personal computer or logged into a cloud server. If you are in a class, your teacher will explain how to do this. For local installations, you should just be able to open RStudio. For cloud applications, you may need to start a “New Session” or a “New Project”.)\nIt should look something like this:\n\n\n\nScreenshot of RStudio at startup\n\n\nOn the left side of your screen, you should see a big pane called the “Console”. There will be some startup text there, and below that, you should see a “command prompt”: the symbol “&gt;” followed by a blinking cursor. (If the cursor is not blinking, that means that the focus is in another pane. Click anywhere in the Console and the cursor should start blinking again.)\nA command prompt can be one of the more intimidating things about starting to use R. It’s just sitting there waiting for you to do something. Unlike other programs where you run commands from menus, R requires you to know what you need to type to make it work.\nWe’ll return to the Console in a moment.\nNext, look at the upper-right corner of the screen. There are at least three tabs in this pane starting with “Environment”, “History”, and “Connections”. The “Environment” (also called the “Global Environment”) keeps track of things you define while working with R. There’s nothing to see there yet because we haven’t defined anything! The “History” tab will likewise be empty; again, we haven’t done anything yet. We won’t use the “Connections” tab in this course. (Depending on the version of RStudio you are using and its configuration, you may see additional tabs, but we won’t need them for this course.)\nNow look at the lower-right corner of the screen. There are likely six tabs here: “Files”, “Plots”, “Packages”, “Help”, “Viewer”, and “Presentation”. The “Files” tab will eventually contain the files you upload or create. “Plots” will show you the result of commands that produce graphs and charts. “Packages” will be explained later. “Help” is precisely what it sounds like; this will be a very useful place for you to get to know. We will never use the “Viewer” or “Presentation” tabs, so don’t worry about them.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#important",
    "href": "01-intro_to_r.html#important",
    "title": "1  Introduction to R",
    "section": "1.4 IMPORTANT!!",
    "text": "1.4 IMPORTANT!!\nThere is a setting you need to change for RStudio to work properly for you as you move through assignments in the future. Find the Tools menu (at the top of the screen, between “Profile” and “Help”) and go to the bottom where it says “Global Options…”\nIn the Workspace section, where it says “Save workspace to .RData on exit”, you must change the drop-down menu from “Ask” to “Never”. The menu is highlighted in the image below:\n\n\n\nChange Ask to Never in this menu.\n\n\nBe sure to scroll down and click the OK button when you’re done.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#try-something",
    "href": "01-intro_to_r.html#try-something",
    "title": "1  Introduction to R",
    "section": "1.5 Try something!",
    "text": "1.5 Try something!\nSo let’s do something in R! Go back to the Console and at the command prompt (the “&gt;” symbol with the blinking cursor), type\n\n1+1\n\nand hit Enter.\nCongratulations! You just ran your first command in R. It’s all downhill from here. R really is nothing more than a glorified calculator.\nOkay, let’s do something slightly more sophisticated. It’s important to note that R is case-sensitive, which means that lowercase letters and uppercase letters are treated differently. Type the following, making sure you use a lowercase x and lowercase c, and hit Enter:\n\nx &lt;- c(1, 3, 4, 7, 9)\n\nYou have just created a “vector”. When we use the letter c and enclose a list of things in parentheses, we tell R to “combine” those elements. So, a vector is just a collection of data. The little arrow &lt;- says to take what’s on the right and assign it to the symbol on the left. The vector x is now saved in memory. As long as you don’t terminate your current R session, this vector is available to you.\nCheck out the “Environment” pane now. You should see the vector x that you just created, along with some information about it. Next to x, it says num, which means your vector has numerical data. Then it says [1:5] which indicates that there are five elements in the vector x.\nAt the command prompt in the Console, type\n\nx\n\nand hit Enter. Yup, x is there. R knows what it is. You may be wondering about the [1] that appears at the beginning of the line. To see what that means, try typing this (and hit Enter—at some point here I’m going to stop reminding you to hit Enter after everything you type):\n\ny &lt;- letters\n\nR is clever, so the alphabet is built in under the name letters.\nType\n\ny\n\nNow can you see what the [1] meant above? Assuming the letters spilled onto more than one line of the Console, you should see a number in brackets at the beginning of each line telling you the numerical position of the first entry in each new line.\nSince we’ve done a few things, check out the “Global Environment” in the upper-right corner. You should see the two objects we’ve defined thus far, x and y. Now click on the “History” tab. Here you have all the commands you have run so far. This can be handy if you need to go back and re-run an earlier command, or if you want to modify an earlier command and it’s easier to edit it slightly than type it all over again. To get an older command back into the Console, either double-click on it, or select it and click the “To Console” button at the top of the pane.\nWhen we want to re-use an old command, it has usually not been that long since we last used it. In this case, there is an even more handy trick. Click in the Console so that the cursor is blinking at the blank command prompt. Now hit the up arrow on your keyboard. Do it again. Now hit the down arrow once or twice. This is a great way to access the most recently used commands from your command history.\nLet’s do something with x. Type\n\nsum(x)\n\nI bet you figured out what just happened.\nNow try\n\nmean(x)\n\nWhat if we wanted to save the mean of those five numbers for use later? We can assign the result to another variable! Type the following and click on the Environment tab to observe the effect.\n\nm &lt;- mean(x)\n\nIt makes no difference what letter or combination of letters we use to name our variables. For example,\n\nmean_x &lt;- mean(x)\n\njust saves the mean to a differently named variable. In general, variable names can be any combination of characters that are letters, numbers, underscore symbols (_), and dots (.). (In this course, we will prefer underscores over dots.) You cannot use spaces or any other special characters in the names of variables.1 You should avoid variable names that are the same words as predefined R functions; for example, we should not type mean &lt;- mean(x).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#load-packages",
    "href": "01-intro_to_r.html#load-packages",
    "title": "1  Introduction to R",
    "section": "1.6 Load packages",
    "text": "1.6 Load packages\nPackages are collections of commands, functions, and sometimes data that people all over the world write and maintain. These packages extend the capabilities of R and add useful tools. For example, we would like to use the palmerpenguins package because it includes an interesting data set on penguins.\nType the following at the command prompt in the Console:2\n\ninstall.packages(\"palmerpenguins\")\n\nWe are doing this because you’ve never used the palmerpenguins package before. Once a package is installed, though, it never has to be installed again.\nAfter we’ve installed the package (the one-time process we completed above), we will need to load the package in every R session in which we want to use it. For example, the palmerpenguins package contains a data set called penguins. Let’s see what happens when we try to access this data set without loading the package that contains it. Typing this will produce an error:\n\npenguins\n\nThat error makes sense because R doesn’t know anything about a data set called penguins.\nBut since the palmerpenguins package has been installed, you can now type this at the command prompt:\n\nlibrary(palmerpenguins)\n\nIt didn’t look like anything happened. However, in the background, all the stuff in the palmerpenguins package became available to use.\nLet’s test that claim. Hit the up arrow twice and get back to where you see this at the Console (or you can manually re-type it, but that’s no fun!):\n\npenguins\n\nNow R knows about the penguins data, so the last command printed some of it to the Console.\nGo look at the “Packages” tab in the pane in the lower-right corner of the screen. Scroll down a little until you get to the “P”s. You should be able to find the palmerpenguins package. You’ll also notice a check mark by it, indicating that this package is loaded into your current R session.\nYou must use the library command in every new R session in which you want to use a package. If you terminate your R session, R forgets about the package. If you are ever in a situation where you are trying to use a command and you know you’re typing it correctly, but you’re still getting an error, check to see if the package containing that command has been loaded with library. (Many R commands are “base R” commands, meaning they come with R and no special package is required to access them. The set of letters you used above is one such example.)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#getting-help",
    "href": "01-intro_to_r.html#getting-help",
    "title": "1  Introduction to R",
    "section": "1.7 Getting help",
    "text": "1.7 Getting help\nThere are three important ways to get help with R. The first is the obvious “Help” tab in the lower-right pane on your screen. Click on that tab now. In the search bar at the right, type penguins and hit Enter. Take a few minutes to read the help file.\nHelp files are only as good as their authors. Fortunately, most package developers are conscientious enough to write decent help files. But don’t be surprised if the help file doesn’t quite tell you what you want to know. And for highly technical R functions, sometimes the help files are downright inscrutable. Try looking at the help file for the grep function. Can you honestly say you have any idea what this command does or how you might use it? Over time, as you become more knowledgeable about how R works, these help files get less mysterious.\nThe second way of getting help is from the Console. Go to the Console and type\n\n?letters\n\nThe question mark tells R you need help with the R command letters. This will bring up the help file in the same Help pane you were looking at before.\nSometimes, you don’t know exactly what the name of the command is. For example, suppose we misremembered the name and thought it was letter instead of letters. Try typing this:\n\n?letter\n\nYou should have received an error because there is no command called letter. Try this instead:\n\n??letter\n\nand scroll down a bit in the Help pane. Two question marks tell R not to be too picky about the spelling. This will bring up a whole bunch of possibilities in the Help pane, representing R’s best guess as to what you might be searching for. (In this case, it’s not easy to find. You’d have to know that the help file for letters appeared on a help page called base::Constants.)\nThe third way to get help—and often the most useful way—is to use your best friend, the internet. You don’t want to just type “R” into a search engine. (That’s the downside of using a single letter of the alphabet for the name of a programming language.) However, if you type “R __________” where you fill in the blank with the topic of interest, search engines usually do a pretty good job sending you to relevant pages. Within the first few hits, in fact, you’ll often see an online copy of the same help file you see in R. Frequently, the next few hits lead to StackOverflow where very knowledgeable people post very helpful responses to common questions.\nUse a search engine to find out how to take the square root of a number in R. Test out your newly-discovered function on a few numbers in the Console to make sure it works.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#understanding-the-data",
    "href": "01-intro_to_r.html#understanding-the-data",
    "title": "1  Introduction to R",
    "section": "1.8 Understanding the data",
    "text": "1.8 Understanding the data\n\n\n\nAdélie Penguin, By Andrew Shiva / Wikipedia, CC BY-SA 4.0, Link\n\n\nLet’s go back to the penguins data contained in the penguins data set from the palmerpenguins package.\nThe first thing we do to understand a data set is to read the help file on it. (We’ve already done this for the penguins data.) Of course, this only works for data files that come with R or with a package that can be loaded into R. If you are using R to analyze your own data, presumably you don’t need a help file. And if you’re analyzing data from another source, you’ll have to go to that source to find out about the data.\nWhen you read the help file for penguins, you may have noticed that it described the “Format” as being “A tibble with 344 rows and 8 variables.” What is a “tibble”?\nThe word “tibble” is an R-specific term that describes data organized in a specific way. A more common term is “data frame” (or sometimes “data table”). The idea is that in a data frame, the rows and the columns have very specific interpretations.\nEach row of a data frame represents a single object or observation. So in the penguins data, each row represents a penguin. If you have survey data, each row will usually represent a single person. But an “object” can be anything about which we collect data. State-level data might have 50 rows and each row represents an entire state.\nEach column of a data frame represents a variable, which is a property, attribute, or measurement made about the objects in the data. For example, the help file mentions that various pieces of information are recorded about each penguin, like species, bill length, flipper length, body mass, sex, and so on. These are examples of variables. In a survey, for example, the variables will likely be the responses to individual questions.\nWe will use the terms tibble and data frame interchangeably in this course. They are not quite synonyms: tibbles are R-specific implementations of data frames, the latter being a more general term that applies in all statistical contexts. Nevertheless, there are no situations (at least not encountered in this course) where it makes any difference if a data set is called a tibble or a data frame.\nWe can also look at the data frame in “spreadsheet” form. Type\n\nView(penguins)\n\n(Be sure you’re using an upper-case “V” in View.) A new pane should open up in the upper-left corner of the screen. In that pane, the penguins data appears in a grid format, like a spreadsheet. The observations (individual penguins) are the rows and the variables (attributes and measurements about the penguins) are the columns. This will also let you sort each column by clicking on the arrows next to the variable name across the top.\nSometimes, we just need a little peek at the data. Try this to print just a few rows of data to the Console:\n\nhead(penguins)\n\nWe can customize this by specifying the number of rows to print. (Don’t forget about the up arrow trick!)\n\nhead(penguins, n = 10)\n\nThe tail command does something similar, but for data from the last few rows.\n\ntail(penguins)\n\nWhen we’re working with HTML documents like this one, it’s usually not necessary to use View, head, or tail because the HTML format will print the data frame a lot more neatly than it did in the Console. You do not need to type the following code; just look below it for the table that appears.\n\npenguins\n\nYou can scroll through the rows by using the numbers at the bottom or the “Next” button. You can scroll through the variables by clicking the little black arrow pointed to the right in the upper-right corner. The only thing you can’t do here that you can do with View is sort the columns.\nWe want to understand the “structure” of our data. For this, we use the str command. Try it:\n\nstr(penguins)\n\nThis tells us several important things. First it says that we are looking at a data frame with 344 observations of 8 variables. We can isolate those pieces of information separately as well, if needed:\n\nNROW(penguins)\n\n\nNCOL(penguins)\n\nThese give you the number of rows and columns, respectively.\nThe str command also tells us about each of the variables in our data set. We’ll talk about these later.\nWe need to be able to summarize variables in the data set. The summary command is one way to do it:\n\nsummary(penguins)\n\nYou may not recognize terms like “Median” or “1st Qu.” or “3rd Qu.” yet. Nevertheless, you can see why this summary could come in handy.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#understanding-the-variables",
    "href": "01-intro_to_r.html#understanding-the-variables",
    "title": "1  Introduction to R",
    "section": "1.9 Understanding the variables",
    "text": "1.9 Understanding the variables\nWhen we want to look at only one variable at a time, we use the dollar sign to grab it. Try this:\n\npenguins$body_mass_g\n\nThis will list the entire body_mass_g column, in other words, the body masses (in grams) of all the penguins in this particular study. If we only want to see the first few, we can use head like before.\n\nhead(penguins$body_mass_g)\n\nIf we want the structure of the variable body_mass_g, we do this:\n\nstr(penguins$body_mass_g)\n\nNotice the letters int at the beginning of the line. That stands for “integer” which is another word for whole number. In other words, the penguins’ body masses all appear in this data set as whole numbers. There are other data types you’ll see in the future:\n\nnum: This is for general numerical data (which can be integers as well as having decimal parts).\nchr: This means “character”, used for character strings, which can be any sequence of letters or numbers. For example, if the researcher recorded some notes for each penguin, these notes would be recorded in a character variable.\nfactor: This is for categorical data, which is data that groups observations together into categories. For example, species is categorical. These are generally recorded like character strings, but factor variables have more structure because they take on a limited number of possible values corresponding to a generally small number of categories. We’ll learn a lot more about factor variables in future chapters.\n\nThere are other data types, but the ones above are by far the most common that you’ll encounter on a regular basis.\nIf we want to summarize only the variable body_mass_g, we can do this:\n\nsummary(penguins$body_mass_g)\n\nWhile executing the commands above, you may have noticed entries listed as NA. These are “missing” values. It is worth paying attention to missing values and thinking carefully about why they might be missing. For now, just make a mental note that NA is the code R uses for data that is missing. (This would be the same as a blank cell in a spreadsheet.)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#projects",
    "href": "01-intro_to_r.html#projects",
    "title": "1  Introduction to R",
    "section": "1.10 Projects",
    "text": "1.10 Projects\nUsing files in R requires you to be organized. R uses what’s called a “working directory” to find the files it needs. Therefore, you can’t just put files any old place and expect R to be able to find them.\nOne way of ensuring that files are all located where R can find them is to organize your work into projects.\n\nIf you are using Posit Cloud, you have already created a project. It will say “Untitled project” at the top of the screen.\n\nClick on the words “Untitled project” and type “intro_stats”. You may skip the next set of bullet points.\n\nIf you are using a local installation of RStudio, look in the far upper-right corner of the RStudio screen. You should see some text that says Project: (None). This means we are not currently in a project and we need to to create one.\n\nOpen the drop-down menu here and select New Project. When the dialog box opens, select New Directory, then New Project. You’ll need to give your project a name. In this case, type intro_stats for the “Directory name”. Leave everything else alone and click Create Project. You will see the screen refresh and R will restart. If everything worked the way it should, creating a new project will create a new folder, put you in that folder, and automatically make it your working directory.\n\n\nIn general, project names should be descriptive—they should still remind you in several years what the project was about. The only thing to remember is that project names and file names should not have any spaces in them. In fact, you should avoid other kinds of special characters as well, like commas, number signs, etc. Stick to letters and numerals and you should be just fine. If you want a multi-word project name or file name, I recommend using underscores. R will allow you to name projects with spaces and modern operating systems are set up to handle file names with spaces, but there are certain things that either don’t work at all or require awkward workarounds when file names have spaces.\nYou will see a file in the Files pane with file extension .Rproj, but you should never touch that file. It’s just for RStudio to keep track of your project details.\nAny additional files you need for your project should be placed in this directory. In all future chapters, the first thing you will do is download the chapter file from the book website and place it here in your project folder. If you are using RStudio through a web browser, you’ll need to upload files to your project folder using the “Upload” button in the Files tab. If you have installed R and RStudio on your own machine, you’ll need to navigate your system to find the downloaded file and move or copy it to your project working directory. (It’s likely in a folder called “Downloads”. But if it’s not and you need to find it elsewhere, this is done most easily using File Explorer in Windows and the Finder in MacOS.)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#conclusion",
    "href": "01-intro_to_r.html#conclusion",
    "title": "1  Introduction to R",
    "section": "1.11 Conclusion",
    "text": "1.11 Conclusion\nIt is often said that there is a steep learning curve when learning R. This is true to some extent. R is harder to use at first than other types of software. Nevertheless, in this course, we will work hard to ease you over that first hurdle and get you moving relatively quickly. Don’t get frustrated and don’t give up! Learning R is worth the effort you put in. Eventually, you’ll grow to appreciate the power and flexibility of R for accomplishing a huge variety of statistical tasks.\nOnward and upward!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "01-intro_to_r.html#footnotes",
    "href": "01-intro_to_r.html#footnotes",
    "title": "1  Introduction to R",
    "section": "",
    "text": "The official spec says that a valid variable name “consists of letters, numbers and the dot or underline characters and starts with a letter or the dot not followed by a number.”↩︎\nIf you get an authorization error, that means you are accessing RStudio through a managed local server and you’ll need your admin to install the package for you.↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html",
    "href": "02-using_quarto-web.html",
    "title": "2  Using Quarto",
    "section": "",
    "text": "2.1 Introduction\nThis chapter will teach you how to use Quarto to create quality documents that incorporate text and R code seamlessly.\nFirst, though, let’s make sure you are set up in your project in RStudio.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#introduction",
    "href": "02-using_quarto-web.html#introduction",
    "title": "2  Using Quarto",
    "section": "",
    "text": "2.1.1 Are you in your project?\nIf you followed the directions at the end of the last chapter, you should have created/named a project called intro_stats. Let’s make sure you’re in that project.\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen. Does it say intro_stats? If so, congratulations! You are in your project.\nIf you’re not in the intro_stats project,\n\nin Posit Cloud, click on “Your Workspace” and click on the “intro_stats” project you created in the last chapter.\nfor local installations, click on whatever it does say in the upper right corner (probably Project: (None)). You can click “Open Project” but it’s likely that the intro_stats project appears in the drop-down menu in your list of recently accessed projects. So click on the project intro_stats.\n\n\n\n2.1.2 Install new packages\nType the following commands at the Console:1\n\ninstall.packages(\"rmarkdown\")\ninstall.packages(\"tidyverse\")\n\nIt may take a few minutes to install these packages, especially tidyverse, so be patient.\n\n\n2.1.3 Download the Quarto file\nYou need to download this chapter as an Quarto (.qmd) file. Please click the following link to do so:\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/02-using_quarto.qmd\nThe file is now likely sitting in a Downloads folder on your machine (or wherever you have set up for web files to download).\n\nIf you are logged into RStudio on a web browser, go to the Files tab and click the “Upload” button. From there, leave the first box alone (“Target directory”). Click the “Choose File” button and navigate to the folder on your machine containing the file 02_using-quarto.qmd. Select that file and click “OK” to upload the file. Then you will be able to open the file in RStudio simply by clicking on it in the Files pane.\nIf you using RStudio on your own machine, you will need to move the file from your Downloads folder into the intro_stats project directory you created at the end of the last chapter. (Again, if you haven’t created the intro_stats project, please go back to Chapter 1 and follow the directions for doing that.) Moving files around is most easily done using File Explorer in Windows or the Finder in MacOS.\n\nAt this point, you should be reading this text while looking at it in the left pane of RStudio, after opening up the Quarto (.qmd) file and scrolling down until you reach this spot. If you are reading this text while still browsing the book online, be aware that there are several instructions below that won’t make any sense because you’re not looking at the plain text file with all the code in it. Much of the material in this book can be read and enjoyed online, but the real learning comes from downloading the chapter files (starting with Chapter 2—this one) and working through them in RStudio.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#what-is-quarto",
    "href": "02-using_quarto-web.html#what-is-quarto",
    "title": "2  Using Quarto",
    "section": "2.2 What is Quarto?",
    "text": "2.2 What is Quarto?\nBefore we can talk about Quarto documents, we need to talk about markdown.\nMarkdown is a way of using plain text with simple characters to indicate formatting choices in a document. For example, in a markdown file, one can make headers by using number signs (or hashtags as the kids are calling them these days2). The Quarto file itself is just a plain text file. To see the formatting, the file has to be converted to HTML, which is the format used for web pages. (This process is described below.)\nQuarto documents are just text files that use markdown. They also allow you to include R code alongside the text. Here’s an example of a “code chunk”:\n\n1 + 1\n\n[1] 2\n\n\nClick the little dark green, right-facing arrow in the upper-right corner of the code chunk. (The icon I’m referring to is next to a lighter green icon with a downward-facing arrow.) When you “run” the code chunk like this, R produces the appropriate output. We’ll say more about code chunks later in this document.\nThis document—with text and code chunks together—is called an Quarto document.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#rendering-a-document",
    "href": "02-using_quarto-web.html#rendering-a-document",
    "title": "2  Using Quarto",
    "section": "2.3 Rendering a document",
    "text": "2.3 Rendering a document\nThere is a button in the toolbar right above the text that says “Render”. It’s next to a big, blue arrow. Go ahead and click it. See what happens.\nOnce the pretty output is generated, take a few moments to look back and forth between it and the original Quarto document (the plain text in RStudio). You can see some tricks that we won’t need much (embedding web links, making lists, etc.) and some tricks that we will use in every chapter (like R code chunks).\nAt first, you’ll want to work back and forth between the Quarto document and the HTML file to get used to how the formatting in the plain text file get translated to output in the HTML file. You can hit the Render button any time you want to update the HTML output with your most recent changes. After a while, you will look at the HTML file less often and work mostly in the Quarto file, only rendering the final HTML output occasionally, most importantly when you are finished and ready to produce your final draft.\nOne additional benefit of rendering often is that it also automatically saves your progress. If you choose to render less often, you’ll want to save your document manually from time to time just so you don’t lose any work in case of a computer malfunction. (The easiest way to save things in pretty much every piece of software anywhere is to use the keyboard shortcut Ctrl-S in Windows or Cmd-S in MacOS.)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#literate-programming",
    "href": "02-using_quarto-web.html#literate-programming",
    "title": "2  Using Quarto",
    "section": "2.4 Literate programming",
    "text": "2.4 Literate programming\nQuarto is one way to implement a “literate programming” paradigm. The concept of literate programming was famously described by Donald Knuth, an eminent computer scientist. The idea is that computer programs should not appear in sterile files that are full of hard-to-read, abstruse lines of computer code. Instead, functional computer code should appear interspersed with writing that explains the code.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#reproducible-research",
    "href": "02-using_quarto-web.html#reproducible-research",
    "title": "2  Using Quarto",
    "section": "2.5 Reproducible research",
    "text": "2.5 Reproducible research\nOne huge benefit of organizing your work into Quarto documents is that it makes your work reproducible. This means that anyone with access to your data and your Quarto document should be able to re-create the exact same analysis you did.\nThis is a far cry from what generally happens in research. For example, if a person does all their work in Microsoft Excel, they make a series of choices in how they format and analyze their data, and all those choices take the form of menu commands that they point and click with a mouse. There is no record of the exact sequence of clicks that took them from point A to B all the way to Z. All they have to show for their work is the “clean” spreadsheet and anything they’ve written down or communicated about their results. If there were any errors along the way, they would be very hard to track down.3\nReproducibility should be a minimum prerequisite for all statistical analysis. Sadly, that is not the case in most of the research world. We are training you to be better.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#structure-of-a-quarto-document",
    "href": "02-using_quarto-web.html#structure-of-a-quarto-document",
    "title": "2  Using Quarto",
    "section": "2.6 Structure of a Quarto document",
    "text": "2.6 Structure of a Quarto document\nLet’s start from the top. Look at the very beginning of the plain Quarto document. (If you’re in RStudio, you are looking at the Quarto document. If you are looking at the pretty HTML file, you’ll need to go back to RStudio.) The section at the very top of the file that starts and ends with three hyphens is called the YAML header. (Search for YAML on the internet it if you really care why.) The title of the document appears already, but you’ll need to substitute your name and date in the obvious place. Scroll up and do that now. Come back here when you’re done.\nYou’ve made changes to the document, so you’ll need to push the “Render” button again. Once that’s done, look at the resulting HTML document. The YAML header has been converted into a nicely formatted document header with the new information you’ve provided.\nNext, you’ll see three colons followed by the text {.callout-note}. Then there is some text that lists R functions that will be introduced in the chapter. (There aren’t any in this chapter, but there usually will be in future chapters.) Then there are three more colons. It’s very important that you do not modify the three colons or any of the text that appears on the same line in the the curly braces next to the colons! This will mess up your ability to Render the document.\nAnother place you will see the three-colon “tags” will be when providing answers to homework questions. It will start with three colons next to {.answer} and end with three colons. While you should be careful not to modify those tags, you can and should modify the plain text that lies between the colon tag fences. Let’s try it:\n\nReplace this text here with something else. (Anything you want to type here is fine.) Then render the document and see how it appears in the HTML file.\n\nTo be clear, the colorful answer boxes are not part of the standard Quarto tool set. The custom code to create those answer boxes is imported from the book’s website.\nWe also have section headers throughout, which in the Quarto file look like:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#section-header",
    "href": "02-using_quarto-web.html#section-header",
    "title": "2  Using Quarto",
    "section": "2.7 Section header",
    "text": "2.7 Section header\nThe hashtags are markdown code for formatting headers. Additional hashtags will create subsections:\n\n2.7.1 Not quite as big\nWe could actually use a single number sign, but # makes a header as big as the title, which is too big and is reserved for the main title of the whole document. Therefore, we will use ## for section headers and ### for subsections.\nYou do need to make sure that there is a blank line before and after each section header. To see why, look at the HTML document at this spot: ## Is this a new section? Do you see the problem?\nPut a blank line before and after the line above that says “Is this a new section?” Render one more time and make sure that the line now shows up as a proper section header.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#other-formatting-tricks",
    "href": "02-using_quarto-web.html#other-formatting-tricks",
    "title": "2  Using Quarto",
    "section": "2.8 Other formatting tricks",
    "text": "2.8 Other formatting tricks\nYou can make text italic or bold by using asterisks. (Don’t forget to look at the HTML to see the result.)\nYou can make bullet-point lists. These can be made with asterisks, but you’ll need to start after a blank line, then put asterisks at the beginning of each new line, followed by a space, as follows:\n\nFirst item\nSecond item\n\nIf you want sub-items, indent at least two spaces and use another asterisk followed by a space.\n\nItem\n\nSub-item\nSub-item\n\nItem\nItem\n\nOr you can make ordered lists. Just use numbers and Quarto will do all the work for you. (Again, make sure you’re starting after a blank line and that there is a space after the periods.)\n\nFirst Item\nSecond Item\nThird Item\n\nWe can make horizontal rules. There are lots of ways of doing this, but we prefer a bunch of asterisks in a row (at least three—we’ve used five for more visual impact in the Quarto document):\n\nThere are many more formatting tricks available. For a good resource on all Quarto stuff, click on this link. And notice in the previous sentence the syntax for including hyperlinks in your document.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#r-code-chunks",
    "href": "02-using_quarto-web.html#r-code-chunks",
    "title": "2  Using Quarto",
    "section": "2.9 R code chunks",
    "text": "2.9 R code chunks\nThe most powerful feature of Quarto is the ability to do data analysis right inside the document. This is accomplished by including R code chunks. An R code chunk doesn’t just show you the R code in your output file; it also runs that code and generates output that appears right below the code chunk.\nAn R code chunk starts with three “backticks” followed by the letter r enclosed in braces, and it ends with three more backticks. (The backtick is usually in the upper-left corner of your keyboard, next to the number 1 and sharing a key with the tilde ~.)\nIn RStudio, click the little dark green, right-facing arrow in the upper-right corner of the code chunk below, just as you did earlier.\n\n# Here's some sample R code\ntest &lt;- c(1, 2, 3, 4)\nsum(test)\n\n[1] 10\n\n\nAfter pushing the dark green arrow, you should notice that the output of the R code appeared like magic. If you Render the HTML output, you should see the same output appear. If you hover your mouse over the dark green arrow, you should see the words “Run Current Chunk”. We’ll call this the Run button for short.\nWe need to address something here that always confuses people new to R and Quarto. A number sign (aka “hashtag”) in a Quarto document gives us section headers. In R code, however, a number sign indicates a “comment” line. In the R code above, the line # Here's some sample R code is not executed as R code. But you can clearly see that the two lines following were executed as R code. So be careful! Number signs inside and outside R code chunks behave very differently.\nTypically, the first code chunk that appears in our document will load any packages we need. We will be using a package called tidyverse (which is really a collection of lots of different packages) throughout the course. We load it now. Click on the Run button (the dark green, right-facing arrow) in the code chunk below. (If you get an error that says “there is no package called tidyverse” that means you failed to install it earlier. Go back and use install.packages as instructed at the top of this document.)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nThe output here consists of a bunch of information generated when trying to load the package. These are not errors, even though one section is labeled “Conflicts”. Usually, errors appear with the word “Error”, so it’s typically clear when something just didn’t work. Also note that once you’ve loaded a package, you don’t need to load it again until you restart your R session. For example, if you go back and try to run the code chunk above one more time, the output will disappear. That’s because tidyverse is already loaded, so the second “run” doesn’t actually generate output anymore.\nOkay, let’s do something interesting now. We’ll revisit the penguins data set we introduced in the previous chapter. Remember, though, that this data set also lives in a package that needs to be loaded. Run the code chunk below to load the palmerpenguins package. (There may not be any output. But the command worked silently in the background to load the palmerpenguins package.)\n\nlibrary(palmerpenguins)\n\nLet’s see what happens when we try to run multiple commands in one code chunk:\n\nhead(penguins)\n\n\n  \n\n\ntail(penguins)\n\n\n  \n\n\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\nIf you’re looking at this in RStudio, it’s a bit of a mess. RStudio did its best to give you what you asked for, but there are three separate commands here. The first two (head and tail) print some of the data, so the first two boxes of output are tables showing you the head and the tail of the data. The next one (str) normally just prints some information to the Console. So RStudio gave you an R Console box with the output of this command.\nIf you look at the HTML file, you can see the situation isn’t as bad. Each command and its corresponding output appear nicely separated there.\nNevertheless, it will be good practice and a good habit to get into to put multiple output-generating commands in their own R code chunks. Run the following code chunks and compare the output to the mess you saw above:\n\nhead(penguins)\n\n\n  \n\n\n\n\ntail(penguins)\n\n\n  \n\n\n\n\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\nThis won’t look any different in the HTML file, but it sure looks a lot cleaner in RStudio.\nWhat about the two lines of the first code chunk we ran above?\n\ntest &lt;- c(1, 2, 3, 4)\nsum(test)\n\n[1] 10\n\n\nShould these two lines be separated into two code chunks? If you run it, you’ll see only one piece of output. That’s because the line test &lt;- c(1, 2, 3, 4) works invisibly in the background. The vector test gets assigned, but no output is produced. Try it and see (push the Run button):\n\ntest &lt;- c(1, 2, 3, 4)\n\nSo while there’s no harm in separating these lines and putting them in their own chunks, it’s not strictly necessary. You really only need to separate lines when they produce output. (And even then, if you forget, RStudio will kindly give you multiple boxes of output.)\nSuppose we define a new variable called test2 in a code chunk. FOR PURPOSES OF THIS EXERCISE, DO NOT HIT THE RUN BUTTON YET! But do go look at the HTML file.\n\ntest2 &lt;- c(\"a\", \"b\", \"c\")\ntest2\n\n[1] \"a\" \"b\" \"c\"\n\n\nThe first line defines test2 invisibly. The second line asks R to print the value of test2, and the HTML document shows the vector of three letters printed in the output below the code chunk. DON’T HIT THE RUN BUTTON YET!\nOkay, now go to the Console in RStudio (in the lower left corner of the screen). Try typing test2. You should get an “Error: object ‘test2’ not found.”\nWhy does this happen? The Global Environment doesn’t know about it yet. Look in the upper right corner of the screen, under the “Environment” tab. You should see test, but not test2.\nOkay, NOW GO BACK AND CLICK THE RUN BUTTON IN THE LAST CHUNK ABOVE. The output appears in RStudio below the code chunk and the Global Environment has been updated.\nThe take home message is this:\nBe sure to run all your code chunks in RStudio!\nIn RStudio, look in the toolbar above this document, toward the right. You should see the word “Run” with a little drop-down menu next to it. Click on that drop-down menu and select “Run All”. Do you see what happened? All the code chunks ran again, and that means that anything in the Global Environment will now be updated to reflect the definitions made in the Quarto document.\nIt’s a good idea to “Run All” when you first open a new Quarto document. This will ensure that all your code chunks have their output below them (meaning you don’t have to go through and click the Run button manually for each chunk, one at a time) and the Global Environment will accurately reflect the variables you are using.\nYou can “Run All” from time to time, but it’s easier just to “Run All” once at the beginning, and then Run individual R code chunks manually as you create them.\nNow go back to the Environment tab and find the icon with the little broom on it. Click it. You will get a popup warning you that you about to “remove all objects from the environment”. Click “Yes”. Now the Global Environment is empty. Go back to the “Run” menu and select “Run All”. All the objects you defined in the Quarto document are back.\nClearing out your environment can be useful from time to time. Maybe you’ve been working on a chapter for a while and you’ve tried a bunch of stuff that didn’t work, or you went back and changed a bunch of code. Eventually, all that junk accumulates in your Global Environment and it can mess up your Quarto document. For example, let’s define a variable called my_variable.\n\nmy_variable &lt;- 42\n\nThen, let’s do some calculation with my_variable.\n\nmy_variable * 2\n\n[1] 84\n\n\nPerhaps later you decide you don’t really need my_variable. Put a hashtag in front of the code my_variable &lt;- 42 to comment it out so that it will no longer run, but don’t touch the next code chunk where you multiply it by 2. Now try running the code chunk with my_variable * 2 again. Note that my_variable is still sitting in your Global Environment, so you don’t get any error messages. R can still see and access my_variable.\nNow go to the “Run” menu and select “Restart R and Run All Chunks”. This clears the Global Environment and runs all the R code starting from the top of the Quarto document. This time you will get an error message: object 'my_variable' not found. You’ve tried to calculate with a variable called my_variable that doesn’t exist anymore. (The line in which it was defined has been commented out.)\nIt’s best to make sure all your code chunks will run when loaded from a clean R session. The “Restart R and Run All Chunks” option is an easy way to both clear your environment and re-run all code chunks. You can do this as often as you want, but you will definitely want to do this one last time when you are done. At the end of the chapter, when you are ready to prepare the final draft, please select “Restart R and Run All Chunks”. Make sure everything still works!\nTo get rid of the error above, uncomment the line my_variable &lt;- 42 by removing the hashtag you added earlier.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#inline-r-commands",
    "href": "02-using_quarto-web.html#inline-r-commands",
    "title": "2  Using Quarto",
    "section": "2.10 Inline R commands",
    "text": "2.10 Inline R commands\nYou don’t need a standalone R code chunk to do computations. One neat feature is the ability to use R to calculate things right in the middle of your text.\nHere’s an example. Suppose we wanted to compute the mean body mass (in grams) for the penguins in the penguins data set. We could do this:\n\nmean(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 4201.754\n\n\n(The na.rm = TRUE part is necessary because two of the penguins are missing body mass data. More on missing data in future chapters.)\nBut we can also do this inline by using backticks and putting the letter r inside the first backtick. Go to the HTML document to see how the following sentence appears:\nThe mean body mass for penguins in the penguins data set is 4201.754386 grams.\nYou can (and should) check to make sure your inline R code is working by checking the HTML output, but you don’t necessarily need to go to the HTML file to find out. In RStudio, click so that the cursor is somewhere in the middle of the inline code chunk in the paragraph above. (In other words, click on some part of the text in between the backticks.) Now hit Ctrl-Enter or Cmd-Enter (PC or Mac respectively). A little box should pop up that shows you the answer!\nNotice that, in addition to the inline R command that calculated the mean, we also enclosed penguins in backticks to make it stand out in the output. We’ll continue to do that for all computer commands and R functions. But to be clear, putting a word in backticks is just a formatting trick. If you want inline R code, you also need the letter r followed by a space inside the backticks.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#inline-r-command-errors",
    "href": "02-using_quarto-web.html#inline-r-command-errors",
    "title": "2  Using Quarto",
    "section": "2.11 Inline R command errors",
    "text": "2.11 Inline R command errors\nWorking with inline code is trickier than working with code chunks. When a code chunk fails, the error message appears right there below the chunk. When inline code fails, it manifests in more subtle ways.\nObserve the simple inline code below:\n5\nThis code works just fine. (Test this yourself by clicking somewhere between the backticks and hitting Ctrl-Enter or Cmd-Enter.)\nHit the Render button and scroll down in the HTML document to see what appears here.\nNow go up and change the inline code by adding a percent sign (%) after the 3 (so it will look like 2+3%).\nClick somewhere between the backticks and hit Ctrl-Enter or Cmd-Enter. You should get an error.\nNext, go to the Run menu and select “Restart R and Run All Chunks.” You get no errors. This makes sense because all the code chunks are working fine. The broken code is inline, not inside a code chunk.\nNow try to hit the Render button. The “Background Jobs” tab will stay open with a bunch of error text. Scroll up a little in that error text until you see\nFailed to parse the inline R code\nThat’s the only hint we have as to where the problem might live. We happen to know where to find the offending code, but imagine this code were buried in the middle of some long document.\nThe easiest solution is to use Ctrl-F or Cmd-F. This will open the “Find” tool. Start typing “2+3%” and it will take you to the problematic spot.\nFix the error by deleting the percent sign. Now hit the Render button again to make sure the problem really got fixed and that the output now appears correctly in the HTML document.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#copying-and-pasting",
    "href": "02-using_quarto-web.html#copying-and-pasting",
    "title": "2  Using Quarto",
    "section": "2.12 Copying and pasting",
    "text": "2.12 Copying and pasting\nIn future chapters, you will be shown how to run statistical analyses using R. Each chapter will give extensive explanations of the statistical concepts and demonstrations of the necessary R code. Afterwards, there will be one or more exercises that ask you to apply your new-found knowledge to run similar analyses on your own with different data.\nThe idea is that you should be able to copy and paste the R code from the previously worked examples. But you must be thoughtful about how you do this. The code cannot just be copied and pasted blindly. It must be modified so that it applies to the exercises with new data. This requires that you understand what the code is doing. You cannot effectively modify the code if you don’t know which parts to modify.\nThere will also be exercises in which you are asked to provide your own explanations and interpretations of your analyses. These should not be copied and pasted from any previous work. These exercises are designed to help you understand the statistical concepts, so they must be in your own words, using your own understanding.\nIn order to be successful in these chapters, you must do the following:\n\nRead every part of the chapter carefully!\n\n\nIt will be tempting to skim over the paragraphs quickly and just jump from code chunk to code chunk. This will be highly detrimental to your ability to gain the necessary understanding—not just to complete the chapter, but to succeed in statistics overall.\n\n\nCopy and paste thoughtfully!\n\n\nNot every piece of code from the early part of the chapter will necessarily apply to the later exercises. And the code that does apply will need to be modified (sometimes quite heavily) to be able to run new analyses. Your job is to understand how the code works so that you can make changes to it without breaking things. If you don’t understand a piece of code, don’t copy and paste it until you’ve read and re-read the earlier exposition that explains how the code works.\n\nOne final note about copying and pasting. Sometimes, people will try to copy and paste code from the HTML output file. This is a bad idea. The HTML document uses special characters to make the output look pretty, but these characters don’t actually work as plain text in a Quarto document. The same applies to things copied and pasted from a Word document or another website. If you need to copy and paste code, be sure to find the plain text Quarto file (the one with the .qmd extension here in RStudio) and copy and paste from that.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#conclusion",
    "href": "02-using_quarto-web.html#conclusion",
    "title": "2  Using Quarto",
    "section": "2.13 Conclusion",
    "text": "2.13 Conclusion\nThat’s it! There wasn’t too much you were asked to do for this assignment that will actually show up in the HTML output. (Make sure you did do the three things that were asked of you, however: one was adding your name and the date to the YAML header, one was typing something in the blue answer box, and the last was to make a section header appear properly.) As you gain confidence and as we move into more serious stats material, you will be asked to do a lot more.\n\n2.13.1 Preparing and submitting your assignment\nIf you look in your project folder, you should see (at least) three files:\n[a file with a .Rproj extension, either project.Rproj or intro_stats.Rproj]\n02-using_quarto.qmd\n02-using_quarto.html\nThe first file (with extension .Rproj) you were instructed never to touch.\nThe next file has extension .qmd. This is your Quarto file. It’s the file you’re looking at right now. It is really nothing more than a plain text file, although when you open it in RStudio, some magic allows you to see the output from the code chunks you run.\nFinally, you have a file with extension .html. This is the pretty output file generated when you hit the “Render” button. This is the “final product” of your work.\n(If you happen to see other files or folders in your project folder, you should ignore those and not mess with them.)\nThere are several steps that you should follow at the end of each of every chapter.\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "02-using_quarto-web.html#footnotes",
    "href": "02-using_quarto-web.html#footnotes",
    "title": "2  Using Quarto",
    "section": "",
    "text": "If you get an authorization error, that means you are accessing RStudio through a managed local server and you’ll need your admin to install the package for you.↩︎\nAlso called “pound signs” or “octothorpes”. This is also an example of formatting a footnote!↩︎\nIf you think these errors are trivial, Google ``Reinhart and Rogoff Excel error’’ to read about the catastrophic consequences of seemingly trivial Excel mistakes.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html",
    "href": "03-categorical_data-web.html",
    "title": "3  Categorical data",
    "section": "",
    "text": "3.1 Introduction\nIn this chapter, we’ll learn about categorical data and how to summarize it using tables and graphs.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#introduction",
    "href": "03-categorical_data-web.html#introduction",
    "title": "3  Categorical data",
    "section": "",
    "text": "3.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"janitor\")\n\n\n3.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/03-categorical_data.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n3.1.3 Restart R and run all chunks\nIn RStudio, in the toolbar above this document, find the “Run” drop-down menu and select “Restart R and Run All Chunks.”\nThis does two important things:\n\nR will restart. This will clear out the Global Environment and provide a fresh session for this new assignment. None of the clutter from previous chapters will be there to mess up your work in this chapter.\nAll the code chunks in this document will run so that you can see the output as you scroll past it. This saves you some effort in having to click the little green “Run” button in each code chunk as you come across it. (Also, if you forget to run one, that could cause errors later on, so this way, all the variables you need will be in the Global Environment for when they’re needed later.) You will still need to click the green arrow for new code chunks that you create, of course.\n\nAt the end of the assignment, you will “Restart R and Run All Chunks” once again to make sure that everything works smoothly and there are no lingering errors.\n\n\n3.1.4 Load packages\nWe load the tidyverse package since it also loads the ggplot2 package that we’ll use throughout the course to make graphs. It also loads several other packages, for example, one called dplyr to give us a command called mutate, and another called forcats to give us as_factor. (These will all be explained later.) The janitor package gives us the tabyl command for creating nice tables. Finally, We load the palmerpenguins package to work with the penguin data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(palmerpenguins)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#categorical-data",
    "href": "03-categorical_data-web.html#categorical-data",
    "title": "3  Categorical data",
    "section": "3.2 Categorical data",
    "text": "3.2 Categorical data\nData comes in different types depending on what is being measured. When people think of “data”, they often imagine numerical data, consisting of numbers. But there are other kinds of data as well.\nIn this chapter, we focus on categorical data that groups observations into categories.\nFor example, if we record the species of a penguin, that is not a number. It’s a word that classifies that penguin into one of a finite number of types. Whenever you see words in a data set, there’s a good chance that you’re looking at categorical data.\nEven “numbers” can sometimes represent categorical data. For example, suppose in a survey there is a Yes/No question. Instead of seeing the words “Yes” or “No”, though, you might see a data set with ones and zeros, where 1 = Yes and 0 = No. The presence of numbers does not automatically make that data numerical. In fact, the data is categorical. Yes and No are categories that sort the survey respondents into two groups based on their responses to a certain question.\nWhat about ZIP codes? They are recorded as numbers, and unlike the Yes/No example above, those numbers aren’t just substitutes for words. Nevertheless, ZIP codes are categorical. They sort addresses into a finite number of groups based on geographic proximity.\nAnother way to think of it is this: can the numerical values of ZIP codes be treated as numbers in any meaningful way? Can you take a sum or an average of ZIP codes? Sure, technically a computer can add up or average a set of ZIP codes, but would the result be a meaningful number? Since the answer is “no” we cannot think of ZIP codes as numbers, even though they are recorded that way.\n\nExercise 1\nThink of another type of data that would be recorded using numbers but should be thought of as categorical data.\n(Recall from the last chapter that you will record your answers to exercises within an answer block like the one below, demarcated with three colons at both ends. Be VERY careful not mess with these three-colon “tags” or with the code {.answer}. If this code gets messed up, it’s likely that your document will not render. Instead, you will delete the words “Please write up your answer here” and replace them with your answer.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#factor-variables",
    "href": "03-categorical_data-web.html#factor-variables",
    "title": "3  Categorical data",
    "section": "3.3 Factor variables",
    "text": "3.3 Factor variables\nR uses the term “factor variable” to refer to a categorical variable. Look at the structure of the penguins data below.\n\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\nThe categorical variables species, island, and sex are coded correctly as factor variables.\nThe tidyverse package offers a function called glimpse that effectively does the same thing as str. We’ll use glimpse throughout the rest of the course.\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nExercise 2\nLook at the output of str versus glimpse above. Write down any advantages or disadvantages you see using one versus the other. (You may also want to check the help file for the two commands to see if they offer any clues as to why you might use one over the other.)\n\nPlease write up your answer here.\n\n\nYour data set may already come with its variables coded correctly as factor variables, but often they are not. As described above, numbers are often used to represent categories, so R may think that those variables represent numerical data. Later, we’ll see an example of this and learn how to handle categorical variables that are not coded as factor variables in R.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#summarizing-one-categorical-variable",
    "href": "03-categorical_data-web.html#summarizing-one-categorical-variable",
    "title": "3  Categorical data",
    "section": "3.4 Summarizing one categorical variable",
    "text": "3.4 Summarizing one categorical variable\nIf you need to summarize a single categorical variable, a frequency table usually suffices. This is simply a table that counts up all the instances of each category. The word “frequency” is synonymous here with the word “count”.\nWe can use the table command:\n\ntable(penguins$species)\n\n\n   Adelie Chinstrap    Gentoo \n      152        68       124 \n\n\nRecall that the dollar sign means to grab the variable species from the tibble penguins.\nYou can also generate a relative frequency table which is a table that uses proportions or percentages instead of counts.\nNOTE: For purposes of this course, we’re going to be very careful about the terms proportion and percentage. For us, a proportion will always be a number between 0 and 1 whereas a percentage will be between 0 and 100. Calculating a percentage is the same as multiplying a proportion by 100.\nThe table command stops being convenient if you want proportions instead of counts. Instead, we will use the tabyl command from the janitor package that was loaded near the top of the chapter. The syntax for this command is a little different. The tibble goes first, followed by a comma, followed by the variable you want to summarize:\n\ntabyl(penguins, species)\n\n\n  \n\n\n\nNow you get both counts and proportions. Note that in the output above, it’s a little misleading to call the last column “percent”. These are actually proportions, and we would have to multiply by 100 to get percentages.\nIt’s usually nice to have the column totals. We can achieve that by using an adorn function to get them as follows:\n\ntabyl(penguins, species) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\nWe’ll always include the totals at the bottom.\nIf you really want percentages, we can use a different adorn function:\n\ntabyl(penguins, species) |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nAgain, we’ll also include adorn_totals so that we get the column totals.\n\ntabyl(penguins, species) |&gt;\n  adorn_totals() |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nThe syntax above looks a little confusing with the unusual |&gt; symbols everywhere. You will learn more about that weird set of symbols in a later chapter. For now, you can just copy and paste this code and make any necessary changes to the tibble and/or variables names as needed.\n\nExercise 3(a)\nUse the tabyl command as above to create a frequency table for the sex of the penguins. Include the column totals at the bottom. (You will also get a relative frequency table for free.)\n\n\n# Add code here to create a frequency table for sex\n\n\n\n\nExercise 3(b)\nIn the table for sex that you just created, what does the row labeled &lt;NA&gt; mean?\n\nPlease write up your answer here.\n\n\n\nExercise 3(c)\nNow create a relative frequency table for sex that reports percentages and not proportions (still including the column totals at the bottom).\n\n\n# Add code here that reports percentages instead of proportions\n\n\n\n\nExercise 3(d)\nIn the previous tables, what is the difference between percent and valid_percent? Why are there two different sets of percentages being computed?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#graphing-one-categorical-variable",
    "href": "03-categorical_data-web.html#graphing-one-categorical-variable",
    "title": "3  Categorical data",
    "section": "3.5 Graphing one categorical variable",
    "text": "3.5 Graphing one categorical variable\nWhen asked, “What type of graph should I use when graphing a single categorical variable?” the simple answer is “None.” If you do need to summarize a categorical variable, a frequency table usually suffices.\nIf you really, really want a graph, the standard type is a bar chart. But before we can create one, we need to start learning about the very important tool we will use throughout the course for graphing. It’s called ggplot and it’s part of a package called ggplot2.1\nWe don’t have to load the ggplot2 package explicitly because it got loaded alongside a number of other packages when we called library(tidyverse) early on in the chapter.\n\n3.5.1 ggplot\nThe ggplot command is an all-purpose graphing utility. It uses a graphing philosophy derived from a book called The Grammar of Graphics by Leland Wilkinson. The basic idea is that each variable you want to plot should correspond to some element or “aesthetic” component of the graph. The obvious places for data to go are along the y-axis or x-axis, but other aesthetics are important too; graphs often use color, shape, or size to illustrate different aspects of data. Once these aesthetics have been defined, we will add “layers” to the graph. These are objects like dots, boxes, lines, or bars that dictate the type of graph we want to see.\nIn an introductory course, we won’t get too fancy with these graphs. But be aware that there’s a whole field of data visualization that studies clear and interesting ways to understand data graphically.\nIt will be easier to explain the ggplot syntax in the context of specific graph types, so let’s create a bar chart for species.\n\nggplot(penguins, aes(x = species)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nWe’ll walk through this syntax step by step.\n\nThe first argument of the ggplot command is the name of the tibble, in this case, penguins.\nNext we define the aesthetics using aes and parentheses. Inside the parentheses, we assign any variables we want to plot to aesthetics of the graph. For this analysis, we are only interested in the variable species and for a bar chart, the categorical variable typically goes on the x-axis. That’s why it says x = species inside the aes argument.\nFinally, ggplot needs to know what kind of graph we want. Graph types are called “geoms” in the ggplot world, and geom_bar() tells ggplot to add a “bar chart layer”. Adding a layer is accomplished by literally typing a plus sign.\n\nThis can be modified somewhat to give proportions (relative frequencies) on the y-axis instead of counts. Unfortunately, the ggplot syntax is not very transparent here. My recommendation is to copy and paste the code below if you need to make a relative frequency bar chart in the future, making the necessary changes to the tibble and variable names, of course.\n\nggplot(penguins, aes(x = species, y = after_stat(prop), group = 1)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThese bar charts are the graphical analogues of a frequency table and a relative frequency table, respectively.\n\nExercise 4\nIn a sentence or two at most, describe the distribution of species in this data set.\n\nPlease write up your answer here.\n\n\nWhat about pie charts? Just. Don’t.\nSeriously. Pie charts suck: https://medium.com/the-mission/to-pie-charts-3b1f57bcb34a\nOkay, in fairness, here is the opinion of one data visualization researcher who gives a (somewhat qualified) defense of pie charts (in certain narrow situations): https://eagereyes.org/pie-charts\nWe will not be creating any pie charts in this course.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#summarizing-two-categorical-variables",
    "href": "03-categorical_data-web.html#summarizing-two-categorical-variables",
    "title": "3  Categorical data",
    "section": "3.6 Summarizing two categorical variables",
    "text": "3.6 Summarizing two categorical variables\nA table summarizing two categorical variables is called a contingency table (or pivot table, or cross-tabulation, or probably several other terms as well).\nFor example, we might pose the following question: is the distribution of sex among penguins in our data more or less balanced across the three species?\nWhen we work with two variables, typically we think of one variable as response and the other as predictor. The response variable is usually the variable of main interest. A predictor variable is another attribute that might predict or explain more about the response variable. Often, the predictor variable is used to divide our data into groups for comparison.\nFor example, our question is concerned with the sex distribution of penguins. We could create a relative frequency table of sex alone to see if male and female penguins are balanced in the data. In fact, you did that very thing above and saw that, indeed, there were roughly equal numbers of male and female penguins. But is that still true when we divide up the data into the three groups representing the separate species?\nTwo variables are called associated when there is a relationship between them. For example, if sex and species were associated, then the distribution of sex would change depending on the species. Maybe one species of penguin had more females and another had fewer females available to the researchers who compiled this data. Our prediction of the sex distribution would change based on the value of the predictor (grouping) variable species.\nOn the other hand, two variables that are not associated are called independent. Independent variables are not related. If the sex distribution were the same across all species, then knowledge of the species would not change our predictions about the sex of a penguin. It wouldn’t matter because there was no relationship between sex and species.\nMost research questions that involve two or more variables are fundamentally questions of whether a response variable is associated with one or more predictor variables, or whether they are independent.\nLet’s look at a contingency table. The tabyl command will place the first variable listed across the rows and the second one listed down the columns. Since we always include column totals, we want the predictor variable to be the column variable so we can see how the predictor groups are distributed in the data. Always list the response variable first.\n\ntabyl(penguins, sex, species) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\nEach column is a group, and our question is whether the distribution of sexes in each column is similar.\nThe last row of totals is called the marginal distribution (because it sits in the “margin” of the contingency table). It is equivalent to a frequency table for species.\n\nExercise 5\nCounts can be misleading. For example, there are 73 female Adelie penguins, but only 34 female Chinstrap penguins. Does that mean that Adelie penguins are more likely to be female than Chinstrap penguins? Why or why not?\n\nPlease write up your answer here.\n\n\nA more fair way to compare across columns is to create relative frequencies. We can do this with a slightly different adorn command. The following code says that we want to compute column proportions (yes, I know the command is called adorn_percentages, but these are proportions):\n\ntabyl(penguins, sex, species) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\")\n\n\n  \n\n\n\nIt’s important to put “col” inside the adorn_percentages command. Look what happens if we forget:\n\n# We should not do this!\ntabyl(penguins, sex, species) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages()\n\n\n  \n\n\n\nWhat are these proportions? The next code chunk will reveal the secret:\n\n# We should not do this!\ntabyl(penguins, sex, species) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"row\")\n\n\n  \n\n\n\nThe default for adorn_percentages is to create row proportions. But these are not helpful to us. We are not grouping by sex and then trying to figure out the distribution of species within each sex. It’s the opposite of our research question.\nIf we actually want percentages instead of proportions, we need one more line of code. This command—adorn_pct_formatting—is the same as we used before with frequency tables.\n\ntabyl(penguins, sex, species) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\") |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nNow we can see that each column adds up to 100%. In other words, each species is now on equal footing, and only the distribution of sexes within each group matters.\n\n\nExercise 6(a)\nWhat percentage of Adelie penguins are male? What percentage of Chinstrap penguins are male? What percentage of Gentoo penguins are male?\n\nPlease write up your answer here.\n\n\n\nExercise 6(b)\nDoes sex appear to be associated with species for the penguins in this data set? Or are these variables independent? Why?\n\nPlease write up your answer here.\n\n\nThe islands of Antarctica on which the penguins were observed and measured are recorded in the variable called island. Is the distribution of the three species of penguin the same (or similar) on the three islands?\n\n\nExercise 7(a)\nChoosing which variables play the roles of response and predictor can be tricky. For the question above, with species and island, which is response and which is predictor?\nOne way to think about this is to ask the following two questions and see which one is closer to the question asked:\n\nGiven information about the species, are you interested in which island the penguin lives on? If so, species is a predictor and island is response. (You are using species to predict island.)\nGiven information about the island, are you interested in the species of the penguin? If so, island is a predictor and species is response. (You are using island to predict species.)\n\nAnother way to think of this is to determine the grouping variable. Which variable is being used to divide the penguins into groups first? That will be the predictor variable.\n\nPlease write up your answer here.\n\n\n\nExercise 7(b)\nCreate a contingency table with percentages. List species first, followed by island. (Hey, that’s a hint in case you need to go back and change your answer to part (a).) Include column totals as well. (They should all be 100%.)\n\n\n# Add code here to create a contingency table with percentages.\n\n\n\n\nExercise 7(c)\nFinally, comment on the association or independence of the two variables.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#graphing-two-categorical-variables",
    "href": "03-categorical_data-web.html#graphing-two-categorical-variables",
    "title": "3  Categorical data",
    "section": "3.7 Graphing two categorical variables",
    "text": "3.7 Graphing two categorical variables\nA somewhat effective way to display two categorical variables is with a side-by-side bar chart. Here is the ggplot code for the relationship between sex and species.\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\nThis is somewhat different from the first ggplot example you saw above, so let’s take a moment to go through it.\n\nThe first argument is the data frame penguins; no mystery there.\nThe second aesthetic x = species also makes a lot of sense. As species is our predictor variable—we’re using species to group the penguins, and then within each species, we’re interested in the sex distribution—species goes on the x-axis.\nHowever, sex does not go on the y-axis! (This is a very common mistake for novices.) The y-axis of a bar chart is always a count or a proportion/percentage, so no variable should ever go on the y-axis of a bar chart. In that case, how does sex enter the picture? Through the use of color! The aesthetic fill = sex says to use the sex variable to shade or “fill” the bars with different colors. You’ll also notice that ggplot makes a legend automatically with the colors so you can see which color corresponds to which value (in this case, “female”, “male”, or “NA” for the missing data).\n\nAnother unusual feature is the argument position = \"dodge\" in the geom_bar layer. Let’s see what happens if we remove it.\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nWe get a stacked bar chart! This is another popular way of displaying two categorical variables, but we don’t tend to prefer it. Notice how difficult it is to compare the number of females across species; since there is no common baseline for the red segments of each bar, it is harder to determine which ones are bigger or smaller. (In this case, it’s fairly clear, but there are plenty of data sets for which the counts might be a lot closer.)\nSo let’s agree to use side-by-side bar charts. There is still one aspect of the side-by-side bar chart that is misleading, though. For example, the red bar for Adelie penguins is bigger than the red bar for Gentoo penguins. Does this mean Adelie penguins are more likely to be female?\nThis is the same issue we identified in an exercise above. To fix this problem, a better option here would be to use relative frequencies (i.e., proportions/percentages within each group) instead of counts on the y-axis. This is analogous to using proportions/percentages in a contingency table. Unfortunately, it is rather difficult to do this with ggplot. A compromise is available: by using position = fill, you can create a stacked bar chart that scales every group to 100%. Making comparisons across groups can still be hard, as explained above for any kind of stacked bar chart, but it works okay if there are only two categories in the response variable (as is almost the case with sex here, although the missing data distorts things a little at the bottom).\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\nThis graph does correctly show that the sexes are pretty much equally balanced across all three species.\n\nExercise 8(a)\nUsing species and island, create a side-by-side bar chart. Be careful, though, to change the sample code above to make sure species is now the response variable (using the fill aesthetic) and that island is the explanatory variable (using x). (Hey, that’s another hint to go back and look at the previous exercise and make sure you got part (a) right!)\n\n\n# Add code here to make a side-by-side bar chart.\n\n\n\n\nExercise 8(b)\nComment on the association or independence of the two variables.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#recoding-factor-variables",
    "href": "03-categorical_data-web.html#recoding-factor-variables",
    "title": "3  Categorical data",
    "section": "3.8 Recoding factor variables",
    "text": "3.8 Recoding factor variables\nAs mentioned earlier, there are situations where a categorical variable is not recorded in R as a factor variable. Let’s look at the year variable:\n\nglimpse(penguins$year)\n\n int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\nThese appear as integers. Yes, years are whole numbers, but why might this variable be treated as categorical data and not numerical data?\n\nExercise 9(a)\nUse the tabyl command to create a frequency table for year.\n\n\n# Add code here to make a frequency table for year.\n\n\n\n\nExercise 9(b)\nWhy is year better thought of as categorical data and not numerical data (at least for this data set—we’re not claiming years should always be treated as categorical)?\n\nPlease write up your answer here.\n\n\nWhile the tabyl command seemed to work just fine with the year data in integer format, there are other commands that will not work so well. For example, ggplot often fails to do the right thing when a categorical variable is coded as a number. Therefore, we need a way to change numerically coded variables to factors.\nThe code below uses a command called mutate that takes an old variable and creates a new variable. (You’ll learn more about this command in a later chapter. For now, you can just copy and paste this code if you need it again.) The name of the new variable can be anything we want; we’ll just call it year_fct. Then the real work is being done by the as_factor command that converts the numeric year variable into a factor variable.\nObserve the effect below:\n\npenguins &lt;- penguins |&gt;\n  mutate(year_fct = as_factor(year))\nglimpse(penguins)\n\nRows: 344\nColumns: 9\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n$ year_fct          &lt;fct&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\nExercise 10(a)\nMake a contingency table of the species measured in each year using counts. Use the species variable first, followed by the new factor variable year_fct. (Think about why that order makes sense. We will always list the response variable first so that the categories of interest will be the rows and the groups will be the columns.)\n\n\n# Add code here to make a contingency table for species and year with counts.\n\n\n\n\nExercise 10(b)\nMake a contingency table of the species measured in each year using column percentages (not proportions). (Again, be sure to use the new factor variable year_fct, not the old variable year.)\n\n\n# Add code here to make a contingency table for species and year with percentages.\n\n\n\n\nExercise 10(c)\nHow similar or dissimilar are the distributions of species across the three years of the study?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#plotting-summary-data",
    "href": "03-categorical_data-web.html#plotting-summary-data",
    "title": "3  Categorical data",
    "section": "3.9 Plotting summary data",
    "text": "3.9 Plotting summary data\nEverything we did above was summarizing raw data; that is, the data consisted of all the observations for each individual penguin. Often, though, when you find data out in the wild, that data will be summarized into a table already and you may not have access to the raw data.\nFor example, let’s suppose that you found some data online, but it looked like this:\n\n\n\nspecies\ncount\n\n\n\n\nAdelie\n152\n\n\nChinstrap\n68\n\n\nGentoo\n124\n\n\n\nThis raises two questions:\n\nHow would you get this data into R?\nHow would you plot the data?\n\nTo answer the first question, we show you how to create your own tibble. Here is the syntax:\n\npenguin_species_table &lt;- tibble(\n  species = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n  count = c(152, 68, 124)\n)\npenguin_species_table\n\n\n  \n\n\n\nBasically, the tibble command creates a new tibble. Then each column of data must be entered manually as a “vector” using the c to group all the data values together for each column. Be careful about the placement of quotation marks, commas, and parentheses.\nOnce we have our summary data, we want to make a bar chart. But this won’t work:\n\nggplot(penguin_species_table, aes(x = species)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nExercise 12\nExplain what went wrong with the previous command? Why does ggplot think that each species has count 1? (Hint: in tibble you just created, look at the species column. What if R thinks this is raw data where each row represents a single penguin?)\n\nPlease write up your answer here.\n\n\nInstead, we need to use geom_col. This works a lot like geom_bar except that it also requires a y value in its aesthetics to force the command to look for the counts in some other variable in the data.\n\nggplot(penguin_species_table, aes(x = species, y = count)) +\n  geom_col()\n\n\n\n\n\n\n\n\n\n\nExercise 13(a)\nUse the tabyl command to create a frequency table for island.\n\n\n# Add code here to create a frequency table for island\n\n\n\n\nExercise 13(b)\nUse the tibble command to create a new tibble manually that contains the frequency data for the island variable. It should have two columns, one called island and the other called count. Name it penguin_island_table.\n\n\n# Add code here to create a tibble with frequency data for island\n\n\n\n\nExercise 13(c)\nUse ggplot with geom_col to create a bar chart for island.\n\n\n# Add code here to create a bar chart for island",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#recovering-raw-data-from-tables",
    "href": "03-categorical_data-web.html#recovering-raw-data-from-tables",
    "title": "3  Categorical data",
    "section": "3.10 Recovering raw data from tables",
    "text": "3.10 Recovering raw data from tables\n\n3.10.1 Recovering raw data from a frequency table\nSometimes we come across summary data instead of raw data. We’ve learned how to manually create tibbles with that summary data and use geom_col instead of geom_bar to graph it, but sometimes it is also useful to recover what the raw data would have been. Fortunately there are R tools to do exactly that.\nWe’ll continue with our example penguin_species_table, reprinted here for reference:\n\npenguin_species_table\n\n\n  \n\n\n\nFrom this table, we know what the raw data for this variable should look like: there should be 152 rows that say “Adelie,” 68 rows that say “Chinstrap,” and 124 rows that say “Gentoo.” It would be very annoying, though, to make that whole tibble by hand.\nThe hero of the day is the function uncount from the tidyr package (loaded automatically when you loaded the tidyverse package):\n\npenguin_species_raw &lt;- penguin_species_table |&gt;\n  uncount(count)\npenguin_species_raw\n\n\n  \n\n\n\nClick through the rows of this table and you’ll see that it’s exactly what we wanted: “Adelie” is repeated 152 times, “Chinstrap” is repeated 68 times, and “Gentoo” is repeated 124 times. Neat!\n\n\n3.10.2 Recovering raw data from a contingency table\nThis strategy also works, with some modifications, for recovering the raw data presented in a contingency table. Previously, we saw the following contingency table showing the counts of each species broken down by sex:\n\n\n\nsex\nAdelie\nChinstrap\nGentoo\n\n\n\n\nfemale\n73\n34\n58\n\n\nmale\n73\n34\n61\n\n\n\n(Note: we’ve removed the unruly penguins who did not allow their sex to be determined.)\nAgain, we can imagine what the raw data would look like: there would be 73 rows where the species variable would say “Adelie” and the sex variable would say “female,” then 34 rows where the species variable would say “Chinstrap” and the sex variable would say “female,” and so on.\nWe can start by building a tibble with this information in the same way we built the tibble of penguin species counts. Note that the species labels now become the column headers.\n\npenguin_species_sex_table &lt;- tibble(\n  sex = c(\"female\", \"male\"),\n  Adelie = c(73, 73),\n  Chinstrap = c(34, 34),\n  Gentoo = c(58, 61)\n)\npenguin_species_sex_table\n\n\n  \n\n\n\nIn order for the uncount function to work correctly, we need to have all the counts in a single column, but since this is a contingency table, our counts are spread out across several columns. To solve this problem, we’ll need to “pivot” the columns, turning them into rows. The command is called pivot_longer. (There is also a pivot_wider command that turns rows into columns, but we won’t need that one.)\n\npenguin_species_sex_table |&gt;\n  pivot_longer(cols = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"))\n\n\n  \n\n\n\nIf we want a little more control over the names of the newly created columns, we can add those as follows:\n\npenguin_species_sex_table |&gt;\n  pivot_longer(cols = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n               names_to = \"species\",\n               values_to = \"count\")\n\n\n  \n\n\n\nNow our data is in a form that uncount can handle. And indeed, we can assemble all these steps together into a pipeline. First, we should build the tibble, then pivot the tibble, and finally uncount to get back to the raw data. We want store the result as a new tibble.\nHere are all the steps put together:\n\n# This is the summary data in contingency table form,\n# stored as a tibble\npenguin_species_sex_table &lt;- tibble(\n  sex = c(\"female\", \"male\"),\n  Adelie = c(73, 73),\n  Chinstrap = c(34, 34),\n  Gentoo = c(58, 61)\n)\n\n# This is the pipeline that starts with the contingency table\n# and produces the raw data, one penguin per row\npenguin_species_sex_table |&gt;\n  pivot_longer(cols = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n               names_to = \"species\",\n               values_to = \"count\") |&gt;\n  uncount(count) -&gt; penguin_species_sex_raw\n\npenguin_species_sex_raw\n\n\n  \n\n\n\nIndeed, this new tibble looks just like how we wanted it to look.\n(Notice the clever use of the arrow -&gt; in the last line of the pipeline. We are used to assigning variables with &lt;- and the name of the new variable on the left. But we can also use `-&gt; at the end of the line with the name of the new variable on the right!)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#publication-ready-graphics",
    "href": "03-categorical_data-web.html#publication-ready-graphics",
    "title": "3  Categorical data",
    "section": "3.11 Publication-ready graphics",
    "text": "3.11 Publication-ready graphics\nLet’s go back to the first relative frequency bar chart from this chapter.\n\nggplot(penguins, aes(x = species, y = after_stat(prop), group = 1)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThe variable name species is already informative, but the y-axis is labeled with “prop”. Also note that this graph could use a title. We can do all this with labs (for labels). Observe:\n\nggplot(penguins, aes(x = species, y = after_stat(prop), group = 1)) +\n  geom_bar() +\n  labs(title = \"Distribution of species\",\n       y = \"Proportion\",\n       x = \"Species\")\n\n\n\n\n\n\n\n\n\n3.11.1 Using colorblind-friendly palettes\nThe default color scheme used in ggplot2 is not designed to be friendly to folks who experience various forms of colorblindness (including the author of this book, who experiences deuteranomaly, a relatively common form of red-green colorblindness).\nAs a reminder, this was our side-by-side bar chart, now including labels:\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"Sex of penguins by species\",\n       y = \"Count\",\n       x = \"Species\",\n       fill = \"Sex\")\n\n\n\n\n\n\n\n\nA simple fix is to add one line of code to the ggplot call:\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"Sex of penguins by species\",\n       y = \"Count\",\n       x = \"Species\",\n       fill = \"Sex\") +\n  scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nTo a person with typical color perception, this may feel a little like it’s burning your eyeballs. But to a person with severe colorblindness, this contrast is very helpful for seeing these two categories clearly.\nNotice that the NA values above blend in with the background, so they’re not visible. This is fixed by putting black borders around the bars:\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  labs(title = \"Sex of penguins by species\",\n       y = \"Count\",\n       x = \"Species\",\n       fill = \"Sex\") +\n  scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nIt’s also possible to use grayscale. This is often a requirement for publishing in print journals. If we use gray (spelled “grey” in ggplot code) for the bars, it would also be best to turn off the gray background using a “theme” (called theme_bw).\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  labs(title = \"Sex of penguins by species\",\n       y = \"Count\",\n       x = \"Species\",\n       fill = \"Sex\") +\n  scale_fill_grey() +\n  theme_bw()\n\n\n\n\n\n\n\n\nFor some reason, the default color for missing values is red, which is somewhat annoying. It doesn’t require much more code to change that:\n\nggplot(penguins, aes(fill = sex, x = species)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  labs(title = \"Sex of penguins by species\",\n       y = \"Count\",\n       x = \"Species\",\n       fill = \"Sex\") +\n  scale_fill_grey(na.value = \"white\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nLearn more about the various forms of colorblindness here: https://my.clevelandclinic.org/health/diseases/11604-color-blindness\nAnd here’s a surprisingly entertaining (albeit, a bit technical in parts) video of a conference presentation given by the researchers who developed the Viridis color palette: https://youtu.be/xAoljeRJ3lU?si=ARxA7ZFkj_2qp6kL\n\nExercise 11\nModify the following side-by-side bar chart by adding a title and labels for both the fill variable and the x-axis variable. Change the y-axis label to “Count” with an uppercase “C”. Use the Viridis color palette with black borders around the bars.\n\n\n# Modify the following side-by-side bar chart by adding a title and \n# labels for both the fill variable and the x-axis variable.\n# Change the y-axis label to \"Count\" with an uppercase \"C\".\n# Use the Viridis color palette with black borders around the bars.\nggplot(penguins, aes(fill = species, x = island)) +\n  geom_bar(position = \"dodge\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#conclusion",
    "href": "03-categorical_data-web.html#conclusion",
    "title": "3  Categorical data",
    "section": "3.12 Conclusion",
    "text": "3.12 Conclusion\nYou can summarize a single categorical variable using a frequency table. For only one categorical variable, a graph is usually overkill, but if you really want a graph, the bar chart is the best option. Both raw counts and proportions/percentages can be useful.\nWe use contingency tables to summarize two categorical variables. Unless groups are of equal size, raw counts can be incredibly misleading here. You should include proportions/percentages to be able to compare the distributions across groups. If the proportions/percentages are roughly the same, the variables are more likely to be independent, whereas if the proportions/percentages are different, there may be an association between the variables.\nFor graphing two categorical variables, the best choice is usually a side-by-side bar chart. A stacked bar chart will also work, especially if using relative frequencies on the y-axis, but it can be hard to compare across groups when the response variable has three or more categories.\nSometimes we come across categorical data that is recorded using numbers. Many R commands will not work properly if they expect factors and receive numbers, so we use the mutate command to create a new variable along with as_factor to convert the numbers to categories.\nSometimes we come across summary data instead of raw data. We can then manually create tibbles with that summary data and use geom_col instead of geom_bar to graph it. We can even reproduce the raw data by using the uncount command on tables.\nFinally, there are various modifications we can make to ggplot code to make our graphs more professional, clear, and friendly for those experiencing colorblindness.\n\n3.12.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "03-categorical_data-web.html#footnotes",
    "href": "03-categorical_data-web.html#footnotes",
    "title": "3  Categorical data",
    "section": "",
    "text": "Why the “2”? It’s a long story. Google it if you’re interested in the history of the development of the ggplot2 package.↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Categorical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html",
    "href": "04-numerical_data-web.html",
    "title": "4  Numerical data",
    "section": "",
    "text": "4.1 Introduction\nIn this chapter, we’ll learn about numerical data and how to summarize it through summary statistics and graphs.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#introduction",
    "href": "04-numerical_data-web.html#introduction",
    "title": "4  Numerical data",
    "section": "",
    "text": "4.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n4.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/04-numerical_data.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n4.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n4.1.4 Load packages\nWe load the tidyverse package to get ggplot2 and the palmerpenguins package to work with the penguin data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#a-note-about-mathematical-notation",
    "href": "04-numerical_data-web.html#a-note-about-mathematical-notation",
    "title": "4  Numerical data",
    "section": "4.2 A note about mathematical notation",
    "text": "4.2 A note about mathematical notation\nFrom time to time, we will use mathematical notation that can’t be typed directly on the keyboard. For example, let’s suppose we want to typeset the quadratic formula, which involves a complicated fraction as well as a square root symbol.\nWhen such notation appears, it will be surrounded by double dollar signs as follows:\n\\[\nx = \\frac{-b \\pm \\sqrt{b^{2} - 4ac}}{2a}\n\\]\nThe Quarto document will interpret this special mathematical notation and show it on the screen as well as in the HTML document.1 If the nicely formatted formula does not appear on your screen, place your cursor anywhere inside the math formula and hit Ctrl-Enter or Cmd-Enter (PC or Mac respectively).\nSometimes, we want such math to appear inline. We can do this with single dollar signs. For example, the distance formula is \\(d = \\sqrt{(x_{2} - x_{1})^{2} + (y_{2} - y_{1})^{2}}\\), a fact you may have learned a long time ago.\nThis will not show up as a formatted equation in the Quarto document, but it will show up in the HTML file. If you want to check that it worked properly without having to render the HTML, you can either hover your cursor over the math formula and wait a second, or you can place your cursor anywhere inside the math formula and hit Ctrl-Enter or Cmd-Enter (PC or Mac respectively) to see a pop-up window showing the mathematical content properly formatted.\nYou will be shown examples of any mathematical notation you need to use in any given chapter, so feel free to copy/paste/modify any math notation you need.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#statistics",
    "href": "04-numerical_data-web.html#statistics",
    "title": "4  Numerical data",
    "section": "4.3 Statistics",
    "text": "4.3 Statistics\nThe word “statistics” has several meanings. On one hand, it’s an entire field of study, as in the subject of this course. More specifically, though, a “statistic” is any kind of numerical summary of data. While there are many ways to summarize numerical data, they mostly fall into two main flavors: measures of center and measures of spread. Measures of center try to estimate some kind of average, middle, or common value in data. Measures of spread try to estimate something like the width, range, variability, or uncertainty of data.\nThere are two pairs of measurements that we will learn about in this chapter: the mean/standard deviation, and the median/IQR.\n\n4.3.1 Mean and standard deviation\nThe first pair of the summary statistics we’ll discuss consists of the mean and the standard deviation.\nThe mean of a variable \\(y\\)—denoted \\(\\bar{y}\\) and pronounced “y bar”—is calculated by summing all the values of the variable, and dividing by the total number of observations. In formula form, this is\n\\[\n\\bar{y} = \\frac{\\sum y}{n}.\n\\]\nThis is a measure of center since it estimates the “middle” of a set of numbers. It is calculated in R using the mean command.\nThroughout this chapter, we will be using the penguins data set. (If you need a reminder, look at the help file for penguins using one of the methods discussed in Chapter 2.)\nIf we want to calculate the mean body mass of our penguins (in grams), we type the following:\n\nmean(penguins$body_mass_g)\n\n[1] NA\n\n\nUnfortunately, this didn’t give us an answer. As you may recall from previous chapters, this is because we are missing data. There are several values of body mass missing in this data. We need an extra piece of code to tell R to ignore that missing data and give us the mean of the valid data.\n\nmean(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 4201.754\n\n\n(The term na.rm stands for “NA remove”.)\nWe never leave such numbers without interpretation. In a full, contextually meaningful sentence, we might say, “The mean body mass of this group of penguins is approximately 4200 grams.”\nNotice that we mentioned the penguins, placing this number in context, and we mentioned the units of measurement, grams. (Otherwise, what would this number mean? 4200 pounds? Okay, probably not, but you should always mention the units of measurement.) Also notice that we rounded the final value. A gram is a very small unit of measurement, so there is no need to report this value to many decimal places.\nIf we use inline code, we can say, “The mean body mass of this group of penguins is 4201.754386 grams.” There are ways of rounding this number as well, but it’s a bit of a hassle to do so in inline code.\nThe corresponding measure of spread is the standard deviation. Usually this is called \\(s\\) and is calculated using a much more complicated formula:\n\\[\ns = \\sqrt{\\frac{\\sum (y - \\bar{y})^2}{n - 1}}.\n\\]\nThis is a measure of spread because the \\((y - \\bar{y})\\) term measures how far away each data point is from the mean.\nIn R, this is calculated with the sd command. Again, we’ll need to add na.rm = TRUE.\n\nsd(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 801.9545\n\n\n“The standard deviation of this group of penguins is about 800 grams.”\nOr using inline code:\n“The standard deviation of this group of penguins is 801.9545357 grams.”\nThe mean and the standard deviation should always be reported together. One without the other is incomplete and potentially misleading.\nAnother related measurement is the variance, but this is nothing more than the standard deviation squared:\n\\[\ns^2 = \\frac{\\sum (y - \\bar{y})^2}{n - 1}.\n\\]\n(Compare this formula to the one for the standard deviation. Nothing has changed except for the removal of the square root.) We rarely use the variance in an introductory stats class because it’s not as interpretable as the standard deviation. The main reason for this is units. If the data units are grams, then both the mean and the standard deviation are also reported in grams. The variance has units of “grams squared”, but what does that even mean? If you need to calculate the variance in R, the command is var.\n\nvar(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 643131.1\n\n\nYou can check and see that the number above really is just 801.9545357 squared. Regarding the inline code in the previous sentence, remember, in the Quarto document, you can click inside the inline code and hit Ctrl-Enter or Cmd-Enter. In the HTML document, the number will be calculated and will magically appear.\n\n\n4.3.2 Median and IQR\nAnother choice for measuring the center and spread of a data set is the median and the IQR.\nThe median is just the middle value if the list of values is ordered. In R, it is calculated using the median command.\n\nmedian(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 4050\n\n\nThe median body mass of these penguins is 4050 grams.\nThe median value depends on whether the number of data points is an even or odd number. If it’s odd, there is a middle value in the list. Convince yourself this is true; for example, look at the numbers 1 through 7.\n\n1:7\n\n[1] 1 2 3 4 5 6 7\n\n\nThe number 4 is in the middle of the list, with three numbers to either side.\nHowever, if there are an even number of data points, there is no number right in the middle:\n\n1:8\n\n[1] 1 2 3 4 5 6 7 8\n\n\nThe “midpoint” of this list would lie between 4 and 5 with four values to either side of this line. If this is the case, we calculate the median by taking the mean of the two numbers straddling the middle. In the case of 1 though 8 above, the median would be 4.5.\nA nice shortcut “trick” for figuring out where the middle value should be is to use the formula \\((n + 1)/2\\) where n is the number of data points:\n\\[\n\\frac{n + 1}{2}\n\\]\nAs before, if n = 7, then the formula says\n\\[\n\\frac{7 + 1}{2} = 4\n\\]\nThe median is the 4th value in the list.\nIf n = 8,\nthen the formula says\n\\[\n\\frac{8 + 1}{2} = 4.5\n\\]\nThe middle of the list of numbers is between the 4th and 5th entries. The median will be the average of those two numbers.\nLet’s print out the entire body_mass_g variable, all 342 valid values (not including the missing values, of course). If we’re clever about it, we can see them in order using the sort command.\n\nsort(penguins$body_mass_g)\n\n  [1] 2700 2850 2850 2900 2900 2900 2900 2925 2975 3000 3000 3050 3050 3050 3050\n [16] 3075 3100 3150 3150 3150 3150 3175 3175 3200 3200 3200 3200 3200 3250 3250\n [31] 3250 3250 3250 3275 3300 3300 3300 3300 3300 3300 3325 3325 3325 3325 3325\n [46] 3350 3350 3350 3350 3350 3400 3400 3400 3400 3400 3400 3400 3400 3425 3425\n [61] 3450 3450 3450 3450 3450 3450 3450 3450 3475 3475 3475 3500 3500 3500 3500\n [76] 3500 3500 3500 3525 3525 3550 3550 3550 3550 3550 3550 3550 3550 3550 3575\n [91] 3600 3600 3600 3600 3600 3600 3600 3625 3650 3650 3650 3650 3650 3650 3675\n[106] 3675 3700 3700 3700 3700 3700 3700 3700 3700 3700 3700 3700 3725 3725 3725\n[121] 3750 3750 3750 3750 3750 3775 3775 3775 3775 3800 3800 3800 3800 3800 3800\n[136] 3800 3800 3800 3800 3800 3800 3825 3850 3875 3900 3900 3900 3900 3900 3900\n[151] 3900 3900 3900 3900 3950 3950 3950 3950 3950 3950 3950 3950 3950 3950 3975\n[166] 4000 4000 4000 4000 4000 4050 4050 4050 4050 4050 4050 4075 4100 4100 4100\n[181] 4100 4100 4150 4150 4150 4150 4150 4150 4200 4200 4200 4200 4200 4250 4250\n[196] 4250 4250 4250 4275 4300 4300 4300 4300 4300 4300 4300 4300 4350 4350 4375\n[211] 4400 4400 4400 4400 4400 4400 4400 4400 4450 4450 4450 4450 4450 4475 4500\n[226] 4500 4500 4550 4550 4575 4600 4600 4600 4600 4600 4625 4625 4650 4650 4650\n[241] 4650 4650 4675 4700 4700 4700 4700 4700 4700 4725 4725 4725 4750 4750 4750\n[256] 4750 4750 4775 4800 4800 4800 4850 4850 4850 4850 4875 4875 4875 4900 4900\n[271] 4925 4925 4950 4950 4975 5000 5000 5000 5000 5000 5000 5050 5050 5050 5100\n[286] 5100 5100 5150 5150 5200 5200 5200 5200 5250 5250 5250 5300 5300 5300 5300\n[301] 5350 5350 5350 5400 5400 5400 5400 5400 5450 5500 5500 5500 5500 5500 5550\n[316] 5550 5550 5550 5550 5550 5600 5600 5650 5650 5650 5700 5700 5700 5700 5700\n[331] 5750 5800 5800 5850 5850 5850 5950 5950 6000 6000 6050 6300\n\n\n\nExercise 1\nIf there are 342 penguins in this data set with body mass data, between which two values in the list above would the median lie? In other words, between what two positions in the list will be median be found? Show your work using the \\((n + 1)/2\\) trick.\nVerify that the median you find from this list is the same as the one we calculated with the median command above.\n\nPlease write up your answer here.\n\n\nCalculating the interquartile range—or IQR—requires first the calculation of the first and third quartiles, denoted Q1 and Q3. If the median is the 50% mark in the sorted data, the first and third quartiles are the 25% and the 75% marks, respectively. One way to compute these by hand is to calculate the median of the lower and upper halves of the data separately. Then again, it’s hard to know how to split the data set into halves if there are an odd number of observations. There are many different methods for computing percentiles in general, but you don’t need to worry too much about the particular implementation in R. One you have Q1 and Q3, the IQR is just\n\\[\nIQR = Q3 - Q1\n\\]\nIn R, you can get the IQR by using—are you ready for this?—the IQR command.\n\nIQR(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 1200\n\n\nThe IQR for this group of penguins is 1200 grams.\nThe IQR is a measure of spread because the distance between Q1 and Q3 measures the span of the “middle 50%” of the data.\nA general function for computing any percentile in R is the quantile function. For example, since Q1 is the 25th percentile, you can compute it as follows:\n\nQ1 &lt;- quantile(penguins$body_mass_g, 0.25, na.rm = TRUE)\nQ1\n\n 25% \n3550 \n\n\nThe 25% label is cute, but somewhat unnecessary, and it will mess up a later command, so let’s get rid of it:\n\nQ1 &lt;- unname(Q1)\nQ1\n\n[1] 3550\n\n\n\n\nExercise 2(a)\nNow you compute Q3. (Hint: what number will go in the quantile function instead of 0.25?)\n\n\n# Add code here to compute, store, and print out Q3\n\n\n\n\nExercise 2(b)\nReassign Q3 using the unname command as we did above to strip the unnecessary label.\n\n\n# Add code here that uses the unname command \n\n\n\n\nExercise 2(c)\nSubtract Q3 minus Q1 in R. (Literally, the code is just Q3 - Q1.)\nVerify that the output below matches the value of the IQR we calculated earlier.\n\n\n# Add code here to compute Q3 - Q1.\n\n\n\nThe median and the IQR should always be reported together.\nAlso, don’t mix and match. For example, it doesn’t really make sense to report the mean and the IQR. Nor should you report the median and the standard deviation. They go together in pairs: either the mean and the standard deviation together, or the median and the IQR together.\n\n\n\n4.3.3 Robust statistics\nSome statistics are more sensitive than others to features of the data. For example, outliers are data points that are far away from the bulk of the data. The mean and especially the standard deviation can change a lot when outliers are present. Also, skewness in the data frequently pulls the mean too far in the direction of the skew while simultaneously inflating the standard deviation. (We’ll learn more about skewed data later in this chapter.)\nOn the other hand, the median and IQR are “robust”, meaning that they do not change much (or at all) in the presence of outliers and they tend to be good summaries even for skewed data.\n\nExercise 3\nExplain why the median and IQR are robust. In other words, why does an outlier have little or no influence on the median and IQR?\n\nPlease write up your answer here.\n\n\n\n\n\n4.3.4 Five-number summary\nA five-number summary is the minimum, Q1, median, Q3, and maximum of a set of numbers.\nThe summary command in R gives you the five-number summary, and throws in the mean for good measure. (Note that it does not require na.rm = TRUE!)\n\nsummary(penguins$body_mass_g)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   2700    3550    4050    4202    4750    6300       2 \n\n\nYou can, of course, isolate the various pieces of this. You already know most of the commands below. (These individual commands all do require na.rm = TRUE.)\n\nmin(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 2700\n\n\n\nmedian(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 4050\n\n\n\nmax(penguins$body_mass_g, na.rm = TRUE)\n\n[1] 6300\n\n\nRemember the quantile function from earlier, where we computed Q1? We’re going to use it in a new way. This is what we did before:\nquantile(penguins$body_mass_g, 0.25, na.rm = TRUE),\nWhat about this instead?\n\nquantile(penguins$body_mass_g, na.rm = TRUE)\n\n  0%  25%  50%  75% 100% \n2700 3550 4050 4750 6300 \n\n\n\nExercise 4\nWhat is the small difference between the way quantile was used in a previous exercise versus the way it is used here? How did that change the output?\n\nPlease write up your answer here.\n\n\nAlso, don’t forget about the trick for using R commands inline. If you need to mention a statistic in the middle of a sentence, there is no need to break the sentence and display a code chunk. Be sure you’re looking at the Quarto document (not the HTML file) to note that the numbers in the next sentence are not manually entered, but are calculated on the fly:\nThere are 344 penguins in this data set and their median body mass is 4050 grams.\n\n\nExercise 5\nType a full, contextually meaningful sentence using inline R code (as above, but changing the commands) reporting the minimum and maximum body mass (in grams) in our data set.\nRemember that inline code requires a backtick immediately followed by the letter r and then a space. Then you can type your R code. The code must be followed by another backtick. You will need two pieces of inline code in your answer to report both the minimum and maximum in context.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#graphing-one-numerical-variable",
    "href": "04-numerical_data-web.html#graphing-one-numerical-variable",
    "title": "4  Numerical data",
    "section": "4.4 Graphing one numerical variable",
    "text": "4.4 Graphing one numerical variable\nFrom the penguins data, let’s consider again the body mass in grams. This is clearly a numerical variable.\nThe single most useful display of a single numerical variable is a histogram. Here is the ggplot command to do that:\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nThe way histograms work is to create “bins”, which are ranges of numbers along the x-axis. R goes through the data and counts how many observations fall into each bin. In that way, a histogram is somewhat like a bar chart. However, a bar chart uses bars to represent distinct, discrete categories, whereas a histogram uses bars that are all next to each other to represent values along a continuous numerical range. Histograms are meant to give you–at a quick glance–a sense of the “shape” of the data.\n\n4.4.1 The shape of data\nWhat do we mean by “shape”? Generally, we look for three things:\n\nModes\n\n\nModes are peaks in the data. These are places where data tends to cluster, representing common values of the numerical variable. In the penguin data, there appears to be a big mode between about 3500 and 4000 grams. When data has one clear mode, we call the data unimodal. But data can also be bimodal, or more generally, multimodal. This often happens when the data contains multiple groups that are different from each other. In this case, we know there are three species of penguin in the data, so if those species are drastically different in their body mass, we might be looking at multimodal data. We’ll explore this question more later in the chapter. For now, it’s hard to say what’s going on because the above histogram has a lot of spiky bars popping up all over. It’s not completely obvious how many modes there might be.\n\n\nSymmetry\n\n\nIf there is one mode, we can also ask if the data is spread evenly to the left and right of that mode. If so, we call the data symmetric. No data is perfectly symmetric, but we are looking for overall balance between the areas to the left and right of the mode. When data is not symmetric, we call it skewed. Assuming that there is one big mode around 3500 or 4000, the body mass data above is skewed. There is clearly more data to the right of the mode than to the left. The right side of the histogram stretches out further than the left relative to the mode. Therefore, the body mass data is right-skewed. There is a longer “tail” to the right. If it were the opposite, it would be left-skewed. It is common for beginning students to confuse these two terms. Be aware that we are not concerned about where the mode is. We want to know which side has more data spread into a longer tail. That is the direction of the skewness.\n\n\nOutliers.\n\n\nOutliers are data points that are far from the bulk of the data. The body mass data above appears to have no outliers. We are looking for a large gap between the main “mass” of data and any lingering data points far away from that mass. There is no such large gap in the histogram above.\n\nWhenever you are asked about the “shape” of a numerical variable, be sure to comment on (1) modes, (2) symmetry, and (3) outliers.\nGenerally, the default binning for ggplot histograms is not great. This is by design. The creator of the ggplot2 package, Hadley Wickham, said the following:\n\n“In ggplot2, a very simple heuristic is used for the default number of bins: it uses 30, regardless of the data. This is perverse, and ignores all of the research on selecting good bin sizes automatically, but sends a clear message to the user that he or she needs to think about, and experiment with, the bin width. This message is reinforced with a warning that reminds the user to manually adjust the bin width.”\n\nIndeed, if you look at the output from the graphing command above, you can see that ggplot informs you that you should pick a better value for the binwidth. You can also see that the bins aren’t ideal. They are too narrow, which means that arbitrary differences between bins show up as “random” spikes all over the graph. These spikes can confuse the issue of how many modes appear in the data.\nInstead, we should aim to use bins that show the overall shape of the data and smooth it out a bit. Look back at the scale of the x-axis to assess how wide each bar should be. There’s no one correct answer. In this case, the bins ought to be a little wider. Since our x-axis goes from about 2500 to 6500, maybe we should try a binwidth of 250. And if 250 doesn’t look good, nothing prevents us from trying a different number.\nIt’s also easier to interpret the histogram when the bins’ edges line up with numbers that are easy to see in the plot. Use boundary to determine where you want the bin boundaries to fall. For example, if we set the boundary to 3500, that means that one bar will start with its left edge at 3500. This is convenient because there is a tick mark labeled there on the x-axis. The boundary number is pretty arbitrary; once one boundary is set, it determines where all the other bins will line up. With a binwidth of 250, we’d get the same graph if the boundary were set to 3000 or 3250 or 5750, or even 0. Any other multiple of 250 would give the same graph.\nWe use binwidth and boundary inside the parentheses of the geom_histogram to modify these parameters.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250, boundary = 3500)\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nEven with the smoother look, it appears that there are multiple modes, maybe three? Do these correspond to the three species of penguin? Stay tuned.\n(Note that we are still seeing a warning, but this warning is about missing data. We can’t do anything about that, so we can safely ignore this warning.)\n\nExercise 6(a)\nHere is a histogram of the penguin bill lengths (measured in millimeters):\n\nggplot(penguins, aes(x = bill_length_mm)) +\n  geom_histogram(binwidth = 6, boundary = 30)\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nWrite a short paragraph describing the shape of the distribution of penguin bill lengths, focusing on the three key shape features (modes, symmetry, and outliers).\n\nPlease write up your answer here.\n\n\n\nExercise 6(b)\nThe last question was a trick question!\nChange the binwidth (no need to change the boundary) to something smaller to see more clearly the bimodal nature of the distribution.\n\n\n# Add code here that changes the binwidth of the last histogram to see\n# the bimodal nature of the distribution.\n\n\n\n\nExercise 7(a)\nMake a histogram of the variable flipper_length_mm. Start with a histogram where you don’t modify the binwidth or boundary. (In other words, use geom_histogram() with nothing inside the parentheses.)\n\n\n# Add code here to create a histogram of flipper length\n\n\n\n\nExercise 7(b)\nBy examining the scale on the x-axis above, repeat the command, but this time change the binwidth until you are satisfied that the bins are neither too wide nor too narrow. (You can set the boundary too, but your choice of boundary is not super important.)\n\n\n# Add code here to modify the histogram of flipper length,\n# adding binwidth and boundary\n\n\n\n\nExercise 7(c)\nWrite a short paragraph describing the shape of the distribution of penguin flipper lengths, focusing on the three key shape features (modes, symmetry, and outliers).\n\nPlease write up your answer here.\n\n\n\n\n4.4.2 Less useful plot types\nThere are several other graph types that one might see for a single numerical variable: e.g., dotplots, stem-and-leaf plots, boxplots, etc. We’re not big fans of dotplots or stem-and-leaf plots as they are just messier versions of histograms. We do like boxplots, but they are typically less informative than histograms. Boxplots are much better for comparing groups, and we’ll see them later in the chapter.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#graphing-two-numerical-variables",
    "href": "04-numerical_data-web.html#graphing-two-numerical-variables",
    "title": "4  Numerical data",
    "section": "4.5 Graphing two numerical variables",
    "text": "4.5 Graphing two numerical variables\nThe proper graph for two numerical variables is a scatterplot. We graph the response variable on the y-axis and the predictor variable on the x-axis.2\nLet’s consider a possible association between bill length and body mass. For this question, there is not really a strong preference for which variable serves as response and which variable servers as predictor. We’ll consider bill length as the response variable and body mass as the predictor.\nSince we are plotting two variables, we have two aesthetics, one on the y-axis (the response variable) and one on the x-axis (the predictor variable). Since scatterplots use points to plot each data value, the correct layer to add is geom_point().\n\nggplot(penguins, aes(y = bill_length_mm, x = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nWe are looking for evidence of a relationship between the two variables. This will manifest as a pattern in the data. We are interested in answering the following questions:\n\nLinearity\n\n\nIs the association linear? In other words, do the data points lie roughly in a straight line pattern? The scatterplot above is a bit “cloudy” but generally moves from lower left to upper right in a straight (not curved pattern). It’s not a completely random scatter of dots.\n\n\nDirection\n\n\nIf the pattern is linear, it is a positive relationship or a negative one? Positive means that the line moves from lower left to upper right. Negative means it moves from upper left to lower right. If you recall the direction of slopes from high school algebra class, a positive association corresponds to a line with a positive slope, and similarly for a negative association. In the data above, lower values of body mass correspond to lower bill lengths, and higher values of body mass correspond to higher bill lengths. So this is a positive association.\n\n\nStrength\n\n\nIf there is a pattern, how tight is the pattern? Do the data points stay close to a straight line, or are they pretty spread out and only generally moving in one direction. A strong relationship is one that is tightly packed around a line or curve. The relationship above is not strong. We might use terms like “weak”, “moderately weak”, or “moderate”, but definitely not strong.\n\n\nOutliers\n\n\nAre there outliers? These will be points that are isolated and relatively far from the bulk of the data. There are a few points above that are borderline, but none is a particularly strong outlier, especially given how spread out the rest of the data is.\n\n\nExercise 8\nHere is a scatterplot of flipper lengths against body mass:\n\nggplot(penguins, aes(y = flipper_length_mm, x = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nWrite a short paragraph describing the association of penguin flipper lengths and body mass, focusing on the four key features (linearity, direction, strength, and outliers).\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#graphing-grouped-numerical-data",
    "href": "04-numerical_data-web.html#graphing-grouped-numerical-data",
    "title": "4  Numerical data",
    "section": "4.6 Graphing grouped numerical data",
    "text": "4.6 Graphing grouped numerical data\nSuppose you want to analyze one numerical variable and one categorical variable. Usually, the idea here is that the categorical variable divides up the data into groups and you are interested in understanding the numerical variable for each group separately. Another way to say this is that your numerical variable is response and your categorical variable is predictor. (It is also possible for a categorical variable to be response and a numerical variable to be predictor. This is common in so-called “classification” problems. We will not cover this possibility in this course, but it is covered in more advanced courses.)\nThis turns out to be exactly what we need in the penguins data. Throughout the above exercises, there was a concern that the penguin measurements are fundamentally different among the three different species of penguin.\nGraphically, there are two good options here. The first is a side-by-side boxplot.\n\nggplot(penguins, aes(y = body_mass_g, x = species)) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nNotice the placement of the variables. The y-axis is body_mass_g, the numerical variable. The x-axis variable is species; the groups are placed along the x-axis. This is consistent with other graph types that place the response variable on the y-axis and the predictor variable on the x-axis.\nThe other possible graph is a stacked histogram. This uses a feature called “faceting” that creates a different plot for each group. The new ggplot command is called facet_grid. The only slightly unusual syntax you need to know is that the predictor variable has to be inside vars() as in the following code chunk:\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram() +\n  facet_grid(rows = vars(species))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nAs always, the default bins suck, so let’s change them.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250, boundary = 3500) +\n  facet_grid(rows = vars(species))\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nNotice that we specified rows in the facet_grid function. What if we had specified columns instead?\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250, boundary = 3500) +\n  facet_grid(cols = vars(species))\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nExercise 9\nExplain why that last graph (which might be called a side-by-side histogram) is less effective than the earlier stacked histogram. (Hint: which variable can you line up with your eyes when the histograms are stacked vertically rather than horizontally?)\n\nPlease write up your answer here.\n\n\nThe other thing that kind of sucks is the fact that the y-axis is showing counts. That makes it harder to see the distribution of body mass among Chinstrap penguins, for example, as there are fewer of them in the data set. It would be nice to scale these using percentages.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(aes(y = after_stat(density)),\n                 binwidth = 250, boundary = 3500) +\n  facet_grid(rows = vars(species))\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nDue to some technical issues in ggplot2, these are not strictly proportions. (If you were to add up the heights of all the bars, they would not add up to 100%.) Nevertheless, the graph is still useful because it does scale the groups to put them on equal footing. In other words, it treats each group as if they all had the same sample size.\n\n\nExercise 10\nChoose a numerical variable that’s not body mass and a categorical variable that’s not species from the penguins data set. Make both a side-by-side boxplot and a stacked histogram. Discuss the resulting graphs. Comment on the association (or independence) of the two variables.\n\n\n# Add code here to create a side-by-side boxplot.\n\n\n# Add code here to create a stacked histogram.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#publication-ready-graphics",
    "href": "04-numerical_data-web.html#publication-ready-graphics",
    "title": "4  Numerical data",
    "section": "4.7 Publication-ready graphics",
    "text": "4.7 Publication-ready graphics\nThe great thing about ggplot2 graphics is that they are already quite pretty. To take them from exploratory data analysis to the next level, there are a few things we can do to tidy them up.\nLet’s go back to the first histogram from this chapter.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250, boundary = 3500)\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nThe variable names of this data set are already pretty informative, but we can do a little better with labs (for labels). Observe:\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250, boundary = 3500) +\n  labs(title = \"Distribution of body mass for adult foraging penguins near\n       Palmer Station, Antarctica\",\n       x = \"Body mass (grams)\",\n       y = \"Count\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nYou can also see that we took the opportunity to mention the units of measurement (grams) for our variable in the x-axis label. This is good practice.\nA quick note about formatting in R code chunks. Notice that we often put different parts of the commands on their own separate lines. The last ggplot command would still work if we did this:\n\nggplot(penguins, aes(x = body_mass_g)) + geom_histogram(binwidth = 250, boundary = 3500) + labs(title = \"Distribution of body mass for adult foraging penguins near Palmer Station, Antarctica\", x = \"Body mass (in grams)\", y = \"Count\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nBut it’s much harder to read. If you find that your code is “wrapping” to the next line, find some spots like commas or plus signs to break the code. Be sure to break the line after the comma or plus sign.\n\nExercise 11\nModify the following scatterplot by adding a title and labels for both the y-axis and x-axis. (Don’t forget to include units of measurement on both axes!)\n\n\n# Modify the following scatterplot by adding a title and \n# labels for both the y-axis and x-axis.\nggplot(penguins, aes(y = bill_length_mm, x = bill_depth_mm)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\nExercise 12\nThe previous scatterplot looks a little funny due to some odd groupings that we suspect (as usual) might be due to multiple species being measured. Let’s use color to investigate! Once we decide to involve color, we’ll need to add a Viridis color palette to make it colorblind-friendly. This time, though, the command is scale_color_viridis_d instead of scale_fill_viridis_d. In ggplot, the “color” aesthetic is used for points in a scatterplot, as opposed to “fill” for bars in a bar chart. We’ll also use a more simple black-and-white background theme. We’ve already added the necessary code below for you.\nYour task is to make the color appear. Add a new aesthetic (so, inside the parentheses following aes) to the following code to assign color = species.\nBelow the graph, comment on what you see.\n\n\n# Modify the aesthetics to add color = species\nggplot(penguins, aes(y = bill_length_mm, x = bill_depth_mm)) +\n  geom_point() +\n  scale_color_viridis_d() +\n  theme_bw()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nPlease write up your answer here.\n\nAnother way to include a grouping variable is to use shape instead of color.\n\nggplot(penguins, aes(y = bill_length_mm, x = bill_depth_mm,\n                     shape = species)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nThe defaults here leave a lot to be desired. It’s hard to see clusters in the data when all the shapes (circle, triangle, and square) look like similar little blobs.\nWith some advanced customization, we can get a slightly more visually distinct choice of shapes, but it may not be worth the extra work unless you are forced to print in black-and-white (say, as required by a print publication).\n\nggplot(penguins, aes(y = bill_length_mm, x = bill_depth_mm,\n                     shape = species)) +\n  geom_point() +\n  scale_shape_manual(values = c(2, 3, 20))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nThis website has a nice description of all the available shapes and how to use them: https://blog.albertkuo.me/post/point-shape-options-in-ggplot/\nEvery part of the graph can be customized, from the color scheme to the tick marks on the axes, to the major and minor grid lines that appear on the background. We won’t go into all that, but you can look at the ggplot2 documentation online and search Google for examples if you want to dig in and figure out how to do some of that stuff. However, the default options are often (but not always) the best, so be careful that your messing around doesn’t inadvertently make the graph less clear or less appealing.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#conclusion",
    "href": "04-numerical_data-web.html#conclusion",
    "title": "4  Numerical data",
    "section": "4.8 Conclusion",
    "text": "4.8 Conclusion\nSummary statistics are simple numbers that describe and summarize data sets. Measures of center tell us where the “middle” of our numerical data lies, and measures of spread tell us how spread out our numerical data is. These measures should always be reported in pairs, for example the mean/standard deviation, or the median/IQR.\nThe ggplot2 package with its ggplot command is a very versatile tool for creating nice graphs relatively easily. For a single numerical variable, the standard graph type is a histogram. For two numerical variables, use a scatterplot. For a numerical response with a categorical predictor, use either a side-by-side boxplot or a stacked histogram.\n\n4.8.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "04-numerical_data-web.html#footnotes",
    "href": "04-numerical_data-web.html#footnotes",
    "title": "4  Numerical data",
    "section": "",
    "text": "This notation is part of a mathematical document preparation system called LaTeX, pronounced “Lay-tek” (not like the rubbery substance).↩︎\nUnless you run in certain circles with economists. For some reason, economists often switch their axes.↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Numerical data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html",
    "href": "05-manipulating_data-web.html",
    "title": "5  Manipulating data",
    "section": "",
    "text": "5.1 Introduction\nThis tutorial will import some data from the web and then explore it using the amazing dplyr package, a package which is quickly becoming the de facto standard among R users for manipulating data. It’s part of the tidyverse that we’ve already used in several chapters.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#introduction",
    "href": "05-manipulating_data-web.html#introduction",
    "title": "5  Manipulating data",
    "section": "",
    "text": "5.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n5.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/05-manipulating_data.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n5.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n5.1.4 Load packages\nWe load the tidyverse package as usual, but this time it is to give us access to the dplyr package, which is loaded alongside our other tidyverse packages like ggplot2. The tidyverse also has a package called readr that will allow us to import data from an external source (in this case, a web site).\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#importing-csv-data",
    "href": "05-manipulating_data-web.html#importing-csv-data",
    "title": "5  Manipulating data",
    "section": "5.2 Importing CSV data",
    "text": "5.2 Importing CSV data\nFor most of the chapters, we use data sets that are either included in base R or included in a package that can be loaded into R. But it is useful to see how to get a data set from outside the R ecosystem. This depends a lot on the format of the data file, but a common format is a “comma-separated values” file, or CSV file. If you have a data set that is not formatted as a CSV file, it is usually pretty easy to open it in something like Google Spreadsheets or Microsoft Excel and then re-save it as a CSV file.\nThe file we’ll import is a random sample from all the commercial domestic flights that departed from Houston, Texas, in 2011.\nWe use the read_csv command to import a CSV file. In this case, we’re grabbing the file from a web page where the file is hosted. If you have a file on your computer, you can also put the file into your project directory and import it from there. Put the URL (for a web page) or the filename (for a file in your project directory) in quotes inside the read_csvcommand. We also need to assign the output to a tibble, so we’ve called it hf for “Houston flights”.\n\nhf &lt;- read_csv(\"https://vectorposse.github.io/intro_stats/data/hf.csv\")\n\nRows: 22758 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): UniqueCarrier, TailNum, Origin, Dest, CancellationCode\ndbl (16): Year, Month, DayofMonth, DayOfWeek, DepTime, ArrTime, FlightNum, A...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nHere is a preview of the data set. If you’re looking at this on the website, you’ll note that only the first 10,000 rows print here.\n\nhf\n\n\n  \n\n\n\nThe glimpse command is the most reliable place to see the correct number of rows.\n\nglimpse(hf)\n\nRows: 22,758\nColumns: 21\n$ Year              &lt;dbl&gt; 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011…\n$ Month             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ DayofMonth        &lt;dbl&gt; 12, 17, 24, 9, 18, 22, 11, 14, 26, 14, 18, 20, 3, 12…\n$ DayOfWeek         &lt;dbl&gt; 3, 1, 1, 7, 2, 6, 2, 5, 3, 5, 2, 4, 1, 3, 6, 4, 1, 3…\n$ DepTime           &lt;dbl&gt; 1419, 1530, 1356, 714, 721, 717, 1953, 2119, 2009, 1…\n$ ArrTime           &lt;dbl&gt; 1515, 1634, 1513, 829, 827, 829, 2051, 2229, 2103, 1…\n$ UniqueCarrier     &lt;chr&gt; \"AA\", \"AA\", \"AA\", \"AA\", \"AA\", \"AA\", \"AA\", \"AA\", \"AA\"…\n$ FlightNum         &lt;dbl&gt; 428, 428, 428, 460, 460, 460, 533, 533, 533, 1121, 1…\n$ TailNum           &lt;chr&gt; \"N577AA\", \"N518AA\", \"N531AA\", \"N586AA\", \"N558AA\", \"N…\n$ ActualElapsedTime &lt;dbl&gt; 56, 64, 77, 75, 66, 72, 58, 70, 54, 65, 135, 144, 64…\n$ AirTime           &lt;dbl&gt; 41, 48, 43, 51, 46, 47, 44, 45, 39, 47, 114, 111, 46…\n$ ArrDelay          &lt;dbl&gt; 5, 84, 3, -6, -8, -6, -29, 69, -17, -11, 39, -1, -2,…\n$ DepDelay          &lt;dbl&gt; 19, 90, -4, -6, 1, -3, -12, 74, 4, -1, 44, -5, -1, 1…\n$ Origin            &lt;chr&gt; \"IAH\", \"IAH\", \"IAH\", \"IAH\", \"IAH\", \"IAH\", \"IAH\", \"IA…\n$ Dest              &lt;chr&gt; \"DFW\", \"DFW\", \"DFW\", \"DFW\", \"DFW\", \"DFW\", \"DFW\", \"DF…\n$ Distance          &lt;dbl&gt; 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 96…\n$ TaxiIn            &lt;dbl&gt; 4, 8, 6, 11, 7, 18, 3, 5, 9, 8, 7, 20, 5, 8, 8, 7, 4…\n$ TaxiOut           &lt;dbl&gt; 11, 8, 28, 13, 13, 7, 11, 20, 6, 10, 14, 13, 13, 10,…\n$ Cancelled         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ CancellationCode  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Diverted          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nThe one disadvantage of a file imported from the internet or your computer is that it does not come with a help file. (Only packages in R have help files.) Hopefully you have access to some kind of information about the data you’re importing. In this case, we get lucky because the full Houston flights data set happens to be available in a package called hflights.\n\nExercise 1\nClick or copy this link to view a copy of the documentation for the full Houston flights data. Read the webpage so you know what all the variables mean. Report below how many flights are in the original hflights data. What fraction of the original data has been sampled in the CSV file we imported above?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#introduction-to-dplyr",
    "href": "05-manipulating_data-web.html#introduction-to-dplyr",
    "title": "5  Manipulating data",
    "section": "5.3 Introduction to dplyr",
    "text": "5.3 Introduction to dplyr\nThe dplyr package (pronounced “dee-ply-er”) contains tools for manipulating the rows and columns of tibbles. The key to using dplyr is to familiarize yourself with the “key verbs”:\n\nselect (and rename)\nfilter (and slice)\narrange\nmutate (and transmute)\nsummarise (with group_by)\ncount\n\nWe’ll consider these one by one. We won’t have time to cover every aspect of these functions. More information appears in the help files, as well as this very helpful “cheat sheet”: https://rstudio.github.io/cheatsheets/html/data-transformation.html",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#select",
    "href": "05-manipulating_data-web.html#select",
    "title": "5  Manipulating data",
    "section": "5.4 select",
    "text": "5.4 select\nThe select verb is very easy. It just selects some subset of variables (the columns of your data set).\nThe select command from the dplyr package illustrates one of the common issues R users face. Because the word “select” is pretty common, and selecting things is a common task, there are multiple packages that have a function called select. Depending on the order in which packages were loaded, R might get confused as to which version of select you want and try to apply the wrong one. One way to get the correct version is to specify the package in the syntax. Instead of typing select, we can type dplyr::select to ensure we get the version from the dplyr package. We’ll do this in all future uses of the select function. (The other functions in this chapter don’t cause us trouble because we don’t use any other packages whose functions conflict like this.)\nSuppose all we wanted to see was the carrier, origin, and destination. The command to do this appears in the next code chunk. (Note that we’re only going to print the first 100 rows. It takes a lot of memory to keep printing tibbles that have 22,758 rows!)\n\nhf_select &lt;- dplyr::select(hf, UniqueCarrier, Origin, Dest)\nhead(hf_select, n = 100)\n\n\n  \n\n\n\nA brief but important aside here: there is nothing special about the variable name hf_select. We could have typed\nbeef_gravy &lt;- dplyr::select(hf, UniqueCarrier, Origin, Dest)\nand it would work just as well. Generally speaking, though, you want to give variables a name that reflects the intent of your analysis.\nAlso, it is important to assign the result to a variable. If we had just typed\ndplyr::select(hf, UniqueCarrier, Origin, Dest)\nthe result would print to the screen, but it wouldn’t be stored anywhere for future use.\nAlso, it is important to assign the result to a new variable. If we had typed\nhf &lt;- dplyr::select(hf, UniqueCarrier, Origin, Dest)\nthis would have overwritten the original tibble hf with this new version with only three variables. We want to preserve hf because we want to do other things with the entire data set later.\nThe take-home message here is this: Major modifications to your data should generally be given a new variable name. There are caveats here, though. Every time you create a new tibble, you also fill up more memory with your creation. So if you don’t need the old version of a tibble anymore, you are safe to overwrite the old version with something new and continue working with that newer modification.\nOkay, back to the select function. The first argument of select is the tibble. After that, just list all the names of the variables you want to select.\nIf you don’t like the names of the variables, you can change them as part of the select process. For example,\n\nhf_select &lt;- dplyr::select(hf,\n                           carrier = UniqueCarrier,\n                           origin = Origin,\n                           dest = Dest)\nhead(hf_select, n = 100)\n\n\n  \n\n\n\n(Note here that we are overwriting hf_select which had been defined slightly differently before. However, these two versions of hf_select are basically the same object, so no need to keep the older version around just taking up space unnecessarily.)\nThere are a few notational shortcuts. For example, try to figure out what the following commands are doing:\n\nhf_select2 &lt;- dplyr::select(hf, DayOfWeek:UniqueCarrier)\nhead(hf_select2, n = 100)\n\n\n  \n\n\n\n\nhf_select3 &lt;- dplyr::select(hf, starts_with(\"Taxi\"))\nhead(hf_select3, n = 100)\n\n\n  \n\n\n\n\nExercise 2\nWhat is contained in the new tibbles hf_select2 and hf_select3? In other words, what does the colon (:) appear to do and what does starts_with appear to do in the select function?\n\nPlease write up your answer here.\n\n\nThe cheat sheet shows a lot more of these “helper functions” if you’re interested.\nThe other command that’s related to select is rename. The only difference is that select will throw away any columns you don’t select (which is what you want and expect, typically), whereas rename will keep all the columns, but rename those you designate.\n\n\nExercise 3\nPutting a minus sign in front of a variable name in the select command will remove the variable. Create a tibble called hf_select4 that removes Year, DayofMonth, DayOfWeek, FlightNum, and Diverted. (Be careful with the unusual—and inconsistent!—capitalization in those variable names.) In the second part of the code chunk below, type head(hf_select4, n = 100) so that the first 100 rows of the tibble print to the screen (just like in all the above examples).\n\n\n# Add code here to define hf_select4.\n# Add code here to print the first 100 rows of hf_select4.\n\n\n\nTo free up some memory, we’re going to remove some of the tibbles we’ve created. This won’t affect how they will print out above. You will never have to do this on your own.\n\nrm(hf_select, hf_select2, hf_select3)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#filter",
    "href": "05-manipulating_data-web.html#filter",
    "title": "5  Manipulating data",
    "section": "5.5 filter",
    "text": "5.5 filter\nThe filter verb works a lot like select, but for rows instead of columns.\nFor example, let’s say we only want to see Delta flights. We use filter. (We can print all the rows here because the resulting tibble is much smaller!)\n\nhf_filter &lt;- filter(hf, UniqueCarrier == \"DL\")\nhf_filter\n\n\n  \n\n\n\nIn the printout of the tibble above, if you can’t see the UniqueCarrier column, click the black arrow on the right to scroll through the columns until you can see it. You can click “Next” at the bottom to scroll through the rows.\n\nExercise 4\nHow many rows did we get in the hf_filter tibble? What do you notice about the UniqueCarrier of all those rows?\n\nPlease write up your answer here.\n\n\nJust like select, the first argument of filter is the name of the tibble. Following that, you must specify some condition. Only rows meeting that condition will be included in the output.\nOne thing that is unusual here is the double equal sign (UniqueCarrier == \"DL\"). This won’t be a mystery to people with programming experience, but it tends to be a sticking point for the rest of us. A single equals sign represents assignment. If I type x = 3, what I mean is, “Take the letter x and assign it the value 3.” In R, we would also write x &lt;- 3 to mean the same thing. The first line of the code chunk below assigns x to be 3. Therefore, the following line that just says x creates the output “3”.\n\nx = 3\nx\n\n[1] 3\n\n\nOn the other hand, x == 3 means something completely different. This is a logical statement that is either true or false. Either x is 3, in which case we get TRUE or x is not 3, and we get FALSE.\n\nx == 3\n\n[1] TRUE\n\n\n(It’s true because we just assigned x to be 3 in the previous code chunk!)\nIn the above filter command, we are saying, “Give us the rows where the value of UniqueCarrier is \"DL\", or, in other words, where the statement UniqueCarrier == \"DL\" is true.\nAs another example, suppose we wanted to find out all flights that leave before 6:00 a.m. Due to the interesting way that times are stored in this data, we can do something like the following:\n\nhf_filter2 &lt;- filter(hf, DepTime &lt; 600)\nhf_filter2\n\n\n  \n\n\n\n\n\nExercise 5\nLook at the help file for hflights again (linked in Exercise 1). Why do we have to use the number 600 in the command above? (Read the description of the DepTime variable.)\n\nPlease write up your answer here.\n\n\nIf we need two or more conditions, we use & for “and” and | for “or”. The following will give us only the Delta flights that departed before 6:00 a.m.\n\nhf_filter3 &lt;- filter(hf, UniqueCarrier == \"DL\" & DepTime &lt; 600)\nhf_filter3\n\n\n  \n\n\n\nAgain, check the cheat sheet for more complicated condition-checking if needed.\n\n\nExercise 6(a)\nThe symbol != means “not equal to” in R. Use the filter command to create a tibble called hf_filter4 that finds all flights except those flying into Salt Lake City (“SLC”). As before, print the first 100 rows to the screen.\n\n\n# Add code here to define hf_filter4.\n# Add code here to print the first 100 rows of hf_filter4.\n\n\n\n\nExercise 6(b)\nHow many flights were there flying into SLC? In other words, how many rows were removed from the original hf tibble to produce hf_filter4?\nBe careful! You only printed 100 rows to the screen, but that doesn’t represent all the filtered data. How can you figure out how many rows are actually left in hf_filter4?\n\nPlease write up your answer here.\n\n\nThe slice command is related, but fairly useless in practice. It will allow you to extract rows by position. So slice(hf, 1:10) will give you the first 10 rows. As a general rule, the information available in a tibble should never depend on the order in which the rows appear. Therefore, no function you run should make any assumptions about the ordering of your data. The only reason one might want to think about the order of data is for convenience in presenting that data visually for someone to inspect. And that brings us to…",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#arrange",
    "href": "05-manipulating_data-web.html#arrange",
    "title": "5  Manipulating data",
    "section": "5.6 arrange",
    "text": "5.6 arrange\nThis just re-orders the rows, sorting on the values of one or more specified columns. As we mentioned before, in most data analyses you work with summaries of the data that do not depend on the order of the rows, so this is not quite as interesting as some of the other verbs. In fact, since the re-ordering is usually for the visual benefit of the reader, there is often no need to store the output in a new variable. We’ll just print the output to the screen (well, the first 100 rows anyway).\n\nhead(arrange(hf, ActualElapsedTime), n = 100)\n\n\n  \n\n\n\nScroll over to the ActualElapsedTime variable in the output above (using the black right arrow) to see that these are now sorted in ascending order.\n\nExercise 7\nHow long is the shortest actual elapsed time? Why is this flight so short? (Hint: look at the destination.) Which airline flies that route? You may have to use your best friend Google to look up airport and airline codes.\n\nPlease write up your answer here.\n\n\nIf you want descending order, do this:\n\nhead(arrange(hf, desc(ActualElapsedTime)), n = 100)\n\n\n  \n\n\n\n\n\nExercise 8\nHow long is the longest actual elapsed time? Why is this flight so long? Which airline flies that route? Again, you may have to use your best friend Google to look up airport and airline codes.\n\nPlease write up your answer here.\n\n\n\nExercise 9(a)\nYou can sort by multiple columns. The first column listed will be the first in the sort order, and then within each level of that first variable, the next column will be sorted, etc. Print a tibble that sorts first by destination (Dest) and then by arrival time (ArrTime), both in the default ascending order. Print only the first 100 rows as above.\n\n\n# Add code here to sort hf first by Dest and then by ArrTime.\n\n\n\n\nExercise 9(b)\nBased on the output of the previous part, what is the first airport code alphabetically and to what city does it correspond? (Use Google if you need to link the airport code to a city name.) At what time did the earliest flight to that city arrive?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#mutate",
    "href": "05-manipulating_data-web.html#mutate",
    "title": "5  Manipulating data",
    "section": "5.7 mutate",
    "text": "5.7 mutate\nFrequently, we want to create new variables that combine information from one or more existing variables. We use mutate for this. For example, suppose we wanted to find the total time of the flight. We might do this by adding up the minutes from several variables: TaxiOut, AirTime, and TaxiIn, and assigning that sum to a new variable called total. Scroll all the way to the right in the output below (using the black right arrow) to see the new total variable.\n\nhf_mutate &lt;- mutate(hf, total = TaxiOut + AirTime + TaxiIn)\nhead(hf_mutate, n = 100)\n\n\n  \n\n\n\nAs it turns out, that was wasted effort because that variable already exists in ActualElapsedTime. The all.equal command below checks that both specified columns contain the exact same values.\n\nall.equal(hf_mutate$total, hf$ActualElapsedTime)\n\n[1] TRUE\n\n\nPerhaps we want a variable that just classifies a flight as arriving late or not. Scroll all the way to the right in the output below to see the new late variable.\n\nhf_mutate2 &lt;- mutate(hf, late = (ArrDelay &gt; 0))\nhead(hf_mutate2, n = 100)\n\n\n  \n\n\n\nThis one is a little tricky. Keep in mind that ArrDelay &gt; 0 is a logical condition that is either true or false, so that truth value is what is recorded in the late variable. If the arrival delay is a positive number of minutes, the flight is considered “late”, and if the arrival delay is zero or negative, it’s not late.\nIf we would rather see more descriptive words than TRUE or FALSE, we have to do something even more tricky. Look at the late variable in the output below.\n\nhf_mutate3 &lt;- mutate(hf,\n                     late = as_factor(ifelse(ArrDelay &gt; 0, \n                                             \"Late\", \"On time\")))\nhead(hf_mutate3, n = 100)\n\n\n  \n\n\n\nThe as_factor command tells R that late should be a categorical variable. Without it, the variable would be a “character” variable, meaning a list of character strings. It won’t matter for us here, but in any future analysis, you want categorical data to be treated as such by R.\nThe main focus here is on the ifelse construction. The ifelse function takes a condition as its first argument. If the condition is true, it returns the value in the second slot, and if it’s false (the “else” part of if/else), it returns the value in the third slot. In other words, if ArrDelay &gt; 0, this means the flight is late, so the new late variable should say “Late”; whereas, if ArrDelay is not greater than zero (so either zero or possibly negative if the flight arrived early), then the new variable should say “On Time”.\nHaving said that, I would generally recommend that you leave these kinds of variables as logical types. It’s much easier to summarize such variables in R, namely because R treats TRUE as 1 and FALSE as 0, allowing us to do things like this:\n\nmean(hf_mutate2$late, na.rm = TRUE)\n\n[1] 0.4761522\n\n\nThis gives us the proportion of late flights.\nNote that we needed na.rm as you’ve seen in previous chapter. For example, look at the 93rd row of the tibble:\n\nslice(hf_mutate2, 93)\n\n\n  \n\n\n\nNotice that all the times are missing. There are a bunch of rows like this. Since there is not always an arrival delay listed, the ArrDelay variable doesn’t always have a value, and if ArrDelay is NA, the late variable will be too. So if we try to calculate the mean with just the mean command, this happens:\n\nmean(hf_mutate2$late)\n\n[1] NA\n\n\n\nExercise 10\nWhy does taking the mean of a bunch of zeros and ones give us the proportion of ones? (Think about the formula for the mean. What happens when we take the sum of all the zeros and ones, and what happens when we divide by the total?)\n\nPlease write up your answer here.\n\n\n\nExercise 11\nCreate a new tibble called hf_mutate4 that uses the mutate command to create a new variable called dist_k which measures the flight distance in kilometers instead of miles. (Hint: to get from miles to kilometers, multiply the distance by 1.60934.) Print the first 100 rows of the output to the screen.\n\n\n# Add code here to define hf_mutate4.\n# Add code here to print the first 100 rows of hf_mutate4.\n\n\n\nA related verb is transmute. The only difference between mutate and transmute is that mutate creates the new column(s) and keeps all the old ones too, whereas transmute will throw away all the columns except the newly created ones. This is not something that you generally want to do, but there are exceptions. For example, if we were preparing a report and we needed only to talk about flights being late or not, it would do no harm (and would save some memory) to throw away everything except the late variable.\n\nTo free up some memory, we’re going to remove some of the tibbles we’ve created. This won’t affect how they will print out above. You will never have to do this on your own.\n\nrm(hf_mutate, hf_mutate2, hf_mutate3)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#summarise-with-group_by",
    "href": "05-manipulating_data-web.html#summarise-with-group_by",
    "title": "5  Manipulating data",
    "section": "5.8 summarise (with group_by)",
    "text": "5.8 summarise (with group_by)\nFirst, before you mention that summarise is spelled wrong…well, the author of the dplyr package is named Hadley Wickham (same author as the ggplot2 package) and he is from New Zealand. So that’s the way he spells it. He was nice enough to include the summarize function as an alias if you need to use it ’cause this is ’Murica!\nThe summarise function, by itself, is kind of boring, and doesn’t do anything that couldn’t be done more easily with base R functions.\n\nsummarise(hf, mean(Distance))\n\n\n  \n\n\n\n\nmean(hf$Distance)\n\n[1] 790.5861\n\n\nWhere summarise shines is in combination with group_by. For example, let’s suppose that we want to see average flight distances, but broken down by airline. We can do the following:\n\nhf_summ_grouped &lt;- group_by(hf, UniqueCarrier)\nhf_summ &lt;- summarise(hf_summ_grouped, mean(Distance))\nhf_summ\n\n\n  \n\n\n\nAlso note that we can give summary columns a new name if we wish. In hf_summ, we didn’t give the new column an explicit name, so it showed up in our tibble as a column called mean(Distance). If we want to change it, we can do this:\n\nhf_summ_grouped &lt;- group_by(hf, UniqueCarrier)\nhf_summ &lt;- summarise(hf_summ_grouped, mean_dist = mean(Distance))\nhf_summ\n\n\n  \n\n\n\nLook at the earlier version of hf_summ and compare it to the one above. Make sure you see that the name of the second column changed.\n\nTo free up some memory, we’re going to remove some of the tibbles we’ve created. This won’t affect how they will print out above. You will never have to do this on your own.\n\nrm(hf_summ_grouped)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#piping",
    "href": "05-manipulating_data-web.html#piping",
    "title": "5  Manipulating data",
    "section": "5.9 Piping",
    "text": "5.9 Piping\nThis is a good spot to introduce a time-saving and helpful device called “piping”, denoted by the symbol |&gt;. We’ve seen this weird combination of symbols in past chapters, but we haven’t really explained what they do.\nPiping always looks more complicated than it really is. The technical definition is that\nx |&gt; f(y)\nis equivalent to\nf(x, y).\nAs a simple example, we could add two numbers like this:\n\nsum(2, 3)\n\n[1] 5\n\n\nOr using the pipe, we could do it like this:\n\n2 |&gt; sum(3)\n\n[1] 5\n\n\nAll this is really saying is that the pipe takes the thing on its left, and plugs it into the first slot of the function on its right. So why do we care?\nLet’s revisit the combination group_by/summarise example above. There are two ways to do this without pipes, and both are a little ugly. One way is above, where you have to keep reassigning the output to new variables (in the case above, to hf_summ_grouped and then hf_summ). The other way is to nest the functions:\n\nsummarise(group_by(hf, UniqueCarrier), mean_dist = mean(Distance))\n\n\n  \n\n\n\nThis requires a lot of brain power to parse. In part, this is because the function is inside-out: first you group hf by UniqueCarrier, and then the result of that is summarized. Here’s how the pipe fixes it:\n\nhf |&gt;\n  group_by(UniqueCarrier) |&gt;\n  summarise(mean_dist = mean(Distance))\n\n\n  \n\n\n\nLook at the group_by line. The group_by function would normally take two arguments: the tibble, and then the grouping variable. But it appears to have only one argument. Now look at the previous line. The pipe says to insert whatever is on its left (hf) into the first slot of the function on its right (group_by). So the net effect is still to evaluate the function group_by(hf, UniqueCarrier).\nNow look at the summarise line. Again, summarise is a function of two inputs, but all we see is the part that finds the mean. The pipe at the end of the previous line tells the summarise function to insert the stuff already computed (the grouped tibble returned by group_by(hf, UniqueCarrier)) into the first slot of the summarise function.\nPiping takes a little getting used to, but once you’re good at it, you’ll never go back. It’s just makes more sense semantically. When we read the above set of commands, we see a set of instructions in chronological order:\n\nStart with the tibble hf.\nNext, group by the carrier.\nNext, summarize each group using the mean distance.\n\nNow we can assign the result of all that to the new variable hf_summ:\n\nhf_summ &lt;- hf |&gt;\n  group_by(UniqueCarrier) |&gt;\n  summarise(mean_dist = mean(Distance))\nhf_summ\n\n\n  \n\n\n\nSome people even take this one step further. The result of all the above is assigned to a new variable hf_summ that currently appears as the first command (hf_summ &lt;- ...) But you could write this as\n\nhf |&gt;\n  group_by(UniqueCarrier) |&gt;\n  summarise(mean_dist = mean(Distance)) -&gt; hf_summ\n\nNow it says the following:\n\nStart with the tibble hf.\nNext, group by the carrier.\nNext, summarize each group using the mean distance.\nFinally, assign the result to a new variable called hf_summ.\n\n(As we’ve seen in a previous chapter, the arrow operator for assignment works both directions!)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#count",
    "href": "05-manipulating_data-web.html#count",
    "title": "5  Manipulating data",
    "section": "5.10 count",
    "text": "5.10 count\nLet’s try some counting. Counting is a form of summarizing data by groups. But this is a common enough task that dplyr doesn’t make us use group_by and summarise. It provides a count command instead. What if we wanted to know how many flights correspond to each carrier?\n\nhf_summ2 &lt;- hf |&gt;\n  count(UniqueCarrier)\nhf_summ2\n\n\n  \n\n\n\nThe new count column of hf_summ2 is just called n. That’s okay, but if we insist on giving it a more user-friendly name, we can do so as follows:\n\nhf_summ2 &lt;- hf |&gt;\n  count(UniqueCarrier, name = \"total_count\")\nhf_summ2\n\n\n  \n\n\n\nThis is a little different because it requires us to use a name argument and put the new name in quotes.\n\nExercise 12(a)\nCreate a tibble called hf_summ3 that lists the total count of flights for each day of the week. Be sure to use the pipe as above. Print the output to the screen. (You don’t need to give the count column a new name.)\n\n\n# Add code here to define hf_summ3.\n# Add code here to print hf_summ3.\n\n\n\n\nExercise 12(b)\nAccording to the output in the previous part, what day of the week had the fewest flights? (Assume 1 = Monday.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#putting-it-all-together",
    "href": "05-manipulating_data-web.html#putting-it-all-together",
    "title": "5  Manipulating data",
    "section": "5.11 Putting it all together",
    "text": "5.11 Putting it all together\nOften we need more than one of these verbs. In many data analyses, we need to do a sequence of operations to get at the answer we seek. This is most easily accomplished using a more complicated sequence of pipes.\nHere’s an example of multi-step piping. Let’s say that we only care about Delta flights, and even then, we only want to know about the month of the flight and the departure delay. From there, we wish to group by month so we can find the maximum departure delay by month. Here is a solution, piping hot and ready to go. [groan]\n\nhf_grand_finale &lt;- hf |&gt;\n  filter(UniqueCarrier == \"DL\") |&gt;\n  dplyr::select(Month, DepDelay) |&gt;\n  group_by(Month) |&gt;\n  summarise(max_delay = max(DepDelay, na.rm = TRUE))\nhf_grand_finale\n\n\n  \n\n\n\nGo through each line of code carefully and translate it into English:\n\nWe define a variable called hf_grand_finale that starts with the original hf data.\nWe filter this data so that only Delta flights will be analyzed.\nWe select the variables Month and DepDelay, throwing away all other variables that are not of interest to us. (Don’t forget to use the dplyr::select syntax to make sure we get the right function!)\nWe group_by month so that the results will be displayed by month.\nWe summarise each month by listing the maximum value of DepDelay that appears within each month.\nWe print the result to the screen.\n\nNotice in the summarise line, we again took advantage of dplyr’s ability to rename any variable along the way, assigning our computation to the new variable max_delay. Also note the need for na.rm = TRUE so that the max command ignores any missing values.\nA minor simplification results from the realization that summarise must throw away any variables it doesn’t need. (Think about why for a second: what would summarise do with, say, ArrTime if we’ve only asked it to calculate the maximum value of DepDelay for each month?) So you could write this instead, removing the select clause:\n\nhf_grand_finale &lt;- hf |&gt;\n  filter(UniqueCarrier == \"DL\") |&gt;\n  group_by(Month) |&gt;\n  summarise(max_delay = max(DepDelay, na.rm = TRUE))\nhf_grand_finale\n\n\n  \n\n\n\nCheck that you get the same result. With massive data sets, it’s possible that the selection and sequence of these verbs matter, but you don’t see an appreciable difference here, even with 22758 rows. (There are ways of benchmarking performance in R, but that is a more advanced topic.)\n\nExercise 13\nSummarize in your own words what information is contained in the hf_grand_finale tibble. In other words, what are the numbers in the max_delay column telling us? Be specific!\n\nPlease write up your answer here.\n\nThe remaining exercises are probably the most challenging you’ve seen so far in the course. Take each slowly. Read the instructions carefully. Go back through the chapter and identify which “verb” needs to be used for each part of the task. Examine the sample code in those sections carefully to make sure you get the syntax right. Create a sequence of “pipes” to do each task, one-by-one. Copy and paste pieces of code from earlier and make minor changes to adapt the code to the given task.\n\n\nExercise 14\nCreate a tibble named hf_ex14 that counts the flights to LAX grouped by day of the week. (Hint: you need to filter to get flights to LAX. Then you’ll need to count using DayOfWeek as a grouping variable. Because you’re using count, you don’t need group_by or summarise.) Print the output to the screen.\n\n\n# Add code here to count the flights to LAX\n# grouped by day of the week.\n# Print hf_ex14 to the screen.\n\n\n\n\nExercise 15\nCreate a tibble named hf_ex15 that finds the median distance flight for each airline. Sort the resulting tibble from highest distance to lowest. (Hint: You’ll need to group_by carrier and summarise using the median function. Finally, you’ll need to arrange the result according to the median distance variable that you just created.) Print the output to the screen.\n\n\n# Add code here to find the median distance by airline.\n# Print hf_ex15 to the screen.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "05-manipulating_data-web.html#conclusion",
    "href": "05-manipulating_data-web.html#conclusion",
    "title": "5  Manipulating data",
    "section": "5.12 Conclusion",
    "text": "5.12 Conclusion\nRaw data often doesn’t come in the right form for us to run our analyses. The dplyr verbs are powerful tools for manipulating tibbles until they are in the right form.\n\n5.12.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulating data</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html",
    "href": "06-correlation-web.html",
    "title": "6  Correlation",
    "section": "",
    "text": "6.1 Introduction\nIn this chapter, we will learn about the concept of correlation, which is a way of measuring a linear relationship between two numerical variables.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#introduction",
    "href": "06-correlation-web.html#introduction",
    "title": "6  Correlation",
    "section": "",
    "text": "6.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"faraway\")\ninstall.packages(\"openintro\")\n\n\n6.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/06-correlation.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n6.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n6.1.4 Load packages\nWe load the now-standard tidyverse package. We also include the faraway package to access data about Chicago in the 1970s, the openintro package to access the bdims data set on body dimensions, and the palmerpenguins package to access the familiar penguins data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(faraway)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following objects are masked from 'package:faraway':\n\n    orings, twins\n\nlibrary(palmerpenguins)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#redlining-in-chicago",
    "href": "06-correlation-web.html#redlining-in-chicago",
    "title": "6  Correlation",
    "section": "6.2 Redlining in Chicago",
    "text": "6.2 Redlining in Chicago\nThe data set we will use throughout this chapter is from Chicago in the 1970s studying the practice of “redlining”.\n\nExercise 1\nDo an internet search for “redlining”.\nConsult at least two or three sources. Then, in your own words (not copied and pasted from any of the websites you consulted), explain what “redlining” means.\n\nPlease write up your answer here.\n\n\nThe chredlin data set appears in the faraway package accompanying a book by Julian Faraway (Practical Regression and Anova using R, 2002.) Faraway explains:\n\n“In a study of insurance availability in Chicago, the U.S. Commission on Civil Rights attempted to examine charges by several community organizations that insurance companies were redlining their neighborhoods, i.e. canceling policies or refusing to insure or renew. First the Illinois Department of Insurance provided the number of cancellations, non-renewals, new policies, and renewals of homeowners and residential fire insurance policies by ZIP code for the months of December 1977 through February 1978. The companies that provided this information account for more than 70% of the homeowners insurance policies written in the City of Chicago. The department also supplied the number of FAIR plan policies written and renewed in Chicago by zip code for the months of December 1977 through May 1978. Since most FAIR plan policyholders secure such coverage only after they have been rejected by the voluntary market, rather than as a result of a preference for that type of insurance, the distribution of FAIR plan policies is another measure of insurance availability in the voluntary market.”\n\nIn other words, the degree to which residents obtained FAIR policies can be seen as an indirect measure of redlining. This participation in an “involuntary” market is thought to be largely driven by rejection of coverage under more traditional insurance plans.\n\n\n6.2.1 Exploratory data analysis\nBefore we learn about correlation, let’s get to know our data a little better.\nType ?chredlin at the Console to read the help file. While it’s not very informative about how the data was collected, it does have crucial information about the way the data is structured.\nHere is the data set:\n\nchredlin\n\n\n  \n\n\n\n\nExercise 2\nWhat do each of the rows of this data set represent? You’ll need to refer to the help file. (They are not individual people.)\n\nPlease write up your answer here.\n\n\n\nExercise 3\nThe race variable is numeric. Why? What do these numbers represent? (Again, refer to the help file.)\n\nPlease write up your answer here.\n\n\nThe glimpse command gives a concise overview of all the variables present.\n\nglimpse(chredlin)\n\nRows: 47\nColumns: 7\n$ race     &lt;dbl&gt; 10.0, 22.2, 19.6, 17.3, 24.5, 54.0, 4.9, 7.1, 5.3, 21.5, 43.1…\n$ fire     &lt;dbl&gt; 6.2, 9.5, 10.5, 7.7, 8.6, 34.1, 11.0, 6.9, 7.3, 15.1, 29.1, 2…\n$ theft    &lt;dbl&gt; 29, 44, 36, 37, 53, 68, 75, 18, 31, 25, 34, 14, 11, 11, 22, 1…\n$ age      &lt;dbl&gt; 60.4, 76.5, 73.5, 66.9, 81.4, 52.6, 42.6, 78.5, 90.1, 89.8, 8…\n$ involact &lt;dbl&gt; 0.0, 0.1, 1.2, 0.5, 0.7, 0.3, 0.0, 0.0, 0.4, 1.1, 1.9, 0.0, 0…\n$ income   &lt;dbl&gt; 11.744, 9.323, 9.948, 10.656, 9.730, 8.231, 21.480, 11.104, 1…\n$ side     &lt;fct&gt; n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n…\n\n\n\n\nExercise 4(a)\nWhich variable listed above represents participation in the FAIR plan? How is it measured? (Again, refer to the help file.)\n\nPlease write up your answer here.\n\n\n\nExercise 4(b)\nWhy is it important to analyze the number of plans per 100 housing units as opposed to the total number of plans across each ZIP code? (Hint: what happens if some ZIP codes are larger than others?)\n\nPlease write up your answer here.\n\n\nWe are interested in the association between race and involact. If redlining plays a role in driving people toward FAIR plan policies, we would expect there to be a relationship between the racial composition of a ZIP code and the rate of FAIR plan policies obtained in that ZIP code.\n\n\nExercise 5(a)\nSince race is a numerical variable, what type of graph or chart is appropriate for visualizing it? (You may need to refer back to the “Numerical data” chapter.)\n\nPlease write up your answer here.\n\n\n\nExercise 5(b)\nUsing ggplot code, create the type of graph you identified above. After creating the initial plot, be sure to go back and set the binwidth and boundary to sensible values. (Refer back to the “Numerical data” chapter for sample code if you’ve forgotten how to make such a graph. If you were unsure about part (a), the instructions about binwidth and boundary should be a pretty big hint.)\n\n\n# Add code here to create a plot of race\n\n\n\n\nExercise 5(c)\nDescribe the shape of the race variable using the three key shape descriptors (modes, symmetry, and outliers).\n\nPlease write up your answer here.\n\n\n\nExercise 5(d)\nCreate the same kind of graph as above, but for involact. (Again, go back and set the binwidth and boundary to sensible values.)\n\n\n# Add code here to create a plot of involact\n\n\n\n\nExercise 5(e)\nDescribe the shape of the involact variable using the three key shape descriptors (modes, symmetry, and outliers).\n\nPlease write up your answer here.\n\n\n\nExercise 5(f)\nSince both race and involact are numerical variables, what type of graph or chart is appropriate for visualizing the relationship between them?\n\nPlease write up your answer here.\n\n\n\nExercise 5(g)\nFor our research question, is race functioning as a predictor variable or as the response variable? What about involact? Why? Explain why it makes more sense to think of one of them as the predictor and the other as the response.\n\nPlease write up your answer here.\n\n\n\nExercise 5(h)\nUsing ggplot code, create the type of graph you identified above. Be sure to put involact on the y-axis and race on the x-axis. (Again, that’s a hint in case you were confused in part (g).)\n\n\n# Add code here to create a plot of involact against race",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#correlation",
    "href": "06-correlation-web.html#correlation",
    "title": "6  Correlation",
    "section": "6.3 Correlation",
    "text": "6.3 Correlation\nThe word correlation describes a linear relationship between two numerical variables. As long as certain conditions are met, we can calculate a statistic called the correlation coefficient, often denoted with a lowercase r.\nThere are several different ways to compute a statistic that measures correlation. The most common way, and the way we will learn in this chapter, is often attributed to an English mathematician named Karl Pearson. According to his Wikipedia page,\n\n“Pearson was also a proponent of social Darwinism, eugenics and scientific racism.”\n\n\nExercise 6\nDo an internet search for each of the following terms:\n\nSocial Darwinism\nEugenics\nScientific racism\n\nConsult at least two or three sources for each term. Then, in your own words (not copied and pasted from any of the websites you consulted), explain each of these terms.\n\nPlease write up your answer here.\n\n\nWhile Pearson is often credited with its discovery, the so-called “Pearson correlation coefficient” was first developed by a French scientist, Auguste Bravais. Due to the misattribution of discovery, along with the desire to disassociate the useful tool of correlation from its problematic applications to racism and eugenics, we will just refer to it as the correlation coefficient (without a name attached).\nThe correlation coefficient, r, has some important properties.\n\nThe correlation coefficient is a number between -1 and 1.\nA value close to 0 indicates little or no correlation.\nA value close to 1 indicates strong positive correlation.\nA value close to -1 indicates strong negative correlation.\n\nIn between 0 and 1 (or -1), we often use words like weak, moderately weak, moderate, and moderately strong. There are no exact cutoffs for when such words apply. You must learn from experience how to judge scatterplots and r values to make such determinations.\nA correlation is positive when low values of one variable are associated with low values of the other value. Similarly, high values of one variable are associated with high values of the other. For example, exercise is positively correlated with burning calories. Low exercise levels will burn a few calories; high exercise levels burn more calories, on average.\nA correlation is negative when low values of one variable are associated with high values of the other value, and vice versa. For example, tooth brushing is negatively correlated with cavities. Less tooth brushing may result in more cavities; more tooth brushing is associated with fewer cavities, on average.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#conditions-for-correlation",
    "href": "06-correlation-web.html#conditions-for-correlation",
    "title": "6  Correlation",
    "section": "6.4 Conditions for correlation",
    "text": "6.4 Conditions for correlation\nTwo variables are considered “associated” any time there is any type of relationship between them (i.e., they are not independent). However, in statistics, we reserve the word “correlation” for situations meeting more stringent conditions:\n\nThe two variables must be numerical.1\nThere is a somewhat linear relationship between the variables, as shown in a scatterplot.\nThere are no serious outliers.\n\nFor condition (2) above, keep in mind that real data in scatterplots very rarely lines up in a perfect straight line. Instead, you will see a “cloud” of dots. All we want to know is whether that cloud of dots mostly moves from one corner of the scatterplot to the other. Violations of this condition will usually be for one of two reasons:\n\nThe dots are scattered completely randomly with no discernible pattern.\nThe dots have a pattern or shape to them, but that shape is curved and not linear.\n\n\nExercise 7\nCheck the three conditions for the relationship between involact and race. For conditions (2) and (3), you’ll need to check the scatterplot you created above. (You did create a scatterplot for one of the exercises above, right?)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#calculating-correlation",
    "href": "06-correlation-web.html#calculating-correlation",
    "title": "6  Correlation",
    "section": "6.5 Calculating correlation",
    "text": "6.5 Calculating correlation\nSince the conditions are met, We calculate the correlation coefficient using the cor command.\n\ncor(chredlin$race, chredlin$involact)\n\n[1] 0.713754\n\n\nThe order of the variables doesn’t matter; correlation is symmetric, so the r value is the same independent of the choice of response and predictor variables.\nSince the correlation between involact and race is a positive number and slightly closer to 1 than 0, we might call this a “moderate” positive correlation. You can tell from the scatterplot above that the relationship is not a strong relationship. The words you choose should match the graphs you create and the statistics you calculate.\n\nExercise 8(a)\nCreate a scatterplot of income against race. (Put income on the y-axis and race on the x-axis.)\n\n\n# Add code here to create a scatterplot of income against race\n\n\n\n\nExercise 8(b)\nCheck the three conditions for the relationship between income and race. Which condition(s) are seriously violated here?\n\n\n\n\n\n\n\n\n\nExercise 9(a)\nCreate a scatterplot of theft against fire. (Put theft on the y-axis and fire on the x-axis.)\n\n\n# Add code here to create a scatterplot of theft against fire\n\n\n\n\nExercise 9(b)\nCheck the three conditions for the relationship between theft and fire. Which condition(s) are seriously violated here?\n\n\n\n\n\n\n\n\n\nExercise 9(c)\nEven though the conditions are not met, what if you calculated the correlation coefficient anyway? Try it.\n\n\n# Add code here to calculate the correlation coefficient between theft and fire\n\n\n\n\nExercise 9(d)\nSuppose you hadn’t looked at the scatterplot and you only saw the correlation coefficient you calculated in the previous part. What would your conclusion be about the relationship between theft and fire. Why would that conclusion be misleading?\n\nPlease write up your answer here.\n\nThe lesson learned here is that you should never try to interpret a correlation coefficient without looking at a plot of the data to assure that the conditions are met and that the result is a sensible thing to interpret.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#correlation-is-not-causation",
    "href": "06-correlation-web.html#correlation-is-not-causation",
    "title": "6  Correlation",
    "section": "6.6 Correlation is not causation",
    "text": "6.6 Correlation is not causation\nWhen two variables are correlated—indeed, associated in any way, not just in a linear relationship—that means that there is a relationship between them. However, that does not mean that one variable causes the other variable.\nFor example, we discovered above that there was a moderate correlation between the racial composition of a ZIP code and the new FAIR policies created in those ZIP codes. However, being part of a racial minority does not cause someone to seek out alternative forms of insurance, at least not directly. In this case, the racial composition of certain neighborhoods, through racist policies, affected the availability of certain forms of insurance for residents in those neighborhoods. And that, in turn, caused residents to seek other forms of insurance.\nIn the Chicago example, there is still likely a causal connection between one variable (race) and the other (involact), but it is indirect. In other cases, there is no causal connection at all. Here are a few of my favorite examples.\n\nExercise 10\nIce cream sales are positively correlated with drowning deaths. Does eating ice cream cause you to drown? (Perhaps the myth about swimming within one hour of eating is really true!) Do drowning deaths cause ice cream sales to rise? (Perhaps people are so sad about all the drownings that they have to go out for ice cream to cheer themselves up?)\nSee if you can figure out the real reason why ice cream sales are positively correlated with drowning deaths.\n\nPlease write up your answer here.\n\n\nIn the Chicago example, the causal effect was indirect. In the example from the exercise above, there is no causation whatsoever between the two variables. Instead, the causal effect was generated by a third factor that caused both ice cream sales to go up, and also happened to cause drowning deaths to go up. (Or, equivalently stated, it caused ice cream sales to be low during certain times of the year and also caused the drowning deaths to be low as well.) Such a factor is called a lurking variable. When a correlation between two variables exists due solely to the intervention of a lurking variable, that correlation is called a spurious correlation. The correlation is real; a scatterplot of ice cream sales and drowning deaths would show a positive relationship. But the reasons for that correlation to exist have nothing to do with any kind of direct causal link between the two.\nHere’s another one:\n\n\nExercise 11\nMost studies involving children create a number of weird correlations. For example, the height of children is very strongly correlated to pretty much everything you can measure about scholastic aptitude. For example, vocabulary count (the number of words children can use fluently in a sentence) is strongly correlated to height. Are tall people just smarter than short people?\nThe answer is, of course, no. The correlation is spurious. So what’s the lurking variable?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#observational-studies-versus-experiments",
    "href": "06-correlation-web.html#observational-studies-versus-experiments",
    "title": "6  Correlation",
    "section": "6.7 Observational studies versus experiments",
    "text": "6.7 Observational studies versus experiments\nSo when is a statistical finding (like correlation, for example) evidence of a causal relationship? Before we can answer that question, we need a few more definitions.\nA lot of data comes from “observational studies” where we simply observe or measure things as they are “in the wild,” so to speak. We don’t interfere in any way. We just write down what we see. Polls are usually observational in that we ask people questions and record their responses. We do not try to manipulate their responses in any way. We just ask the questions and observe the answers. Field studies are often observational. We go out in nature and write stuff down as we observe it.\nAnother way to gather data is an experiment. In an experiment, we introduce a manipulation or treatment to try to ascertain its effect. For example. if we’re testing a new drug, we will likely give the drug to one group of patients and a placebo to the other.\n\nExercise 12\nHere’s another internet rabbit hole for you. First, look up the definition of placebo. You do not need to write up your own version of that definition here; just familiarize yourself with the term if you’re not already familiar with it. Next, find some websites about the placebo effect and read those.\nGiven what you have learned about the placebo effect, why is it important to have a placebo group in a drug trial? Why not just give one set of patients the drug and compare them to another group that takes no pill at all?\n\nPlease write up your answer here.\n\n\nThe goal of the experiment is to learn whether the treatment (in this example, the drug) is effective when compared to the control (in this example, the placebo).\nNote that the word “effective” implies a causal claim. We want to know if the drug causes patients to get better.\nUnlike an observational study, in which the relationship between variables can be caused by a lurking variable, in an experiment, we purposefully manipulate one of the variables and try to control all others. For example, we manipulate the drug variable (we purposefully give some people the drug and others the placebo). But we control the amount of the drug given and the schedule on which patients are required to take the pills.\nThere are lots of things we cannot control. For example, it would be very difficult to control the diet of every person in the experiment. Could diet play a role in whether a patient gets better? Sure, so how do we know diet is not a lurking variable? In the context of an experiment, lurking variables are often called confounders or confounding variables.\nOne way to mitigate the effect of confounders that we cannot directly control is to randomize the patients into the treatment and control groups. With random selection, there will likely be people who have relatively healthy diets in both the control and treatment groups. If the drugs work, in theory they should still work better for the treatment group than for those taking the placebo. And likewise, patients with less healthy diets will generally be mixed up in both groups, and the drug should also work better for them.\nThe mantra of experimental design is, “Control as much as you can. Randomize to take care of the rest.”\nThere are lots of aspects of experimental design that we will not go into here (for example, blinding and blocking). But we will continue to mention the differences between observational studies and experiments in future chapters as we exercise caution in making causal claims.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#prediction-versus-explanation",
    "href": "06-correlation-web.html#prediction-versus-explanation",
    "title": "6  Correlation",
    "section": "6.8 Prediction versus explanation",
    "text": "6.8 Prediction versus explanation\nEven when claims are not causal, we can use associations (and correlations more specifically) for purposes of prediction.\n\nExercise 13\nIf I tell you that ice cream sales are high right now, can you make a reasonable prediction about the relative number of drowning deaths this month (high or low)? Why or why not?\n\nPlease write up your answer here.\n\n\nSo even when there is no direct causal link between two variables, if they are positively correlated, then large values of one variable are associated with large values of the other variable. So if I tell you one value is large, it is reasonable to predict that the other value will be large as well.\nWe use the language “predictor” variable and “response” variable to reinforce this idea.\nIn a properly designed and controlled experiment, we can use different language. In this case, we can explain the outcome using the treatment variable. If we’ve controlled for everything else, the only possible explanation for a difference between the treatment and control groups must be the treatment variable. If the patients get better on the drug (more so than those on the placebo) and we’ve controlled for every other possible confounding variable, the only possible explanation is that the drug works. The drug “explains” the difference in the response variable.\nBe careful, as sometimes statisticians use the term “explanatory variable” to mean any kind of variable that predicts or explains. In this course, we will try to use the term “predictor variable” exclusively.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#visualizing-lurking-variables",
    "href": "06-correlation-web.html#visualizing-lurking-variables",
    "title": "6  Correlation",
    "section": "6.9 Visualizing lurking variables",
    "text": "6.9 Visualizing lurking variables\nWhen we create a scatterplot, we can visualize associations between the two numerical variables. Is there a way to see lurking variables in the scatterplot as well?\nOne simple case is when the lurking variable is a categorical variable. We saw several examples of that in Chapters 3 and 4 in the penguins data. The association (or lack thereof) between variables was often misleading when we failed to take into account the fact that there were three different species of penguin.\nHere are a few more interesting examples. The bdims data (hosted in the openintro package) consists of many body measurements taken from 507 physically active individuals. Type ?bdims at the Console to read the help file.\nHere is the data:\n\nbdims\n\n\n  \n\n\n\n\nglimpse(bdims)\n\nRows: 507\nColumns: 25\n$ bia_di &lt;dbl&gt; 42.9, 43.7, 40.1, 44.3, 42.5, 43.3, 43.5, 44.4, 43.5, 42.0, 40.…\n$ bii_di &lt;dbl&gt; 26.0, 28.5, 28.2, 29.9, 29.9, 27.0, 30.0, 29.8, 26.5, 28.0, 29.…\n$ bit_di &lt;dbl&gt; 31.5, 33.5, 33.3, 34.0, 34.0, 31.5, 34.0, 33.2, 32.1, 34.0, 33.…\n$ che_de &lt;dbl&gt; 17.7, 16.9, 20.9, 18.4, 21.5, 19.6, 21.9, 21.8, 15.5, 22.5, 20.…\n$ che_di &lt;dbl&gt; 28.0, 30.8, 31.7, 28.2, 29.4, 31.3, 31.7, 28.8, 27.5, 28.0, 30.…\n$ elb_di &lt;dbl&gt; 13.1, 14.0, 13.9, 13.9, 15.2, 14.0, 16.1, 15.1, 14.1, 15.6, 13.…\n$ wri_di &lt;dbl&gt; 10.4, 11.8, 10.9, 11.2, 11.6, 11.5, 12.5, 11.9, 11.2, 12.0, 10.…\n$ kne_di &lt;dbl&gt; 18.8, 20.6, 19.7, 20.9, 20.7, 18.8, 20.8, 21.0, 18.9, 21.1, 19.…\n$ ank_di &lt;dbl&gt; 14.1, 15.1, 14.1, 15.0, 14.9, 13.9, 15.6, 14.6, 13.2, 15.0, 14.…\n$ sho_gi &lt;dbl&gt; 106.2, 110.5, 115.1, 104.5, 107.5, 119.8, 123.5, 120.4, 111.0, …\n$ che_gi &lt;dbl&gt; 89.5, 97.0, 97.5, 97.0, 97.5, 99.9, 106.9, 102.5, 91.0, 93.5, 9…\n$ wai_gi &lt;dbl&gt; 71.5, 79.0, 83.2, 77.8, 80.0, 82.5, 82.0, 76.8, 68.5, 77.5, 81.…\n$ nav_gi &lt;dbl&gt; 74.5, 86.5, 82.9, 78.8, 82.5, 80.1, 84.0, 80.5, 69.0, 81.5, 81.…\n$ hip_gi &lt;dbl&gt; 93.5, 94.8, 95.0, 94.0, 98.5, 95.3, 101.0, 98.0, 89.5, 99.8, 98…\n$ thi_gi &lt;dbl&gt; 51.5, 51.5, 57.3, 53.0, 55.4, 57.5, 60.9, 56.0, 50.0, 59.8, 60.…\n$ bic_gi &lt;dbl&gt; 32.5, 34.4, 33.4, 31.0, 32.0, 33.0, 42.4, 34.1, 33.0, 36.5, 34.…\n$ for_gi &lt;dbl&gt; 26.0, 28.0, 28.8, 26.2, 28.4, 28.0, 32.3, 28.0, 26.0, 29.2, 27.…\n$ kne_gi &lt;dbl&gt; 34.5, 36.5, 37.0, 37.0, 37.7, 36.6, 40.1, 39.2, 35.5, 38.3, 38.…\n$ cal_gi &lt;dbl&gt; 36.5, 37.5, 37.3, 34.8, 38.6, 36.1, 40.3, 36.7, 35.0, 38.6, 40.…\n$ ank_gi &lt;dbl&gt; 23.5, 24.5, 21.9, 23.0, 24.4, 23.5, 23.6, 22.5, 22.0, 22.2, 23.…\n$ wri_gi &lt;dbl&gt; 16.5, 17.0, 16.9, 16.6, 18.0, 16.9, 18.8, 18.0, 16.5, 16.9, 16.…\n$ age    &lt;int&gt; 21, 23, 28, 23, 22, 21, 26, 27, 23, 21, 23, 22, 20, 26, 23, 22,…\n$ wgt    &lt;dbl&gt; 65.6, 71.8, 80.7, 72.6, 78.8, 74.8, 86.4, 78.4, 62.0, 81.6, 76.…\n$ hgt    &lt;dbl&gt; 174.0, 175.3, 193.5, 186.5, 187.2, 181.5, 184.0, 184.5, 175.0, …\n$ sex    &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n\n\nMost physical body measurements are known to be correlated; this makes sense because when one part of the body is larger, we expect lots of other body parts to be larger as well (and similarly for smaller individuals).\nFor example, it’s no surprise that shoulder girth (sho_gi) and chest girth (che_gi) are strongly correlated:\n\nggplot(bdims, aes(y = sho_gi, x = che_gi)) +\n  geom_point()\n\n\n\n\n\n\n\n\nIs there a possible lurking variable here, though? You may wonder about sex. (In this data set, the sex variable is presumed to be biological sex assigned at birth.)\nBefore we go any further, go back to the help file and the glimpse output above and note that sex is coded as an integer (a whole number). We’ll use the mutate and as_factor commands—illustrated in Chapters 3 and 5—to make a new factor variable.\n\nbdims &lt;- bdims |&gt;\n  mutate(sex_fct = as_factor(sex))\nglimpse(bdims)\n\nRows: 507\nColumns: 26\n$ bia_di  &lt;dbl&gt; 42.9, 43.7, 40.1, 44.3, 42.5, 43.3, 43.5, 44.4, 43.5, 42.0, 40…\n$ bii_di  &lt;dbl&gt; 26.0, 28.5, 28.2, 29.9, 29.9, 27.0, 30.0, 29.8, 26.5, 28.0, 29…\n$ bit_di  &lt;dbl&gt; 31.5, 33.5, 33.3, 34.0, 34.0, 31.5, 34.0, 33.2, 32.1, 34.0, 33…\n$ che_de  &lt;dbl&gt; 17.7, 16.9, 20.9, 18.4, 21.5, 19.6, 21.9, 21.8, 15.5, 22.5, 20…\n$ che_di  &lt;dbl&gt; 28.0, 30.8, 31.7, 28.2, 29.4, 31.3, 31.7, 28.8, 27.5, 28.0, 30…\n$ elb_di  &lt;dbl&gt; 13.1, 14.0, 13.9, 13.9, 15.2, 14.0, 16.1, 15.1, 14.1, 15.6, 13…\n$ wri_di  &lt;dbl&gt; 10.4, 11.8, 10.9, 11.2, 11.6, 11.5, 12.5, 11.9, 11.2, 12.0, 10…\n$ kne_di  &lt;dbl&gt; 18.8, 20.6, 19.7, 20.9, 20.7, 18.8, 20.8, 21.0, 18.9, 21.1, 19…\n$ ank_di  &lt;dbl&gt; 14.1, 15.1, 14.1, 15.0, 14.9, 13.9, 15.6, 14.6, 13.2, 15.0, 14…\n$ sho_gi  &lt;dbl&gt; 106.2, 110.5, 115.1, 104.5, 107.5, 119.8, 123.5, 120.4, 111.0,…\n$ che_gi  &lt;dbl&gt; 89.5, 97.0, 97.5, 97.0, 97.5, 99.9, 106.9, 102.5, 91.0, 93.5, …\n$ wai_gi  &lt;dbl&gt; 71.5, 79.0, 83.2, 77.8, 80.0, 82.5, 82.0, 76.8, 68.5, 77.5, 81…\n$ nav_gi  &lt;dbl&gt; 74.5, 86.5, 82.9, 78.8, 82.5, 80.1, 84.0, 80.5, 69.0, 81.5, 81…\n$ hip_gi  &lt;dbl&gt; 93.5, 94.8, 95.0, 94.0, 98.5, 95.3, 101.0, 98.0, 89.5, 99.8, 9…\n$ thi_gi  &lt;dbl&gt; 51.5, 51.5, 57.3, 53.0, 55.4, 57.5, 60.9, 56.0, 50.0, 59.8, 60…\n$ bic_gi  &lt;dbl&gt; 32.5, 34.4, 33.4, 31.0, 32.0, 33.0, 42.4, 34.1, 33.0, 36.5, 34…\n$ for_gi  &lt;dbl&gt; 26.0, 28.0, 28.8, 26.2, 28.4, 28.0, 32.3, 28.0, 26.0, 29.2, 27…\n$ kne_gi  &lt;dbl&gt; 34.5, 36.5, 37.0, 37.0, 37.7, 36.6, 40.1, 39.2, 35.5, 38.3, 38…\n$ cal_gi  &lt;dbl&gt; 36.5, 37.5, 37.3, 34.8, 38.6, 36.1, 40.3, 36.7, 35.0, 38.6, 40…\n$ ank_gi  &lt;dbl&gt; 23.5, 24.5, 21.9, 23.0, 24.4, 23.5, 23.6, 22.5, 22.0, 22.2, 23…\n$ wri_gi  &lt;dbl&gt; 16.5, 17.0, 16.9, 16.6, 18.0, 16.9, 18.8, 18.0, 16.5, 16.9, 16…\n$ age     &lt;int&gt; 21, 23, 28, 23, 22, 21, 26, 27, 23, 21, 23, 22, 20, 26, 23, 22…\n$ wgt     &lt;dbl&gt; 65.6, 71.8, 80.7, 72.6, 78.8, 74.8, 86.4, 78.4, 62.0, 81.6, 76…\n$ hgt     &lt;dbl&gt; 174.0, 175.3, 193.5, 186.5, 187.2, 181.5, 184.0, 184.5, 175.0,…\n$ sex     &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ sex_fct &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n\n\nIf you look at the glimpse output above, you see that we do have a new variable called sex_fct and it is properly coded as a factor variable. However, the labels 0 and 1 (for females and males, respectively) are not very helpful. Can we change them? Yes, the forcats package has a fct_recode function that does just that. Here is what it looks like:\n\nbdims &lt;- bdims |&gt;\n  mutate(sex_fct = fct_recode(sex_fct, \"female\" = \"0\", \"male\" = \"1\"))\nglimpse(bdims)\n\nRows: 507\nColumns: 26\n$ bia_di  &lt;dbl&gt; 42.9, 43.7, 40.1, 44.3, 42.5, 43.3, 43.5, 44.4, 43.5, 42.0, 40…\n$ bii_di  &lt;dbl&gt; 26.0, 28.5, 28.2, 29.9, 29.9, 27.0, 30.0, 29.8, 26.5, 28.0, 29…\n$ bit_di  &lt;dbl&gt; 31.5, 33.5, 33.3, 34.0, 34.0, 31.5, 34.0, 33.2, 32.1, 34.0, 33…\n$ che_de  &lt;dbl&gt; 17.7, 16.9, 20.9, 18.4, 21.5, 19.6, 21.9, 21.8, 15.5, 22.5, 20…\n$ che_di  &lt;dbl&gt; 28.0, 30.8, 31.7, 28.2, 29.4, 31.3, 31.7, 28.8, 27.5, 28.0, 30…\n$ elb_di  &lt;dbl&gt; 13.1, 14.0, 13.9, 13.9, 15.2, 14.0, 16.1, 15.1, 14.1, 15.6, 13…\n$ wri_di  &lt;dbl&gt; 10.4, 11.8, 10.9, 11.2, 11.6, 11.5, 12.5, 11.9, 11.2, 12.0, 10…\n$ kne_di  &lt;dbl&gt; 18.8, 20.6, 19.7, 20.9, 20.7, 18.8, 20.8, 21.0, 18.9, 21.1, 19…\n$ ank_di  &lt;dbl&gt; 14.1, 15.1, 14.1, 15.0, 14.9, 13.9, 15.6, 14.6, 13.2, 15.0, 14…\n$ sho_gi  &lt;dbl&gt; 106.2, 110.5, 115.1, 104.5, 107.5, 119.8, 123.5, 120.4, 111.0,…\n$ che_gi  &lt;dbl&gt; 89.5, 97.0, 97.5, 97.0, 97.5, 99.9, 106.9, 102.5, 91.0, 93.5, …\n$ wai_gi  &lt;dbl&gt; 71.5, 79.0, 83.2, 77.8, 80.0, 82.5, 82.0, 76.8, 68.5, 77.5, 81…\n$ nav_gi  &lt;dbl&gt; 74.5, 86.5, 82.9, 78.8, 82.5, 80.1, 84.0, 80.5, 69.0, 81.5, 81…\n$ hip_gi  &lt;dbl&gt; 93.5, 94.8, 95.0, 94.0, 98.5, 95.3, 101.0, 98.0, 89.5, 99.8, 9…\n$ thi_gi  &lt;dbl&gt; 51.5, 51.5, 57.3, 53.0, 55.4, 57.5, 60.9, 56.0, 50.0, 59.8, 60…\n$ bic_gi  &lt;dbl&gt; 32.5, 34.4, 33.4, 31.0, 32.0, 33.0, 42.4, 34.1, 33.0, 36.5, 34…\n$ for_gi  &lt;dbl&gt; 26.0, 28.0, 28.8, 26.2, 28.4, 28.0, 32.3, 28.0, 26.0, 29.2, 27…\n$ kne_gi  &lt;dbl&gt; 34.5, 36.5, 37.0, 37.0, 37.7, 36.6, 40.1, 39.2, 35.5, 38.3, 38…\n$ cal_gi  &lt;dbl&gt; 36.5, 37.5, 37.3, 34.8, 38.6, 36.1, 40.3, 36.7, 35.0, 38.6, 40…\n$ ank_gi  &lt;dbl&gt; 23.5, 24.5, 21.9, 23.0, 24.4, 23.5, 23.6, 22.5, 22.0, 22.2, 23…\n$ wri_gi  &lt;dbl&gt; 16.5, 17.0, 16.9, 16.6, 18.0, 16.9, 18.8, 18.0, 16.5, 16.9, 16…\n$ age     &lt;int&gt; 21, 23, 28, 23, 22, 21, 26, 27, 23, 21, 23, 22, 20, 26, 23, 22…\n$ wgt     &lt;dbl&gt; 65.6, 71.8, 80.7, 72.6, 78.8, 74.8, 86.4, 78.4, 62.0, 81.6, 76…\n$ hgt     &lt;dbl&gt; 174.0, 175.3, 193.5, 186.5, 187.2, 181.5, 184.0, 184.5, 175.0,…\n$ sex     &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ sex_fct &lt;fct&gt; male, male, male, male, male, male, male, male, male, male, ma…\n\n\nThis will be a lot more helpful!\nNow, back to the scatterplots.\nOne way we learned (in Chapters 3 and 4) to incorporate a third variable into the analysis is through the use of color as an additional aesthetic element. We’ll use our new sex_fct variable. Also, don’t forget to use the Viridis color palette and the black-and-white theme.\n\nggplot(bdims, aes(y = sho_gi, x = che_gi, color = sex_fct)) +\n  geom_point() +\n  scale_color_viridis_d() +\n  theme_bw()\n\n\n\n\n\n\n\n\nIn this example, there is a strong correlation between shoulder girth and chest girth, but females and males lie in completely different parts of the graph. Having said that, if you focus on the females separately, you can still see a strong positive correlation, and if you focus on males separately, there is also a strong positive correlation there. So the inclusion of sex didn’t really change much about the nature of the correlation in this example. Even still, the correlation coefficients do change a little depending on whether we look at the whole data set versus females/males separately:\n\ncor(bdims$sho_gi, bdims$che_gi)\n\n[1] 0.9271923\n\n\n\nbdims |&gt;\n  group_by(sex_fct) |&gt;\n  summarise(corr = cor(sho_gi, che_gi))\n\n\n  \n\n\n\n\nExercise 14\nWhy would the correlation coefficient be stronger for the whole data set and slightly less strong for the sexes separately? (Hint: think about sample size.)\n\nPlease write up your answer here.\n\n\nIn the previous example, sex was a lurking variable, but it did not radically alter the nature of the association. What about the examples in these next two sets of exercises?\n\n\nExercise 15(a)\nCreate a scatterplot of thigh girth against weight (put thi_gi on the y-axis and wgt on the x-axis).\n\n\n# Add code here to create a scatterplot of thigh girth against weight.\n\n\n\n\nExercise 15(b)\nChange the scatterplot above to include sex_fct as a color aesthetic. (Use the Viridis color palette and theme_bw.)\n\n\n# Add code here to add color for sex_fct.\n\n\n\n\nExercise 15(c)\nCalculate the correlation coefficients for thigh girth and weight, once for the whole data set, and again and for the data split by sex_fct (as above).\n\n\n# Add code here to calculate the correlation coefficient\n# between thigh girth and weight.\n\n\n# Add code here to calculate the correlation coefficient\n# between thigh girth and weight split by sex.\n\n\n\n\nExercise 15(d)\nExplain how sex is a lurking variable here. In other words, how did ignoring/considering sex alter the way we perceived the correlation between thigh girth and weight? What changed about the nature of the correlation within each sex category?\n\nPlease write up your answer here.\n\n\n\nExercise 16(a)\nThe help file for the bia_di variable describes it as the “respondent’s biacromial diameter in centimeters.” What is “biacromial diameter”?\n\nPlease write up your answer here.\n\n\n\nExercise 16(b)\nCreate a scatterplot of biacromial diameter against weight (put bia_di on the y-axis and wgt on the x-axis).\n\n\n# Add code here to create a scatterplot of biacromial diameter against weight.\n\n\n\n\nExercise 16(c)\nChange the scatterplot above to include sex_fct as a color aesthetic. (Use the Viridis color palette and theme_bw.)\n\n\n# Add code here to add color for sex_fct.\n\n\n\n\nExercise 16(d)\nCalculate the correlation coefficients for biacromial diameter and weight, once for the whole data set, and again and for the data split by sex_fct (as above).\n\n\n# Add code here to calculate the correlation coefficient\n# between biacromial diameter and weight\n\n\n# Add code here to calculate the correlation coefficient\n# between biacromial diameter and weight split by sex\n\n\n\n\nExercise 16(e)\nExplain how sex is a lurking variable here. In other words, how did ignoring/considering sex alter the way we perceived the correlation between biacromial diameter and weight? What changed about the nature of the correlation within each sex category?\n\nPlease write up your answer here.\n\n\nThe take-home message here is that lurking variables can change the strength of the correlation between two variables, making it appear stronger or weaker. In more extreme cases, it’s even possible to change the direction of the correlation altogether! There isn’t an example of this phenomenon in the bdims data, but we do find one in the penguins data.\nHere is a scatterplot of bill depth against bill length.\n\nggplot(penguins, aes(y = bill_depth_mm, x = bill_length_mm)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nThere is not much correlation between bill depth and bill length, but if anything, it looks like there might be a slightly negative association. (In the following code chunk, the cor command uses a different method for dealing with missing data.)\n\ncor(penguins$bill_depth_mm, penguins$bill_length_mm,\n    use = \"complete.obs\")\n\n[1] -0.2350529\n\n\nNow split by species:\n\nggplot(penguins, aes(y = bill_depth_mm, x = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  scale_color_viridis_d() +\n  theme_bw()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\npenguins |&gt;\n  group_by(species) |&gt;\n  summarise(corr = cor(bill_depth_mm, bill_length_mm,\n                       use = \"complete.obs\"))\n\n\n  \n\n\n\nThere was a very weak negative correlation in the full data set, but, behold, bill depth and bill length are positive correlated within each species!\nThe phenomenon of an association between two variables “reversing” direction when considering a third variable is often called “Simpson’s Paradox”.2 We’ll revisit Simpson’s Paradox in a future chapter.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#conclusion",
    "href": "06-correlation-web.html#conclusion",
    "title": "6  Correlation",
    "section": "6.10 Conclusion",
    "text": "6.10 Conclusion\nIf we have two numerical variables that have a linear association between them (also assuming there are no serious outliers), we can compute the correlation coefficient that measures the strength and direction of that linear association.\nKeep in mind that in an observational study, the correlation coefficient is a measure of association but it does not signify that one variable causes the other. It’s possible that one variable causes the other, but it’s also possible that a third “lurking” variable is responsible for all or part of the association. Either way, the fact that a relationship exists means it is possible to use values of one variable to make reasonable predictions about the values of the other variable.\nIn a properly designed experiment, the manipulation of one variable while controlling for others (and randomizing to take care of other confounders) ensures that there is a causal link between the treatment variable and the response of interest. In this case, the treatment can “explain” the response, not just predict it.\nFinally, when there is a lurking variable (confounding), we can visualize it by adding it to our scatterplots as a color aesthetic. There, we often find that associations change; they can get stronger, weaker, or even change direction altogether in the presence of that third variable.\n\n6.10.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "06-correlation-web.html#footnotes",
    "href": "06-correlation-web.html#footnotes",
    "title": "6  Correlation",
    "section": "",
    "text": "There are other ways of measuring association for variables that are not numerical, but these aren’t covered in this course.↩︎\nJust like for every other named concept in statistics, Simpson’s Paradox wasn’t first observed by Simpson.↩︎",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Correlation</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html",
    "href": "07-regression-web.html",
    "title": "7  Regression",
    "section": "",
    "text": "7.1 Introduction\nIn this chapter we will learn how to run a regression analysis. Regression provides a model for the linear relationship between two numerical variables.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#introduction",
    "href": "07-regression-web.html#introduction",
    "title": "7  Regression",
    "section": "",
    "text": "7.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"broom\")\n\n\n7.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/07-regression.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n7.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n7.1.4 Load packages\nWe load the tidyverse package. The faraway package will give access to the Chicago redlining data introduced in the previous chapter and the palmerpenguins package gives us the penguins data. Finally, the broom package will provide tools for cleaning up the output of the regression analysis we perform.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(faraway)\nlibrary(palmerpenguins)\nlibrary(broom)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#regression",
    "href": "07-regression-web.html#regression",
    "title": "7  Regression",
    "section": "7.2 Regression",
    "text": "7.2 Regression\nWhen we have a linear relationship between two numerical variables, we learned in the last chapter that we can compute the correlation coefficient. One serious limitation of the correlation coefficient is that it is only a single number, and therefore, it doesn’t provide a whole lot of information about the nature of the linear relationship itself. It only gives clues as to the strength and direction of the association.\nIt will be helpful to model this linear relationship with an actual straight line. Such a line is called a regression line.\nThe idea of fitting lines and curves to data has been around for centuries, likely originating with scientists like Newton, Legendre, and Gauss who were looking for simple models to explain astronomical data. The origin of the name “regression” comes from a 19th century researcher named Francis Galton, a mentor and close associate of the eugenicist Karl Pearson, whom we discussed in the last chapter (in connection with the correlation coefficient). In fact, Galton was the person who invented the term “eugenics,” and his research legacy is just as problematic as Pearson’s.\nIn some of Galton’s less controversial work (and this part is completely above board, empirically validated, and, importantly, not racist), he noted that an unusually tall individual will have children who are still likely to be tall, but usually not as tall as the tall parent. The child’s height is likely closer to the mean height for their sex, race, etc. It “regresses” to the mean. For most phenomena, extreme observations are more likely to be followed by less extreme observations that are closer to the mean. This is very sensible and logical, and eventually leads to the idea of fitting lines to data to make realistic predictions about future observations.\nA regression line is also known as a best-fit line or least-squares line for reasons that we will get to later in the chapter.\nThe mathematics involved in figuring out what this line should be are more complicated than we cover in this book. Fortunately, R will do all the complicated calculations for us and we’ll focus on understanding what they mean.\nRecall the chredlin data set from the last chapter investigating the practice of redlining in Chicago in the 1970s. Let’s review the scatterplot of involact, the number of FAIR policies per 100 housing units, against race, the racial composition of each ZIP code as a percentage of minority residents. (Recall that each row of the data represents an entire ZIP code.)\n\nggplot(chredlin, aes(y = involact, x = race)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nExercise 1\nDoes the Chicago redlining data come from an observational study or an experiment? How do you know?\n\nPlease write up your answer here.\n\n\nIf certain conditions are met, we can graph a regression line; just add a geom_smooth layer to the scatterplot:\n\nggplot(chredlin, aes(y = involact, x = race)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe method = lm argument is telling ggplot to use a “linear model”. The se = FALSE argument tells ggplot to draw just the line and nothing else. (What else might it try to draw? You are encouraged to go back to the code above and take out se = FALSE to see for yourself. However, we are not yet in a position to be able to explain the gray band that appears.)\nOf all possible lines, the blue line comes the closest to each point in the scatterplot. If we wiggled the line a little bit, it might get closer to a few points, but the net effect would be to make it further from other points. This is the mathematically optimal line of best fit.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#models",
    "href": "07-regression-web.html#models",
    "title": "7  Regression",
    "section": "7.3 Models",
    "text": "7.3 Models\nWe used the word “model” when referring to the regression line above. What does that word mean in this context?\nA model is something that represents something else, often on a smaller scale or in simplified form. A model is often an idealized form of something that may be quite messy or complex in reality. In statistics, a model is a representation of the way data is generated. For example, we may believe that as minority representation increases in a neighborhood, that neighborhood is more likely to be subject to racially discriminatory practices. We may even posit that the relationship is linear; i.e., for every percentage point increase in racial minorities, we expect some kind of proportional increase in racial discrimination, as measured in this case by FAIR policies. We say that this is our hypothesis about the data-generating process: we suspect that the data we see results from a sociological process that uses the minority representation of a neighborhood to generate data about FAIR policies.\nThe assumption of a linear relationship between these two quantities is just that—an assumption. It is not necessarily “true”, whatever “true” might mean in this kind of question. It is a convenient device that makes a simplifying assumption in order to allow us to do something meaningful in a statistical analysis. If such a model—despite its simplifying caricature—helps us make meaningful predictions to study something important like racial discrimination, then the model is useful.\nThe first thing we acknowledge when working with a model is that the model does not generate the data in a rigid, deterministic way. If you look at the scatterplot above, even assuming the blue line represents a “correct” data-generating process, the data points don’t fall on the blue line. The blue line gives us only a sense of where the data might be, but there is additional space between the line and the points. These spaces are often referred to as errors. In statistics, the word “error” does not mean the same thing as “mistake.” Error is just the difference between an idealized model prediction and the real location of data. In the context of linear regression, we will use the term residual instead. After the model is done making a prediction, the residuals are “left over” to account for the different between the model and the actual data.\nThe most important thing to remember about models is that they aren’t real. They are idealizations and simplifications. The degree to which we can trust models, then, comes down to certain assumptions we make about the data-generating process. These assumptions cannot be completely verified—after all, we will never know the exact data-generating process. But there are certain conditions we can check to know if the assumptions we make are reasonable.\n\nExercise 2\nDo an internet search for the phrase “statistical model” and/or “statistical modeling”. Read at least two or three sources. List below one important aspect of statistical modeling you find in your search that wasn’t mentioned in the paragraphs above. (Some of the sources you find may be a little technical. You should, for now, skip over the technical explanations. Try to find several sources that address the issue in non-technical ways. The additional information you mention below should be something non-technical that you understand.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#checking-conditions",
    "href": "07-regression-web.html#checking-conditions",
    "title": "7  Regression",
    "section": "7.4 Checking conditions",
    "text": "7.4 Checking conditions\nWe need to be careful here. Although we graphed the blue regression line above, we have not checked any conditions. Therefore, it is inappropriate to fit a regression line at this point. Once the line is seen, it cannot easily be “unseen,” and it’s crucial that you don’t trick your eyes into believing there is a linear relationship before checking the conditions that justify that belief. The regression line we saw above makes no sense unless we know that regression is appropriate.\nThe conditions for running a regression analysis include all the conditions you checked for a correlation analysis in the last chapter:\n\nThe two variables must be numerical.\nThere is a somewhat linear relationship between the variables, as shown in a scatterplot.\nThere are no serious outliers.\n\n\nExercise 3\nCheck these three conditions for the regression between involact and race (using the scatterplot above for conditions (2) and (3).)\n\n\n\n\n\n\n\n\nHowever, there is an additional condition to check to ensure that our regression model is appropriate. It concerns the residuals, but as we haven’t computed anything yet, we have nothing to analyze. We’ll return to this condition later.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#calculating-the-regression-line",
    "href": "07-regression-web.html#calculating-the-regression-line",
    "title": "7  Regression",
    "section": "7.5 Calculating the regression line",
    "text": "7.5 Calculating the regression line\nWhat is the equation of the regression line? In your algebra class you learned that a line takes the form \\(y = mx + b\\) where \\(m\\) is the slope and \\(b\\) is the y-intercept. Statisticians write the equation in a slightly different form:\n\\[\n\\hat{y} = b_{0} + b_{1} x\n\\]\nThe intercept is \\(b_{0}\\) and the slope is \\(b_{1}\\). We use \\(\\hat{y}\\) (pronounced “y hat”) instead of \\(y\\) because when we plug in values of \\(x\\), we do not get back the exact values of \\(y\\) from the data. The line, after all, does not actually pass through most (if any) actual data points. Instead, this equation gives us “predicted” values of \\(y\\) that lie on the regression line. These predicted \\(y\\) values are called \\(\\hat{y}\\).\nTo run a regression analysis and calculate the values of the intercept and slope, we use the lm command in R. (Again, lm stands for “linear model”.) This command requires us to specify a “formula” that tells R the relationship we want to model. It uses special syntax in a very specific order:\n\nThe response variable,\na “tilde” ~ (this key is usually in the upper-left corner of your keyboard, above the backtick),\nthe predictor variable.\n\nAfter a comma, we then specify the data set in which those variables live using data =. Here’s the whole command:\n\nlm(involact ~ race, data = chredlin)\n\n\nCall:\nlm(formula = involact ~ race, data = chredlin)\n\nCoefficients:\n(Intercept)         race  \n    0.12922      0.01388  \n\n\nThe response variable always goes before the tilde and the predictor variable always goes after.\nLet’s store that result for future use. The convention we’ll use in this book is to name things using the variables involved. For example,\n\ninvolact_race_lm &lt;- lm(involact ~ race, data = chredlin)\ninvolact_race_lm\n\n\nCall:\nlm(formula = involact ~ race, data = chredlin)\n\nCoefficients:\n(Intercept)         race  \n    0.12922      0.01388  \n\n\nThe variable involact_race_lm now contains all the information we need about the linear regression model.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#interpreting-the-coefficients",
    "href": "07-regression-web.html#interpreting-the-coefficients",
    "title": "7  Regression",
    "section": "7.6 Interpreting the coefficients",
    "text": "7.6 Interpreting the coefficients\nLook at the output of the lm command above.\nThe intercept is 0.12922 and the slope is 0.01388. The number 0.12922 is labeled with (Intercept), so that’s pretty obvious. But how do we know the number 0.01388 corresponds to the slope? Process of elimination, I suppose. But there’s another good reason too. The equation of the regression line can be written\n\\[\n\\hat{y} = 0.12922 + 0.01388 x\n\\]\nWhen we report the equation of the regression line, we typically use words instead of \\(\\hat{y}\\) and \\(x\\) to make the equation more interpretable in the context of the problem. For example, for this data, we would write the equation as\n\\[\n\\widehat{involact} = 0.12922 + 0.01388 race\n\\]\nThe slope is the coefficient of race, or the number attached to race. (The intercept is not attached to anything; it’s just a constant term out front there.)\nThe slope \\(b_{1}\\) is always interpretable. This model predicts that one unit of increase in the x-direction corresponds to a change of 0.01388 units in the y-direction. Let’s phrase it this way:\n\nThe model predicts that an increase of one percentage point in the composition of racial minorities corresponds to an increase of 0.01388 new FAIR policies per 100 housing units.\n\nThe intercept \\(b_{0}\\) is a different story. There is always a literal interpretation:\n\nThe model predicts that a ZIP code with 0% racial minorites will generate 0.12922 new FAIR policies.\n\nIn some cases (rarely), that interpretation might make sense. In most cases, though, it is physically impossible for the predictor variable to take a value of 0, or the value 0 is way outside the range of the data. Whenever we use a model to make a prediction outside of reasonable values, we call that extrapolation.\nFor the Chicago data, we likely don’t have a case of extrapolation. While it is not literally true that any ZIP code has 0% racial minorities, we can see in the scatterplot that there are values very close to zero.\n\nExercise 4\nUse the arrange command from dplyr to sort the chredlin data frame by race (using the default ascending order). What is the value of race for the three ZIP codes with the smallest percentage of minority residents?\n\n\n# Add code here to sort by race\n\nPlease write up your answer here.\n\n\nAgain, even though there are no ZIP codes with 0% racial minorities, there are a bunch that are close to zero, so the literal interpretation of the intercept is also likely a sensible one in this case.\n\n\nExercise 5\nLet’s think through something else the intercept might be telling us in this case. The presumption is that FAIR policies are obtained mostly by folks who can’t get insurance policies in other ways. Some of that is driven by racial discrimination, but maybe not all of it. What does the intercept have to say about the number of FAIR policies that are obtained not due to denial of coverage from racial discrimination?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#rescaling-to-make-interpretations-more-meaningful",
    "href": "07-regression-web.html#rescaling-to-make-interpretations-more-meaningful",
    "title": "7  Regression",
    "section": "7.7 Rescaling to make interpretations more meaningful",
    "text": "7.7 Rescaling to make interpretations more meaningful\nLet’s revisit the interpretation of the slope:\n\nThe model predicts that an increase of one percentage point in the composition of racial minorities corresponds to an increase of 0.01388 new FAIR policies per 100 housing units.\n\nThis is a perfectly correct statement, but one percentage point change is not very much. It’s hard to think about comparing two neighborhoods that differ by only one percent. This scale also makes the predicted change in the response variable hard to interpret. How many policies is 0.01388 per 100 housing units?\nOne way to make these kinds of statements more interpretable is to change the scale. What if we increase 10 percentage points instead of only 1 percentage point? In other words, what if we move 10 times as far along the x-axis. The response variable will also have to move 10 times as far. This is the new statement:\n\nThe model predicts that an increase of 10 percentage points in the composition of racial minorities corresponds to an increase of 0.1388 new FAIR policies per 100 housing units.\n\nIn this case, the decimal 0.1388 is maybe still not completely clear, but at least an increase of 10 percentage points is a meaningful difference between neighborhoods.\n\nExercise 6\nSince the last number is a per capita type measure, we can also rescale it. If the model predicts an increase in 0.1388 new FAIR policies per 100 households (corresponding to 10 percentage points increase in racial minorities), how many FAIR policies would that be in 1000 households?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#the-tidy-command",
    "href": "07-regression-web.html#the-tidy-command",
    "title": "7  Regression",
    "section": "7.8 The tidy command",
    "text": "7.8 The tidy command\nRecall the output of the lm command:\n\ninvolact_race_lm\n\n\nCall:\nlm(formula = involact ~ race, data = chredlin)\n\nCoefficients:\n(Intercept)         race  \n    0.12922      0.01388  \n\n\n(We did not have to run lm again. We had this output stored in the variable involact_race_lm.)\nThat summary is fine, but what if we needed to reference the slope and intercept using inline code? Or what if we wanted to grab those numbers and use them in further calculations?\nThe problem is that the results of lm just print the output in an unstructured way. If we want structured output, we can use the tidy command from the broom package. This will take the results of lm and organize the output into a tibble.\n\ntidy(involact_race_lm)\n\n\n  \n\n\n\nLet’s store that tibble so we can refer to it in the future.\n\ninvolact_race_tidy &lt;- tidy(involact_race_lm)\ninvolact_race_tidy\n\n\n  \n\n\n\nThe intercept is stored in the estimate column, in the first row. The slope is stored in the same column, but in the second row. (There is a lot more information here to the right of the estimate column, but we will not know what these numbers mean until later in the course.)\nWe can grab the estimate column with the dollar sign as we’ve seen before:\n\ninvolact_race_tidy$estimate\n\n[1] 0.12921803 0.01388235\n\n\nThis is a “vector” of two values, the intercept and the slope, respectively.\nWhat if we want only one value at a time? We can grab individual elements of a vector using square brackets as follows:\n\ninvolact_race_tidy$estimate[1]\n\n[1] 0.129218\n\n\n\ninvolact_race_tidy$estimate[2]\n\n[1] 0.01388235\n\n\nHere is the interpretation of the slope again, but this time, we’ll use inline code:\n\nThe model predicts that an increase of 1 percentage points in the composition of racial minorities corresponds to an increase of 0.0138824 new FAIR policies per 100 housing units.\n\nClick somewhere inside the backticks on the line above and hit Ctrl-Enter or Cmd-Enter (PC or Mac respectively). You should see the number 0.01388235 pop up. If you render the HTML version of the document, you will also see the number there (not the code).\nWhat if we want to apply re-scaling to make this number more interpretable? The stuff inside the inline code chunk is just R code, so we can do any kind of calculation with it we want.\n\nThe model predicts that an increase of 10 percentage points in the composition of racial minorities corresponds to an increase of 0.1388235 new FAIR policies per 100 housing units.\n\nNow the number will be 0.1388235, ten times as large.\n\nExercise 7\nCopy and paste the interpretation of the intercept from earlier, but replace the number 0.12922 with an inline code chunk that grabs that number from the estimate column of the involact_race_tidy tibble. (Remember that the intercept is the first element of that vector, not the second element like the slope.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#residuals",
    "href": "07-regression-web.html#residuals",
    "title": "7  Regression",
    "section": "7.9 Residuals",
    "text": "7.9 Residuals\nEarlier, we promised to revisit the topic of residuals. Residuals are measured as the vertical distances from each data point to the regression line. We can see that visually below. (Don’t worry about the complexity of the ggplot code used to create this picture. You will not need to create a plot like this on your own, so just focus on the graph that is created below.)\n\n# You do not need to know how this code works\nggplot(chredlin, aes(y = involact, x = race)) +\n  geom_segment(x = 35.1, xend  = 35.1,\n               y = 0.6164886, yend = 0.6164886 + 0.38351139,\n               color = \"red\", size = 2) +\n  geom_segment(x = 66.1, xend = 66.1,\n               y = 1.0468415, yend = 1.0468415 - 0.64684154,\n               color = \"red\", size = 2) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe graph above shows the regression line and two of the residuals as red line segments. (There is a residual for all 47 ZIP codes; only two are shown in this graph.) The one on the left corresponds to ZIP code with 35% racial minority. The regression line predicts that, if the model were true, such a ZIP code would have a value of involact of about 0.6. But the actual data for that ZIP code has an involact value of 1. The residual is the difference, about 0.4. In other words, the true data point is 0.4 units higher than the model prediction. This represents a positive residual; the actual data is 0.4 units above the line. Data points that lie below the regression line have negative residuals.\n\nExercise 8\nLook at the residual on the right. This corresponds to a ZIP code with about 66% racial minorities. First, report the actual involact value for this ZIP code. (This is the location of the data point.) Next, estimate the value of involact that the model predicts for this ZIP code. (This is the y-value of the estimated point on the regression line.) Finally, subtract these two numbers to get an approximate value for the residual. Should this residual be a positive number or a negative number?\nYou can just estimate with your eyeballs for now. You don’t need to be super precise.\n\nPlease write up your answer here.\n\n\nMore formally, let’s call the residual \\(e\\). This is standard notation, as “e” stands for “error”. Again, though, it’s not an error in the sense of a mistake. It’s an error in the sense that the model is not perfectly accurate, so it doesn’t predict the data points exactly. The degree to which the prediction misses is the “error” or “residual”. It is given by the following formula:\n\\[\ne = y - \\hat{y}\n\\]\n\n\nExercise 9\nThere are two symbols on the right-hand side of the equation above, \\(y\\) and \\(\\hat{y}\\). Which one is the actual data value and which one is the predicted value (the one on the line)?\n\nPlease write up your answer here.\n\n\nThe residuals are used to determine the regression line. The correct regression line will be the one that results in the smallest residuals overall. How do we measure the overall set of residuals? We might think to calculate the “average” residual, but this doesn’t work. Because the regression line should go through the middle of the data, the positive residuals will cancel out the negative residuals and the mean residual will just be zero. That’s not very useful.\nInstead, what we do is square the residuals. That makes all of them positive. We then add together all the squared residuals and that sum is the thing we try to minimize. Well, we don’t do that manually because it’s hard, so we let the computer do that for us. Because the regression line minimizes the sum of the squared residuals, the regression line is often called the least-squares line.\nRecall earlier when we mentioned that there was one additional condition to check in order for linear regression to make sense. This condition is that there should not be any kind of pattern in the residuals.\nWe know that some of the points are going to lie above the line (positive residuals) and some of the points will lie below the line (negative residuals). What we need is for the spread of the residuals to be pretty balanced across the length of the regression line and for the residuals not to form any kind of curved pattern.\nTo check this condition, we’ll need to calculate the residuals first. To do so, we introduce a new function from the broom package. Whereas tidy serves up information about the intercept and the slope of the regression line, augment gives us extra information for each data point.\n\ninvolact_race_aug &lt;- augment(involact_race_lm)\ninvolact_race_aug\n\n\n  \n\n\n\nThe first three columns consist of the row names (the ZIP codes) followed by the actual data values we started with for involact and race. But now we’ve “augmented” the original data with some new stuff too. (We won’t learn about anything past the fifth column in this course, though.)\nThe fourth column—called .fitted—is \\(\\hat{y}\\), or the point on the line that corresponds to the given \\(x\\) value. Let’s check and make sure this is working as advertised.\nThe regression equation from above is\n\\[\n\\widehat{involact} = 0.12922 + 0.01388 race\n\\]\nTake, for example, the first row in the tibble above, the one corresponding to ZIP code 60626. The value of race is 10.0. Plug that value into the equation above:\n\\[\n\\widehat{involact} = 0.12922 + 0.01388(10.0) = 0.268\n\\]\nThe model predicts that a ZIP code with 10% racial minorities will have about 0.268 new FAIR policies per 100 housing units. The corresponding number in the .fitted column is 0.2680416, so that’s correct.\nNow skip over to the fifth column of the augment output, the one that says .resid. If this is the residual \\(e\\), then it should be \\(y - \\hat{y}\\). Since \\(y\\) is the actual value of involact and \\(\\hat{y}\\) is the value predicted by the model, we should get for the first row of output\n\\[\ne = y - \\hat{y} = 0.0 - 0.268 = -0.268\n\\]\nYup, it works!\nTo check for patterns in the residuals, we’ll create a residual plot. A residual plot graphs the residuals above each value along the x-axis. (In the command below, we also add a blue horizontal reference line so that it is clear which points have positive or negative residuals.)\n\nggplot(involact_race_aug, aes(y = .resid, x = race)) +\n  geom_point() +\n  geom_hline(yintercept = 0, color = \"blue\")\n\n\n\n\n\n\n\n\nPay close attention to the ggplot code. Notice that the tibble in the first slot is not chredlin as it was before. The residuals we need to plot are not stored in the raw chredlin data. We had to calculate the residuals using the augment command, and those residuals are then stored in a different place that we named involact_race_aug. In the latter tibble, the residuals themselves are stored in a variable called .resid. (Don’t forget the dot in .resid.)\nWe are looking for systematic patterns in the residuals. A good residual plot should look like the most boring plot you’ve ever seen.\nFor the most part, the residual plot above looks pretty good. The one exception is the clustering near the left edge of the graph.\n\n\nExercise 10\nRefer back and forth between the original scatterplot created earlier (with the regression line) and the residual plot above. Can you explain why there is a line of data points with negative residuals along the left edge of the residual plot?\n\nPlease write up your answer here.\n\n\nResidual patterns that are problematic often involve curved data (where the dots follow a curve around the horizontal reference line instead of spreading evenly around it) and heteroscedasticity, which is a fanning out pattern from left to right.\nOther than the weird cluster of points at the left, the rest of the residual plot looks pretty good. Ignoring those ZIP codes with 0 FAIR policies, the rest of the residuals stretch, on average, about the same height above and below the line across the whole width of the plot. There is only one slightly large residual at about the 40% mark, but it’s not extreme, and it doesn’t look like a severe outlier in the original scatterplot.\nWhat does a bad residual plot look like? The code below will run an ill-advised regression analysis on fire, the number of fires (per 100 housing units), against age, the percent of housing units built before 1939. The residual plot appears below.\n\nfire_age_lm &lt;- lm(fire ~ age, data = chredlin)\nfire_age_aug &lt;- augment(fire_age_lm)\nggplot(fire_age_aug, aes(y = .resid, x = age)) +\n  geom_point() +\n  geom_hline(yintercept = 0, color = \"blue\")\n\n\n\n\n\n\n\n\n\n\nExercise 11\nUsing the vocabulary established above, explain why the residual plot above is bad.\n\nPlease write up your answer here.\n\n\nOf course, we should never even get as far as running a regression analysis and making a residual plot if we perform exploratory data analysis as we’re supposed to.\n\n\nExercise 12(a)\nIf you were truly interested in investigating an association between the fire risk and the age of buildings in a ZIP code, the first thing you would do is create a scatterplot. Go ahead and do that below. Use fire as the response variable and age as the predictor.\n\n\n# Add code here to create a scatterplot of fire against age\n\n\n\n\nExercise 12(b)\nFrom the scatterplot above, explain why you wouldn’t even get as far as running a regression analysis. (Think of the conditions.)\n\nPlease write up your answer here.\n\n\nTo review, the conditions for a regression analysis are as follows (including the newest fourth condition):\n\nThe two variables must be numerical.\nThere is a somewhat linear relationship between the variables, as shown in a scatterplot.\nThere are no serious outliers.\nThere is no pattern in the residuals.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#r2",
    "href": "07-regression-web.html#r2",
    "title": "7  Regression",
    "section": "7.10 \\(R^2\\)",
    "text": "7.10 \\(R^2\\)\nWe saw in the last chapter that the correlation coefficient r is of limited utility. In addition to being only a single statistic to summarize a linear association, the number doesn’t have any kind of intrinsic meaning. It can only be judged by how close it is to 0 or 1 (or -1) in conjunction with a scatterplot to give you a sense of the strength of the correlation. In particular, some people try to interpret r as some kind of percentage, but it’s not.\nOn the other hand, when we square the correlation coefficient, we do get an interpretable number. For some reason, instead of writing \\(r^2\\), statisticians write \\(R^2\\), with a capital R. (I can’t find the historical reason why this is so.) In any event, \\(R^2\\) can be interpreted as a percentage! It represents the percent of variation in the y variable that can be explained by variation in the x variable. More on what that means in a bit.\nBut first, let’s introduce the last of the broom functions: glance. Whereas tidy reports the intercept and slope, and augment reports values associated to each data point separately, the glance function gathers up summaries for the entire model. (Do not confuse glance with glimpse. The latter is a nicer version of str that just summarizes the variables in a tibble.)\n\ninvolact_race_glance &lt;- glance(involact_race_lm)\ninvolact_race_glance\n\n\n  \n\n\n\nA more advanced statistics course might discuss the other model summaries present in the glance output. The \\(R^{2}\\) value is stored in the r.squared column (inexplicably, now written with a lowercase r). Its value is 0.51. We will word it this way:\n\n51% of the variability in FAIR policies can be accounted for by variability in racial composition.\n\nAnother way to think about this is to imagine all the factors that might go into the number of FAIR policies obtained in a ZIP code. That number varies across ZIP codes, with some ZIP codes having essentially 0 FAIR policies per 100 housing units, and others having quite a bit more, up to 2 or more per 100 housing units. What accounts for this discrepancy among ZIP codes? Is it the varying racial composition of those neighborhoods? To some degree, yes. We have seen that more racially diverse neighborhoods, on average, require more FAIR policies. But is race the only factor? Probably not. Income, for example, might play a role. People in low income neighborhoods may not be able to acquire traditional insurance due to its cost or their poor credit, etc. That also accounts for some of the variability among ZIP codes. Are there likely even more factors? Most assuredly. In fact, if 51% of the variability in FAIR policies can be accounted for by variability in racial composition. then 49% must be accounted for by other variables. These other variables may or may not be collected in our data, and we will never be able to determine all the factors that go into varying FAIR policy numbers.\n\\(R^2\\) is a measure of the fit of the model. High values of \\(R^2\\) mean that the line predicts the data values closely, whereas lower values of \\(R^2\\) mean that there is still a lot of variability left in the residuals (again, due to other factors that are not measured in the model).\n\nExercise 13\nCalculate the correlation coefficient r between involact and race using the cor command. (You might have to look back at the last chapter to remember the syntax.) Store that value as r.\nIn a separate code chunk, square that value using the command r^2. Verify that the square of the correlation coefficient is the same as the \\(R^2\\) value reported in the glance output above.\n\n\n# Add code here to calculate the correlation coefficient\n\n\n# Add code here to square the correlation coefficient",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#multiple-predictors",
    "href": "07-regression-web.html#multiple-predictors",
    "title": "7  Regression",
    "section": "7.11 Multiple predictors",
    "text": "7.11 Multiple predictors\nThe discussion of \\(R^2\\) above highlights the fact that a single predictor will rarely account for all or even most of the variability in a response variable. Is there a way to take other predictors into account?\nThe answer is yes, and the statistical technique involved is called multiple regression. Multiple regression is a deep subject, worthy of entire courses. Suffice it to say here that more advanced stats courses go into the ways in which multiple predictors can be included in a regression.\nOne easy thing we can do is incorporate a categorical variable into a graph and see if that categorical variable might play a role in the regression analysis. For example, there is a variable called side in chredlin that indicates whether the ZIP code is on the north side (n) or south side(s) of Chicago. As described in an earlier chapter, we can use color to distinguish between the ZIP codes.\n\nggplot(chredlin, aes(y = involact, x = race, color = side)) +\n  geom_point() +\n  scale_color_viridis_d() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nExercise 14\nDo neighborhoods with higher percent racial minorities tend to be on the north or south side of Chicago?\n\nPlease write up your answer here.\n\n\nDoes this affect the regression? We haven’t checked the conditions carefully for this new question, so we will exercise caution in coming to any definitive conclusions. But visually, there does appear to be a difference in the models generated for ZIP codes on the north versus south sides:\n\nggplot(chredlin, aes(y = involact, x = race, color = side)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  scale_color_viridis_d() +\n  theme_bw()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nExercise 15\nAlthough the slopes appear to be different, this is quite misleading. Focus on just the darker dots (for the north side). Which regression condition appears to be violated if we only consider the north side regression? How does that violation appear to affect the slope of the regression line? (Hint: look in the upper right corner.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#your-turn",
    "href": "07-regression-web.html#your-turn",
    "title": "7  Regression",
    "section": "7.12 Your turn",
    "text": "7.12 Your turn\nLet’s revisit the penguins data. Imagine that it was much easier to measure body mass than it was to measure flipper length. (I’m not a penguin expert, so I don’t know if that’s true, but it seems plausible. Weighing a penguin can be done without human contact, for example.) Can we accurately predict flipper length from body mass? (This means that flipper_length_mm should be the response variable on the y-axis and body_mass_g should be the predictor variable on the x-axis.)\n\nExercise 16(a)\nCreate a scatterplot of the data. Do not include a regression line yet. (In other words, there should be no geom_smooth in this plot.)\n\n\n# Add code here to create a scatterplot of the data\n\n\n\n\nExercise 16(b)\nUse the scatterplot above to check the first three conditions of regression.\n\n\n\n\n\n\n\n\n\nExercise 16(c)\nAs we’re reasonably satisfied that the first three conditions are met and regression is worth pursuing, run the lm command to perform the regression analysis. Assign the output to the name fl_bm_lm. Be sure to type the variable name fl_bm_lm on its own line so that the output is printed in this file.\nThen use tidy, augment, and glance respectively on the output. Assign the output to the names fl_bm_tidy, fl_bm_aug, and fl_bm_glance. Again, in each code chunk, type the output variable name on its own line to ensure that it prints in this file.\n\n\n# Add code here to generate and print regression output with lm\n\n\n# Add code here to \"tidy\" and print the output from lm\n\n\n# Add code here to \"augment\" and print the output from lm\n\n\n# Add code here to \"glance\" at and print the output from lm\n\n\n\n\nExercise 16(d)\nUse the augment output from above to create a residual plot with a blue horizontal reference line.\n\n\n# Add code here to create a residual plot\n\n\n\n\nExercise 16(e)\nUse the residual plot to check the fourth regression condition.\n\n\n\n\n\n\n\nExercise 16(f)\nWith all the conditions met, plot the regression line on top of the scatterplot of the data. (Use geom_smooth with method = lm and se = FALSE as in the examples earlier.)\n\n\n# Add code here to plot the regression line on the scatterplot\n\n\n\n\nExercise 16(g)\nUsing the values of the intercept and slope from the tidy output, write the regression equation mathematically (enclosing your answer in double dollar signs as above), using contextually meaningful variable names.\n\n\\[\nwrite-math-here\n\\]\n\n\n\nExercise 16(h)\nInterpret the slope in a full, contextually meaningful sentence. Don’t forget to use units of measurement in your answer.\n\nPlease write up your answer here.\n\n\n\nExercise 16(i)\nA one gram increase in body mass is not very significant or interesting. Rescale your answer to the previous part in terms of a one kilogram (1000 gram) increase in body mass. In other words, how much of an increase in flipper length (in mm) does the model predict for a one kilogram increase in body mass?\n\nPlease write up your answer here.\n\n\n\nExercise 16(j)\nGive a literal interpretation of the intercept. Then comment on the appropriateness of that interpretation. (In other words, does the intercept make sense, or is it a case of extrapolation?)\n\nPlease write up your answer here.\n\n\n\nExercise 16(k)\nUse the equation of the regression line to predict the flipper length of a penguin with body mass 4200 grams. Show your work. Then put that prediction into a full, contextually meaningful sentence (with units).\n\nPlease write up your answer here.\n\n\n\nExercise 16(l)\nUsing the value of \\(R^2\\) from the glance output for the model of flipper length by body mass, write a full, contextually meaningful sentence interpreting that value.\n\nPlease write up your answer here.\n\n\n\nExercise 16(m)\nAdd color = species to the aes portion of the ggplot command to look at the regression lines for the three different species separately. (Don’t forget to use the Viridis color palette and the black-and-white theme.) Comment on the slopes of those three regression lines.\n\n\n# Add code here to plot regressions by species\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "07-regression-web.html#conclusion",
    "href": "07-regression-web.html#conclusion",
    "title": "7  Regression",
    "section": "7.13 Conclusion",
    "text": "7.13 Conclusion\nGoing beyond mere correlation, a regression analysis allows us to specify a linear model in the form of an equation. Assuming the conditions are met, this allows us to say more about the association. For example, the slope predicts how the response changes when comparing two values of the predictor. In fact, we can use the regression line to make a prediction for any reasonable value of the predictor (being careful not to extrapolate far outside the range of available data values). Because regression is only a model, these predictions will not be exactly correct. Real data comes with residuals, meaning deviations from the idealized predictions of the model. But if those residuals are relatively small then the \\(R^2\\) value will be large and the model does a good job making reasonably accurate predictions.\n\n7.13.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html",
    "href": "08-intro_to_randomization_1-web.html",
    "title": "8  Introduction to randomization, Part 1",
    "section": "",
    "text": "8.1 Introduction\nIn this module, we’ll learn about randomization and simulation. When we want to understand how sampling works, it’s helpful to simulate the process of drawing samples repeatedly from a population. In the days before computing, this was very difficult to do. Now, a few simple lines of computer code can generate thousands (even millions) of random samples, often in a matter of seconds or less.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#introduction",
    "href": "08-intro_to_randomization_1-web.html#introduction",
    "title": "8  Introduction to randomization, Part 1",
    "section": "",
    "text": "8.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"mosaic\")\n\n\n8.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/08-intro_to_randomization_1.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n8.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n8.1.4 Load packages\nWe load the tidyverse package. The mosaic package contains some tools for making it easier to learn about randomization and simulation.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#sample-and-population",
    "href": "08-intro_to_randomization_1-web.html#sample-and-population",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.2 Sample and population",
    "text": "8.2 Sample and population\nThe goal of the next few chapters is to help you think about the process of sampling from a population. What do these terms mean?\nA population is a group of objects we would like to study. If that sounds vague, that’s because it is. A population can be a group of any size and of any type of thing in which we’re interested. Often, populations refer to groups of people. For example, in an election, the population of interest is all voters. But if you’re a biologist, you might study populations of other kinds of organisms. If you’re an engineer, you might study populations of bolts on bridges. If you’re in finance, you might study populations of loans.\nPopulations are usually inaccessible in their entirety. It is impossible to survey every voter in any reasonably sized election, for example. Therefore, to study them, we have to collect a sample. A sample is a subset of the population. We might conduct a poll of 2000 voters to try to learn about voting intentions for the entire population. Of course, for that to work, the sample has to be representative of its population. We’ll have more to say about that in the future.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#flipping-a-coin",
    "href": "08-intro_to_randomization_1-web.html#flipping-a-coin",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.3 Flipping a coin",
    "text": "8.3 Flipping a coin\nBefore we talk about how samples are obtained from populations in the real world, we’re going to perform some simulations.\nOne of the simplest acts to simulate is flipping a coin. We could get an actual coin and physically flip it over and over again, but that is time-consuming and annoying. It is much easier to flip a “virtual” coin inside the computer. One way to accomplish this in R is to use the rflip command from the mosaic package. To make sure we’re flipping a fair coin, we’ll say that we want a 50% chance of heads by including the parameter prob = 0.5.\nOne more bit of technical detail. Since there will be some randomness involved here, we will need to include an R command to ensure that we all get the same results every time this code runs. This is called “setting the seed.” Don’t worry too much about what this is doing under the hood. The basic idea is that two people who start with the same seed will generate the same sequence of “random” numbers.\nThe seed 1234 in the chunk below is totally arbitrary. It could have been any number at all. (And, in fact, we’ll use different numbers just for fun.) If you change the seed, you will get different output, so we all need to use the same seed. But the actual common value we all use for the seed is irrelevant.\nHere is one coin flip with a 50% chance of coming up heads:\n\nset.seed(1234)\nrflip(1, prob = 0.5)\n\n\nFlipping 1 coin [ Prob(Heads) = 0.5 ] ...\n\nT\n\nNumber of Heads: 0 [Proportion Heads: 0]\n\n\nHere are ten coin flips, each with a 50% chance of coming up heads:\n\nset.seed(1234)\nrflip(10, prob = 0.5)\n\n\nFlipping 10 coins [ Prob(Heads) = 0.5 ] ...\n\nT H H H H H T T H H\n\nNumber of Heads: 7 [Proportion Heads: 0.7]\n\n\nJust to confirm that this is a random process, let’s flip ten coins again (but without setting the seed again):\n\nrflip(10, prob = 0.5)\n\n\nFlipping 10 coins [ Prob(Heads) = 0.5 ] ...\n\nH H T H T H T T T T\n\nNumber of Heads: 4 [Proportion Heads: 0.4]\n\n\nIf we return to the previous seed of 1234, we should obtain the same ten coin flips we did at first:\n\nset.seed(1234)\nrflip(10, prob = 0.5)\n\n\nFlipping 10 coins [ Prob(Heads) = 0.5 ] ...\n\nT H H H H H T T H H\n\nNumber of Heads: 7 [Proportion Heads: 0.7]\n\n\nAnd just to see the effect of setting a different seed:\n\nset.seed(9999)\nrflip(10, prob = 0.5)\n\n\nFlipping 10 coins [ Prob(Heads) = 0.5 ] ...\n\nH H H T H H T H H H\n\nNumber of Heads: 8 [Proportion Heads: 0.8]\n\n\n\nExercise 1\nIn ten coin flips, how many would you generally expect to come up heads? Is that the actual number of heads you saw in the simulations above? Why aren’t the simulations coming up with the expected number of heads each time?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#multiple-simulations",
    "href": "08-intro_to_randomization_1-web.html#multiple-simulations",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.4 Multiple simulations",
    "text": "8.4 Multiple simulations\nSuppose now that you are not the only person flipping coins. Suppose a bunch of people in a room are all flipping coins. We’ll start with ten coin flips per person, a task that could be reasonably done even without a computer.\nYou might observe three heads in ten flips. Fine, but what about everyone else in the room? What numbers of heads will they see?\nThe do command from mosaic is a way of doing something multiple times. Imagine there are twenty people in the room, each flipping a coin ten times, each time with a 50% probability of coming up heads. Observe:\n\nset.seed(12345)\ndo(20) * rflip(10, prob = 0.5)\n\n\n  \n\n\n\nThe syntax could not be any simpler: do(20) * means, literally, “do twenty times.” In other words, this command is telling R to repeat an action twenty times, where the action is flipping a single coin ten times.\nYou’ll notice that in place of a list of outcomes (H or T) of all the individual flips, we have instead a summary of the number of heads and tails each person sees. Each row represents a person, and the columns give information about each person’s flips. (There are n = 10 flips for each person, but then the number of heads/tails—and the corresponding “proportion” of heads—changes from person to person.)\nLooking at the above rows and columns, we see that the output of our little coin-flipping experiment is actually stored in a data frame! Let’s give it a name and work with it.\n\nset.seed(12345)\ncoin_flips_20_10 &lt;- do(20) * rflip(10, prob = 0.5)\ncoin_flips_20_10\n\n\n  \n\n\n\nIt is significant that we can store our outcomes this way. Because we have a data frame, we can apply all our data analysis tools (graphs, charts, tables, summary statistics, etc.) to the “data” generated from our set of simulations.\nFor example, what is the mean number of heads these twenty people observed?\n\nmean(coin_flips_20_10$heads)\n\n[1] 5.6\n\n\n\nExercise 2\nThe data frame coin_flips_20_10 contains four variables: n, heads, tails, and prop. In the code chunk above, we calculated mean(coin_flips_20_10$heads) which gave us the mean count of heads for all people flipping coins. Instead of calculating the mean count of heads, change the variable from heads to prop to calculate the mean proportion of heads. Then explain why your answer makes sense in light of the mean count of heads calculated above.\n\n\n# Add code here to calculate the mean proportion of heads.\n\nPlease write up your answer here.\n\n\nLet’s look at a histogram of the number of heads we see in the simulated flips. (The fancy stuff in scale_x_continuous is just making sure that the x-axis goes from 0 to 10 and that the tick marks appear on each whole number.)\n\nggplot(coin_flips_20_10, aes(x = heads)) +\n  geom_histogram(binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, 1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nLet’s do the same thing, but now let’s consider the proportion of heads.\n\nggplot(coin_flips_20_10, aes(x = prop)) +\n  geom_histogram(binwidth = 0.05) +\n  scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#bigger-and-better",
    "href": "08-intro_to_randomization_1-web.html#bigger-and-better",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.5 Bigger and better!",
    "text": "8.5 Bigger and better!\nWith only twenty people, it was possible that, for example, nobody would get all heads or all tails. Indeed, in coin_flips_20_10 there were no people who got all heads or all tails. Also, there were more people with six and seven heads than with five heads, even though we “expected” the average to be five heads. There is nothing particularly significant about that; it happened by pure chance alone. Another run through the above commands would generate a somewhat different outcome. That’s what happens when things are random.\nInstead, let’s imagine that we recruited way more people to flip coins with us. Let’s try it again with 2000 people:\n\nset.seed(1234)\ncoin_flips_2000_10 &lt;- do(2000) * rflip(10, prob = 0.5)\ncoin_flips_2000_10\n\n\n  \n\n\n\nThis is the same idea as before, but now there are 2000 rows in the data frame instead of 20.\n\nmean(coin_flips_2000_10$heads)\n\n[1] 5.0245\n\n\n\nggplot(coin_flips_2000_10, aes(x = heads)) +\n  geom_histogram(binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, 1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nThis is helpful. In contrast with the set of simulations with twenty people, the last histogram gives us something closer to what we expect. The mode is at five heads, and every possible number of heads is represented, with decreasing counts as one moves away from five. With 2000 people flipping coins, all possible outcomes—including rare ones—are better represented.\nHere is the the same histogram, but this time with the proportion of heads instead of the count of heads:\n\nggplot(coin_flips_2000_10, aes(x = prop)) +\n  geom_histogram(binwidth = 0.05) +\n  scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\nExercise 3\nDo you think the shape of the distribution would be appreciably different if we used 20,000 or even 200,000 people? Why or why not? (Normally, I would encourage you to test your theory by trying it in R. However, it takes a long time to simulate that many flips and I don’t want you to tie up resources and memory. Think through this in your head.)\n\nPlease write up your answer here.\n\n\nFrom now on, we will insist on using at least a thousand simulations—if not more—to make sure that we represent the full range of possible outcomes.1",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#more-flips",
    "href": "08-intro_to_randomization_1-web.html#more-flips",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.6 More flips",
    "text": "8.6 More flips\nNow let’s increase the number of coin flips each person performs. We’ll still use 2000 simulations (imagine 2000 people all flipping coins), but this time, each person will flip the coin 1000 times instead of only 10 times. The first code chunk below accounts for a substantial amount of the time it takes to run the code in this document.\n\nset.seed(1234)\ncoin_flips_2000_1000 &lt;- do(2000) * rflip(1000, prob = 0.5)\ncoin_flips_2000_1000\n\n\n  \n\n\n\n\nmean(coin_flips_2000_1000$heads)\n\n[1] 499.9055\n\n\n\nggplot(coin_flips_2000_1000, aes(x = heads)) +\n  geom_histogram(binwidth = 10, boundary = 500)\n\n\n\n\n\n\n\n\nAnd now the same histogram, but with proportions:\n\nggplot(coin_flips_2000_1000, aes(x = prop)) +\n  geom_histogram(binwidth = 0.01, boundary = 0.5)\n\n\n\n\n\n\n\n\n\nExercise 4\nComment on the histogram above. Describe its shape using the vocabulary of the three important features (modes, symmetry, outliers). Why do you think it’s shaped like this?\n\nPlease write up your answer here.\n\n\n\nExercise 5\nGiven the amount of randomness involved (each person is tossing coins which randomly come up heads or tails), why do we see so much structure and orderliness in the histograms?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#but-who-cares-about-coin-flips",
    "href": "08-intro_to_randomization_1-web.html#but-who-cares-about-coin-flips",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.7 But who cares about coin flips?",
    "text": "8.7 But who cares about coin flips?\nIt’s fair to ask why we go to all this trouble to talk about coin flips. The most pressing research questions of our day do not involve people sitting around and flipping coins, either physically or virtually.\nBut now substitute “heads” and “tails” with “cancer” and “no cancer”. Or “guilty” and “not guilty”. Or “shot” and “not shot”. The fact is that many important issues are measured as variables with two possible outcomes. There is some underlying “probability” of seeing one outcome over the other. (It doesn’t have to be 50% like the coin.) Statistical methods—including simulation—can say a lot about what we “expect” to see if these outcomes are truly random. More importantly, when we see outcomes that aren’t consistent with our simulations, we may wonder if there is some underlying mechanism that may be not so random after all. It may not look like it on first blush, but this idea is at the core of the scientific method.\nFor example, let’s suppose that 85% of U.S. adults support some form of background checks for gun buyers.2 Now, imagine we went out and surveyed a random group of people and asked them a simple yes/no question about their support for background checks. What might we see?\nLet’s simulate. Imagine flipping a coin, but instead of coming up heads 50% of the time, suppose it were possible for the coin to come up heads 85% of the time.3 A sequence of heads and tails with this weird coin would be much like randomly surveying people and asking them about background checks.\nWe can make a “virtual” weird coin with the rflip command by specifying how often we want heads to come up.\n\nset.seed(1234)\nrflip(1, prob = 0.85)\n\n\nFlipping 1 coin [ Prob(Heads) = 0.85 ] ...\n\nH\n\nNumber of Heads: 1 [Proportion Heads: 1]\n\n\nIf we flip our weird coin a bunch of times, we can see that our coin is not fair. Indeed, it appears to come up heads way more often than not:\n\nset.seed(1234)\nrflip(100, prob = 0.85)\n\n\nFlipping 100 coins [ Prob(Heads) = 0.85 ] ...\n\nH H H H T H H H H H H H H T H H H H H H H H H H H H H T H H H H H H H H\nH H T H H H H H H H H H H H H H H H H H H H H H T H H H H H H H H H H T\nH H H H H H H H T H H H H T H H H T H T H H H H H H H H\n\nNumber of Heads: 90 [Proportion Heads: 0.9]\n\n\nThe results from the above code can be thought of as a survey of 100 random U.S. adults about their support for background checks for purchasing guns. “Heads” means “supports” and “tails” means “opposes.” If the majority of Americans support background checks, then we will come across more people in our survey who tell us they support background checks. This shows up in our simulation as the appearance of more heads than tails.\nNote that there is no guarantee that our sample will have exactly 85% heads. In fact, it doesn’t; it has 90% heads.\nAgain, keep in mind that we’re simulating the act of obtaining a random sample of 100 U.S. adults. If we get a different sample, we’ll get different results. (We set a different seed here. That ensures that this code chunk is randomly different from the one above.)\n\nset.seed(123456)\nrflip(100, prob = 0.85)\n\n\nFlipping 100 coins [ Prob(Heads) = 0.85 ] ...\n\nH H H H H H H H T H H H T T T T T H H H H H H H H H T T T H H T H H H H\nT T H H H H T H H H H H H H H H H T H T H H H H H H H H H H H H H H H H\nT H H H T H H H H H H T H H H H H H H H H H H H T H H H\n\nNumber of Heads: 81 [Proportion Heads: 0.81]\n\n\nSee, this time, only 81% came up heads, even though we expected 85%. That’s how randomness works.\n\nExercise 6(a)\nNow imagine that 2000 people all go out and conduct surveys of 100 random U.S. adults, asking them about their support for background checks. Write some R code that simulates this. Plot a histogram of the results. (Hint: you’ll need do(2000) * in there.) Use the proportion of supporters (prop), not the raw count of supporters (heads).\n\n\nset.seed(1234)\n# Add code here to simulate 2000 surveys of 100 U.S. adults.\n\n\n# Plot the results in a histogram using proportions.\n\n\n\n\nExercise 6(b)\nRun another simulation, but this time, have each person survey 1000 adults and not just 100.\n\n\nset.seed(1234)\n# Add code here to simulate 2000 surveys of 1000 U.S. adults.\n\n\n# Plot the results in a histogram using proportions.\n\n\n\n\nExercise 6(c)\nWhat changed when you surveyed 1000 people instead of 100?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#sampling-variability",
    "href": "08-intro_to_randomization_1-web.html#sampling-variability",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.8 Sampling variability",
    "text": "8.8 Sampling variability\nWe’ve seen that taking repeated samples (using the do command) leads to lots of different outcomes. That is randomness in action. We don’t expect the results of each survey to be exactly the same every time the survey is administered.\nBut despite this randomness, there is an interesting pattern that we can observe. It has to do with the number of times we flip the coin. Since we’re using coin flips to simulate the act of conducting a survey, the number of coin flips is playing the role of the sample size. In other words, if we want to simulate a survey of U.S. adults with a sample size of 100, we simulate that by flipping 100 coins.\n\nExercise 7\nGo back and look at all the examples above. What do you notice about the range of values on the x-axis when the sample size is small versus large? (In other words, in what way are the histograms different when using rflip(10, prob = ...) or rflip(100, prob = ...) versus rflip(1000, prob = ...)? It’s easier to compare histograms one to another when looking at the proportions instead of the raw head counts because proportions are always on the same scale from 0 to 1.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#conclusion",
    "href": "08-intro_to_randomization_1-web.html#conclusion",
    "title": "8  Introduction to randomization, Part 1",
    "section": "8.9 Conclusion",
    "text": "8.9 Conclusion\nSimulation is a tool for understanding what happens when a statistical process is repeated many times in a randomized way. The availability of fast computer processing makes simulation easy and accessible. Eventually, the goal will be to use simulation to answer important questions about data and the processes in the world that generate data. This is possible because, despite the ubiquitous presence of randomness, a certain order emerges when the number of samples is large enough. Even though there is sampling variability (different random outcomes each time we sample), there are patterns in that variability that can be exploited to make predictions.\n\n8.9.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "08-intro_to_randomization_1-web.html#footnotes",
    "href": "08-intro_to_randomization_1-web.html#footnotes",
    "title": "8  Introduction to randomization, Part 1",
    "section": "",
    "text": "There is some theory behind choosing the number of times we need to simulate, but we’re not going to get into all that.↩︎\nThis is likely close to the truth. See this article: https://iop.harvard.edu/get-involved/harvard-political-review/vast-majority-americans-support-universal-background-checks↩︎\nThe idea of a “weighted” coin that can do this comes up all the time in probability and statistics courses, but it seems that it’s not likely one could actually manufacture a coin that came up heads more or less than 50% of the time when flipped. See this paper for more details: http://www.stat.columbia.edu/~gelman/research/published/diceRev2.pdf↩︎",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Introduction to randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html",
    "href": "09-intro_to_randomization_2-web.html",
    "title": "9  Introduction to randomization, Part 2",
    "section": "",
    "text": "9.1 Introduction\nIn this chapter, we’ll learn more about randomization and simulation. Instead of flipping coins, though, we’ll randomly shuffle data around in order to explore the effects of randomizing a predictor variable.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#introduction",
    "href": "09-intro_to_randomization_2-web.html#introduction",
    "title": "9  Introduction to randomization, Part 2",
    "section": "",
    "text": "9.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"infer\")\n\n\n9.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/09-intro_to_randomization_2.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n9.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n9.1.4 Load packages\nWe’ll load tidyverse as usual along with the janitor package to make tables (with tabyl). The openintro package has a data set called sex_discrimination that we will explore. Finally, the infer package will provide tools that we will use in nearly every chapter for the remainder of the book.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nlibrary(infer)",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#our-research-question",
    "href": "09-intro_to_randomization_2-web.html#our-research-question",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.2 Our research question",
    "text": "9.2 Our research question\nAn interesting study was conducted in the 1970s that investigated gender discrimination in hiring.1 The researchers brought in 48 male bank supervisors and asked them to evaluate personnel files. Based on their review, they were to determine if the person was qualified for promotion to branch manager. The trick is that all the files were identical, but half listed the candidate as male and half listed the candidate as female. The files were randomly assigned to the 48 supervisors.\nThe research question is whether the files supposedly belonging to males were recommended for promotion more than the files supposedly belonging to females.\n\nExercise 1\nIs the study described above an observational study or an experiment? How do you know?\n\nPlease write up your answer here.\n\n\n\nExercise 2(a)\nIdentify the sample in the study. In other words, how many people were in the sample and what are the important characteristics common to those people.\n\nPlease write up your answer here.\n\n\n\nExercise 2(b)\nIdentify the population of interest in the study. In other words, who is the sample supposed to represent? That is, what group of people is this study trying to learn about?\n\nPlease write up your answer here.\n\n\n\nExercise 2(c)\nIn your opinion, does the sample from this study truly represent the population you identified above?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#exploratory-data-analysis",
    "href": "09-intro_to_randomization_2-web.html#exploratory-data-analysis",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.3 Exploratory data analysis",
    "text": "9.3 Exploratory data analysis\nHere is the data:\n\nsex_discrimination\n\n\n  \n\n\n\n\nglimpse(sex_discrimination)\n\nRows: 48\nColumns: 2\n$ sex      &lt;fct&gt; male, male, male, male, male, male, male, male, male, male, m…\n$ decision &lt;fct&gt; promoted, promoted, promoted, promoted, promoted, promoted, p…\n\n\n\nExercise 3\nWhich variable is the response variable and which variable is the predictor variable?\n\nPlease write up your answer here.\n\n\nBelow is a contingency table with decision as the row variable and sex as the column variable. Recall that we always list the response variable first. That way, the column sums will show us how many observations are in each of the predictor groups.\nAlso, note the use of the “pipe” |&gt; here. Normally, the tabyl function requires as its first argument the name of the data frame, followed by the names of any variables that you want in the table. Here, though, the data frame (sex_discrimination) gets fed into the tabyl function through the pipe. Because of that, the tabyl function only requires the names of the two variables.\n\nsex_discrimination |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\n\nExercise 4\nCreate another contingency table of decision and sex, but this time with percentages (not proportions) instead of counts. You’ll probably have to go back to the “Categorical data” to review the syntax. (Hint: you should have three separate adorn functions on the lines following the tabyl command.)\n\n\n# Add code here to create a contingency table of percentages\n\n\n\nAlthough we can read off the percentages in the contingency table, we need to do computations using the proportions. (Remember that we use percentages to communicate with other human beings, but we do math with proportions.) Fortunately, the output of tabyl is a tibble! So we can manipulate and grab the elements we need.\nLet’s create and store the tabyl output with proportions. We don’t need the marginal distribution, so we can dispense with adorn_totals.\n\ndecision_sex_tabyl &lt;- sex_discrimination |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\")\ndecision_sex_tabyl\n\n\n  \n\n\n\n\n\nExercise 5\nInterpret these proportions in the context of the data. In other words, what do these proportions say about the male files that were recommended for promotion versus the female files recommended for promotion?\n\nPlease write up your answer here.\n\n\nThe real statistic of interest to us is the difference between these proportions. We can use the mutate command from dplyr to compute the difference for us.\n\ndecision_sex_tabyl |&gt;\n  mutate(diff = male - female)\n\n\n  \n\n\n\nAs a matter of fact, once we know the difference in promotion rates, we don’t really need the individual proportions anymore. The transmute verb is a version of mutate that gives us exactly what we want. It will create a new column just like mutate, but then it keeps only that new column. We’ll call the resulting output decision_sex_diff.\n\ndecision_sex_diff &lt;- decision_sex_tabyl |&gt;\n  transmute(diff = male - female)\ndecision_sex_diff\n\n\n  \n\n\n\nNotice the order of subtraction: we’re doing the men’s rates minus the women’s rates.\nThis computes both the difference in promotion rates (in the first row) and the difference in not-promoted rates (in the second row). Let’s just keep the first row, since we care more about promotion rates. (That’s our success category.) We can use slice to grab the first row:\n\ndecision_sex_diff |&gt;\n  slice(1)\n\n\n  \n\n\n\nThis means that there is a 29% difference between the male files that were promoted and the female files that were promoted. The difference was computed as males minus females, so the fact that the number is positive means that male files were more likely to recommended for promotion.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#permuting",
    "href": "09-intro_to_randomization_2-web.html#permuting",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.4 Permuting",
    "text": "9.4 Permuting\nOne way to see if there is evidence of an association between promotion decisions and sex is to assume, temporarily, that there is no association. If there were truly no association, then the difference between the promotion rates between the male files and female files should be 0%. Of course, the number of people promoted in the data was 35, an odd number, so the number of male files promoted and female files promoted cannot be the same. Therefore, the difference in proportions can’t be exactly zero in this data. Nevertheless, we would expect—under the assumption of no association—the number of male files promoted to be close to the number of female files promoted, giving a difference around 0%.\nNow, we saw a difference of about 29% between the two groups in the data. Then again, non-zero differences—sometimes even large ones—can just come about by pure chance alone. We may have accidentally sampled more bank managers who just happened to prefer the male candidates. This could happen for sexist reasons; it’s possible our sample of bank managers are, by chance, more sexist than bank managers in the general population during the 1970s. Or it might be for more benign reasons; perhaps the male applications got randomly steered to bank managers who were more likely to be impressed with any application, and therefore, they were more likely to promote anyone regardless of the gender listed. We have to consider the possibility that our observed difference was large by accident, even though there may have been no association between promotion and sex in the general population.\nSo how do we test the range of values that could arise from just chance alone? In other words, how do we explore sampling variability?\nOne way to force the variables to be independent is to “permute”—in other words, shuffle—the values of sex in our data. If we ignore the sex listed in the file and give it a random label (independent of the actual sex listed in the file), we know for sure that such an assignment is random and not due to any actual evidence of sexism. In that case, promotion is equally likely to occur in both groups.\nLet’s see how permuting works in R. To begin with, look at the actual values of sex in our data:\n\nsex_discrimination$sex\n\n [1] male   male   male   male   male   male   male   male   male   male  \n[11] male   male   male   male   male   male   male   male   male   male  \n[21] male   male   male   male   female female female female female female\n[31] female female female female female female female female female female\n[41] female female female female female female female female\nLevels: male female\n\n\nAll the males happen to be listed first, followed by all the females.\nNow we permute all the values around (using the sample command). As explained in an earlier chapter, we will set the seed so that our results are reproducible.\n\nset.seed(3141593)\nsample(sex_discrimination$sex)\n\n [1] male   female male   male   female female female female female female\n[11] female female female female male   male   female male   female male  \n[21] female female male   male   female female male   female male   male  \n[31] male   male   male   female male   female male   male   male   male  \n[41] female female female male   male   male   female male  \nLevels: male female\n\n\nDo it again without the seed, just to make sure it’s truly random:\n\nsample(sex_discrimination$sex)\n\n [1] male   male   male   female male   female male   female female female\n[11] female male   female male   female female female female male   male  \n[21] female female female male   male   female male   male   male   female\n[31] male   male   male   male   male   female female female female male  \n[41] female female male   male   male   female female male  \nLevels: male female",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#randomization",
    "href": "09-intro_to_randomization_2-web.html#randomization",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.5 Randomization",
    "text": "9.5 Randomization\nThe idea here is to keep the promotion status the same for each file, but randomly permute the sex labels. There will still be the same number of male and female files, but now they will be randomly matched with promoted files and not promoted files. Since this new grouping into “males” and “females” is completely random and arbitrary, we expect the likelihood of promotion to be equal for both groups.\nA more precise way of saying this is that the expected difference under the assumption of independent variables is 0%. If there were truly no association, then the percentage of people promoted would be independent of sex. However, sampling variability means that we are not likely to see an exact difference of 0%. (Also, as we mentioned earlier, the odd number of promotions means the difference will never be exactly 0% anyway in this data.) The real question, then, is how different could the difference be from 0% and still be reasonably possible due to random chance.\nLet’s perform a few random simulations. We’ll walk through the steps one line at a time. The first thing we do is permute the sex column:\n\nset.seed(3141593)\nsex_discrimination |&gt;\n  mutate(sex = sample(sex))\n\n\n  \n\n\n\nThen we follow the steps from earlier, generating a contingency table with proportions. This is accomplished by simply adding two lines of code to the previous code:\n\nset.seed(3141593)\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\")\n\n\n  \n\n\n\nNote that the proportions in this table are different from the ones in the real data.\nThen we calculate the difference between the male and female columns by adding a line with transmute:\n\nset.seed(3141593)\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female)\n\n\n  \n\n\n\nIn this case, the first row happens to be negative, but that’s okay. This particular random shuffling had more females promoted than males. (Remember, though, that the permuted sex labels are now meaningless.)\nFinally, we grab the entry in the first row with slice:\n\nset.seed(3141593)\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female) |&gt;\n  slice(1)\n\n\n  \n\n\n\nWe’ll repeat this code a few more times, but without the seed, to get new random observations.\n\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female) |&gt;\n  slice(1)\n\n\n  \n\n\n\n\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female) |&gt;\n  slice(1)\n\n\n  \n\n\n\n\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female) |&gt;\n  slice(1)\n\n\n  \n\n\n\n\nsex_discrimination |&gt;\n  mutate(sex = sample(sex)) |&gt;\n  tabyl(decision, sex) |&gt;\n  adorn_percentages(\"col\") |&gt;\n  transmute(diff = male - female) |&gt;\n  slice(1)\n\n\n  \n\n\n\nThink carefully about what these random numbers mean. Each time we randomize, we get a simulated difference in the proportion of promotions between male files and female files. The sample part ensures that there is no actual relationship between promotion and sex among these randomized values. We expect each simulated difference to be close to zero, but we also expect deviations from zero due to randomness and chance.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#the-infer-package",
    "href": "09-intro_to_randomization_2-web.html#the-infer-package",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.6 The infer package",
    "text": "9.6 The infer package\nThe above code examples show the nuts and bolts of permuting data around to break any association that might exist between two variables. However, to do a proper randomization, we need to repeat this process many, many times (just like how we flipped thousands of “coins” in the last chapter).\nHere we introduce some code from the infer package that will help us automate this procedure. The added benefit of introducing infer now is that we will continue to use it in nearly every chapter of the book that follows.\nHere is the code template, starting with setting the seed:\n\nset.seed(3141593)\nsims_1 &lt;- sex_discrimination |&gt;\n  specify(decision ~ sex, success = \"promoted\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\nsims_1\n\n\n  \n\n\n\nWe will learn more about all these lines of code in future chapters. By the end of the course, running this type of analysis will be second nature. For now, you can copy and paste the code chunk above and make minor changes as you need. Here are the three things you will need to look out for for doing this with different data sets in the future:\n\nThe second line (after setting the seed) will be your new data set.\nIn the specify line, you will have a different response variable, predictor variable, and success condition that will depend on the context of your new data.\nIn the calculate line, you will have two different levels of your predictor variable that you want to compare. Be careful to list them in the order in which you want to subtract them.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#plot-results",
    "href": "09-intro_to_randomization_2-web.html#plot-results",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.7 Plot results",
    "text": "9.7 Plot results\nA histogram will show us the range of possible values under the assumption of independence of the two variables. We can get one from our infer output using visualize. (This is a lot easier than building a histogram with ggplot!)\n\nsims_1 |&gt;\n  visualize()\n\n\n\n\n\n\n\n\nThe bins aren’t great in the picture above. There is no way currently to set the binwidth or boundary as we’ve done before, but we can experiment with the total number of bins. 9 seems to be a good number.\n\nsims_1 |&gt;\n  visualize(bins = 9)\n\n\n\n\n\n\n\n\n\nExercise 6\nWhy is the mode of the graph above at 0? This has been explained several different times in this chapter, but put it into your own words to make sure you understand the logic behind the randomization.\n\nPlease write up your answer here.\n\n\nLet’s compare these simulated values to the observed difference in the real data. We’ve computed the latter already, but let’s use infer tools to find it. We’ll give the answer a name, obs_diff_1.\n\nobs_diff_1 &lt;- sex_discrimination |&gt;\n  observe(decision ~ sex, success = \"promoted\",\n          stat = \"diff in props\", order = c(\"male\", \"female\"))\nobs_diff_1\n\n\n  \n\n\n\nNow we can graph the observed difference in the data alongside the simulated values under the assumption of independent variables. The name of the function shade_p_value is a little cryptic for now, but it will become clear within a few chapters.\n\nsims_1 |&gt;\n  visualize(bins = 9) +\n  shade_p_value(obs_stat = obs_diff_1, direction = \"greater\")",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#by-chance",
    "href": "09-intro_to_randomization_2-web.html#by-chance",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.8 By chance?",
    "text": "9.8 By chance?\nHow likely is it that the observed difference (or a difference even more extreme) could have resulted from chance alone? Because sims_1 contains simulated results after permuting, the values in the stat column assume that promotion is independent of sex. In order to assess how plausible our observed difference is under that assumption, we want to find out how many of the simulated values are at least as big, if not bigger, than the observed difference, 0.292.\nLook at the randomized differences sorted in decreasing order:\n\nsims_1 |&gt;\n  arrange(desc(stat))\n\n\n  \n\n\n\nOf the 1000 simulations, the most extreme difference of 37.5% occurred four times, just by chance. That seems like a pretty extreme value when expecting a value of 0%, but the laws of probability tell us that extreme values will be observed from time to time, even if rarely. Also recall that the observed difference in the actual data was 29.2%. This specific value came up quite a bit in our simulated data. In fact, the 31st entry of the sorted data above is the last occurrence of the value 0.292. After that, the next higher larger value is 0.208.\nSo let’s return to the original question. How many simulated values are as large—if not larger—than the observed difference? Apparently, 31 out of 1000, which is 0.031. In other words, 3% of the simulated data is as extreme or more extreme than the actual difference in promotion rates between male files and female files in the real data. That’s not very large. In other words, a difference like 29.2% could occur just by chance—like flipping 5 out of 5 heads or something like that. But it doesn’t happen very often.\nWe can automate this calculation using the function get_p_value (similar to shade_p_value above) even though we don’t yet know what “p value” means.\n\nsims_1 |&gt;\n  get_p_value(obs_stat = obs_diff_1, direction = \"greater\")\n\n\n  \n\n\n\nCOPY/PASTE WARNING: If the observed difference were negative, then extreme values of interest would be less than, say, -0.292, not greater than 0.292. You must note if the observed difference is positive or negative and then use “greater” or “less” as appropriate!\nAgain, 0.031 is a small number. This shows us that if there were truly no association between promotion and sex, then our data is a rare event. (An observed difference this extreme or more extreme would only occur about 3% of the time by chance.)\nBecause the probability above is so small, it seems unlikely that our variables are independent. Therefore, it seems more likely that there is an association between promotion and sex. We have evidence of a statistically discernible difference between the chance of getting recommended for promotion if the file indicates male versus female.\nBecause this is an experiment, it’s possible that a causal claim could be made. If everything in the application files was identical except the indication of gender, then it stands to reason that gender explains why more male files were promoted over female files. But all that depends on the experiment being a well-designed experiment.\n\nExercise 7\nAlthough we are not experts in experimental design, what concerns do you have about generalizing the results of this experiment to broad conclusions about sexism in the 1970s? (To be clear, I’m not saying that sexism wasn’t a broad problem in the 1970s. It surely was—and still is. I’m only asking you to opine as to why the results of this one study might not be conclusive in making an overly broad statement.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#your-turn",
    "href": "09-intro_to_randomization_2-web.html#your-turn",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.9 Your turn",
    "text": "9.9 Your turn\nIn this section, you’ll explore another famous data set related to the topic of gender discrimination. (Also from the 1970s!)\nThe following code will download admissions data from the six largest graduate departments at the University of California, Berkeley in 1973. We’ve seen the read_csv command before, but we’ve added some extra stuff in there to make sure all the columns get imported as factor variables (rather than having to convert them ourselves later).\n\nucb_admit &lt;- read_csv(\"https://vectorposse.github.io/intro_stats/data/ucb_admit.csv\",\n                      col_types = list(\n                        Admit = col_factor(),\n                        Gender = col_factor(),\n                        Dept = col_factor()))\n\n\nucb_admit\n\n\n  \n\n\n\n\nglimpse(ucb_admit)\n\nRows: 4,526\nColumns: 3\n$ Admit  &lt;fct&gt; Admitted, Admitted, Admitted, Admitted, Admitted, Admitted, Adm…\n$ Gender &lt;fct&gt; Male, Male, Male, Male, Male, Male, Male, Male, Male, Male, Mal…\n$ Dept   &lt;fct&gt; A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, …\n\n\nAs you go through the exercises below, you should carefully copy and paste commands from earlier in the chapter, making the necessary changes.\nRemember that R is case sensitive! In the sex_discrimination data, all the variables and levels started with lowercase letters. In the ucb_admit data, they all start with uppercase letters, so you’ll need to be careful to change that after you copy and paste code examples from above.\n\nExercise 8(a)\nIs this data observational or experimental? How do you know?\n\nPlease write up your answer here.\n\n\n\nExercise 8(b)\nExploratory data analysis: make two contingency tables with Admit as the response variable and Gender as the explanatory variable. One table should have counts and the other table should have percentages. (Both tables should include the marginal distribution at the bottom.)\n\n\n# Add code here to make a contingency table with counts.\n\n\n# Add code here to make a contingency table with percentages.\n\n\n\n\nExercise 8(c)\nUse observe from the infer package to calculate the observed difference in proportions between males who were admitted and females who were admitted. Do the subtraction in that order: males minus females. Store your output as obs_diff_2 so that it doesn’t conflict with the variable obs_diff_1 we created earlier.\n\n\n# Add code here to calculate the observed difference.\n# Store this as obs_diff_2.\n\n\n\n\nExercise 8(d)\nSimulate 1000 outcomes under the assumption that admission is independent of gender. Use the specify, hypothesize, generate, and calculate sequence from the infer package as above. Call the simulated data frame sims_2 so that it doesn’t conflict with the earlier sims_1. Don’t touch the set.seed command. That will ensure that all students get the same randomization.\n\n\nset.seed(10101)\n# Add code here to simulate 1000 outcomes\n# under the independence assumption\n# and store the simulations in a data frame called sims_2.\n\n\n\n\nExercise 8(e)\nPlot the simulated values in a histogram using the visualize verb from infer. When you first run the code, remove the bins = 9 we had earlier and let visualize choose the number of bins. If you are satisfied with the graph, you don’t need to specify a number of bins. If you are not satisfied, you can experiment with the number of bins until you find a number that seems reasonable.\nBe sure to include a vertical line at the value of the observed difference using the shade_p_value command. Don’t forget that the location of that line is obs_diff_2 now.\n\n\n# Add code here to plot the results.\n\n\n\n\nExercise 8(f)\nFinally, comment on what you see. Based on the histogram above, is the observed difference in the data rare? In other words, under the assumption that admission and gender are independent, are we likely to see an observed difference as far away from zero as we actually see in the data? So what is your conclusion then? Do you believe there was an association between admission and gender in the UC Berkeley admissions process in 1973?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#simpsons-paradox",
    "href": "09-intro_to_randomization_2-web.html#simpsons-paradox",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.10 Simpson’s paradox",
    "text": "9.10 Simpson’s paradox\nThe example above from UC Berkeley seems like an open and shut case. Male applicants were clearly admitted at a greater rate than female applicants. While we never expect the application rates to be exactly equal—even under the assumption that admission and gender are independent—the randomization exercise showed us that the observed data was way outside the range of possible differences that could have occurred just by chance.\nBut we also know this is observational data. Association is not causation.\n\nExercise 9\nNote that we didn’t say “correlation is not causation”. The latter is also true, but why does it not apply in this case? (Think about the conditions for correlation.)\n\nPlease write up your answer here.\n\n\nSince we don’t have data from a carefully controlled experiment, we always have to be worried about lurking variables. Could there be a third variable apart from admission and gender that could be driving the association between them? In other words, the fact that males were admitted at a higher rate than females might be sexism, or it might be spurious.\nSince we have access to a third variable, Dept, let’s analyze it as well. The tabyl command will happily take a third variable and create a set of contingency tables, one for each department.\nHere are the tables with counts:\n\nucb_admit |&gt;\n  tabyl(Admit, Gender, Dept) |&gt;\n  adorn_totals()\n\n$A\n    Admit Male Female\n Admitted  512     89\n Rejected  313     19\n    Total  825    108\n\n$B\n    Admit Male Female\n Admitted  353     17\n Rejected  207      8\n    Total  560     25\n\n$C\n    Admit Male Female\n Admitted  120    202\n Rejected  205    391\n    Total  325    593\n\n$D\n    Admit Male Female\n Admitted  138    131\n Rejected  279    244\n    Total  417    375\n\n$E\n    Admit Male Female\n Admitted   53     94\n Rejected  138    299\n    Total  191    393\n\n$F\n    Admit Male Female\n Admitted   22     24\n Rejected  351    317\n    Total  373    341\n\n\nAnd here are the tables with percentages:\n\nucb_admit |&gt;\n  tabyl(Admit, Gender, Dept) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\") |&gt;\n  adorn_pct_formatting()\n\n$A\n    Admit   Male Female\n Admitted  62.1%  82.4%\n Rejected  37.9%  17.6%\n    Total 100.0% 100.0%\n\n$B\n    Admit   Male Female\n Admitted  63.0%  68.0%\n Rejected  37.0%  32.0%\n    Total 100.0% 100.0%\n\n$C\n    Admit   Male Female\n Admitted  36.9%  34.1%\n Rejected  63.1%  65.9%\n    Total 100.0% 100.0%\n\n$D\n    Admit   Male Female\n Admitted  33.1%  34.9%\n Rejected  66.9%  65.1%\n    Total 100.0% 100.0%\n\n$E\n    Admit   Male Female\n Admitted  27.7%  23.9%\n Rejected  72.3%  76.1%\n    Total 100.0% 100.0%\n\n$F\n    Admit   Male Female\n Admitted   5.9%   7.0%\n Rejected  94.1%  93.0%\n    Total 100.0% 100.0%\n\n\n\n\nExercise 10\nLook at the contingency tables with percentages. Examine each department individually. What do you notice about the admit rates (as percentages) between males and females for most of the departments listed? Identify the four departments where female admission rates were higher than male admission rates.\n\nPlease write up your answer here.\n\n\nThis is completely counterintuitive. How can males be admitted at a higher rate overall, and yet in most departments, females were admitted at a higher rate?\nThis phenomenon is often called Simpson’s Paradox. Like almost everything in statistics, this is named after a person (Edward H. Simpson) who got the popular credit for writing about the phenomenon, but who wasn’t the person who actually discovered the phenomenon. (There does not appear to be a primeval reference for the first person to have studied it. Similar observations had appeared in various sources more than 50 years before Simpson wrote his paper.)\nWe saw several versions of this paradox in Chapter 6 when we considered the inclusion of a lurking variable as color in a scatterplot. Both the bdims (body measurements) and the penguins data sets showed examples of the strength and even the direction of correlations changing when considering a lurking variable.\n\n\nExercise 11\nLook at the contingency tables with counts. Focus on the four departments you identified in the exercise above (where female admission rates were higher than male admission rates). What is true of the total number of male and female applicants for those four department (and not for the other two departments)?\n\nPlease write up your answer here.\n\n\n\nExercise 12(a)\nNow create a contingency table with percentages that uses Admit for the row variable and Dept as the column variable.\n\n\n# Add code here to create a contingency table\n# with percentages for Dept and Admit\n\n\n\n\nExercise 12(b)\nAccording to the contingency table above, which two departments were (by far) the least selective? (In other words, which two departments admitted a vast majority of their applicants?)\n\nPlease write up your answer here.\n\n\n\nExercise 12(c)\nEarlier, you identified four departments that had higher admission rates for females. These were the same departments in which male applicants outnumbered female applicants. But for which two departments was the difference between the number of male and female applicants the largest?\n\nPlease write up your answer here.\n\n\nYour work in the previous exercises begins to paint a picture that explains what’s going on with this “paradox.” Males applied in much greater numbers to a few departments with high acceptance rates. As a result, more male students overall got in to graduate school. Females applied in greater numbers to departments that were more selective. Overall, then, fewer females got in to graduate school. But on a department-by-department basis, female applicants were usually more likely to get accepted.\nNone of this suggests that sexism fails to exist. It doesn’t even prove that sexism wasn’t a factor in some departmental admission procedures. What it does suggest is that when we don’t take into account possible lurking variables, we run the risk of oversimplifying issues that are potentially complex.\nIn our analysis of the UC Berkeley data, we’ve exhausted all the variables available to us in the data set. There remains the potential for unmeasured confounders, or variables that could still act as lurking variables, but we have no idea about them because they aren’t in our data. This is an unavoidable peril of working with observational data. If we aren’t careful to “control” for a reasonable set of possible lurking variables, we must be very careful when trying to make broad conclusions.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#conclusion",
    "href": "09-intro_to_randomization_2-web.html#conclusion",
    "title": "9  Introduction to randomization, Part 2",
    "section": "9.11 Conclusion",
    "text": "9.11 Conclusion\nHere we used randomization to explore the idea of two variables being independent or associated. When we assume they are independent, we can explore the sampling variability of the differences that could occur by pure chance alone. We expect the difference to be zero, but we know that randomness will cause the simulated differences to have a range of values. Is the difference in the observed data far away from zero? In that case, we can say we have evidence that the variables are not independent; in other words, it is more likely that our variables are associated.\nAs we’ve pointed out before, even when we have evidence of an association between variables, we always need to be careful about stating conclusions. Sometimes our conclusions are misleading, for example, when we fail to consider the effect of lurking/confounding variables in the analysis.\n\n9.11.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "09-intro_to_randomization_2-web.html#footnotes",
    "href": "09-intro_to_randomization_2-web.html#footnotes",
    "title": "9  Introduction to randomization, Part 2",
    "section": "",
    "text": "Rosen B and Jerdee T. 1974. Influence of sex role stereotypes on personnel decisions. Journal of Applied Psychology 59(1):9-14.↩︎",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Introduction to randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html",
    "href": "10-hypothesis_testing_with_randomization_1-web.html",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "",
    "text": "10.1 Introduction\nUsing a sample to learn something about a population is called “statistical inference.” In this chapter, we’ll learn about one form of statistical inference called “hypothesis testing.” The focus will be on walking through the example the last chapter, “Introduction to randomization, Part 2,” and recasting it here as a formal hypothesis test.\nThere are very few new R commands here, but there are many new ideas that will require careful reading. You are not expected to be an expert on hypothesis testing after this one chapter. However, within the next few chapters, as we learn more about hypothesis testing and work through many more examples, the hope is that you will begin to assimilate and internalize the logic of inference and the steps of a hypothesis test.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#introduction",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#introduction",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "",
    "text": "10.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n10.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/10-hypothesis_testing_with_randomization_1.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n10.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.\n\n\n10.1.4 Load packages\nWe load tidyverse and janitor to access the usual commands. We’ll continue to explore the infer package for investigating statistical claims. We load the openintro package to access the sex_discrimination data (the one with the male bank managers promoting male files versus female files).\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#our-research-question",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#our-research-question",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.2 Our research question",
    "text": "10.2 Our research question\nWe return to the sex discrimination experiment from the last chapter. We are interested in finding out if there is an association between the recommendation to promote a candidate for branch manager and the gender listed on the file being evaluated by the male bank manager.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#hypothesis-testing",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#hypothesis-testing",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.3 Hypothesis testing",
    "text": "10.3 Hypothesis testing\nThe approach we used in “Introduction to randomization, Part 2” was to assume that the two variables decision and sex were independent. From that assumption, we were able to compare the observed difference in promotion percentages between males and females from the actual data to the distribution of random values obtained by randomization. When the observed difference was far enough away from zero, we concluded that the assumption of independence was probably false, giving us evidence that the two variables were associated after all.\nThis logic is formalized into a sequence of steps known as a hypothesis test. In this section, we will introduce a rubric for conducting a full and complete hypothesis test for the sex discrimination example. (This rubric also appears in the Appendix. If you need the rubric as a file, you can also download copies either as a .qmd file here or as an html file here.)\nA hypothesis test can be organized into five parts:\n\nExploratory data analysis\nHypotheses\nModel\nMechanics\nConclusion\n\nBelow, I’ll address each of these steps.\n\n10.3.1 Exploratory data analysis\nBefore we can answer questions using data, we need to understand our data.\nMost data sets come with some information about the provenance and structure of the data. (Often this is called “metadata.”) Data provenance is the story of how the data was collected and for what purpose. Together with some information about the types of variables recorded, this is the who, what, when, where, why, and how. Without context, data is just a bunch of letters and numbers. You must understand the nature of the data in order to use the data. Information about the structure of the data is often recorded in a “code book.”\nFor data that you collect yourself, you’ll already know all about it, although should probably write that stuff down in case other people want to use your data (or in case “future you” wants to use the data). For other data sets, you hope that other people have recorded information about how the data was collected and what is described in the data. When working with data sets in R as we do for these chapters, we’ve already seen that there are help files—sometimes more or less helpful. In some cases, you’ll need to go beyond the brief explanations in the help file to investigate the data provenance. And for files we download from other places on the internet, we may have a lot of work to do.\n\nExercise 1\nWhat are some ethical issues you might want to consider when looking into the provenance of data? Have a discussion with a classmate and/or do some internet sleuthing to see if you can identify one or two key issues that should be considered before you access or analyze data.\n\nPlease write up your answer here.\n\n\nFor exploring the raw data in front of us, we can use commands like View from the Console to see the data in spreadsheet form, although if we’re using Quarto documents, we can just type the name of the data frame in a code chunk and run it to print the data in a form we can navigate and explore. There is also glimpse to explore the structure of the data (the variables and how they’re coded), as well as other summary functions to get a quick sense of the variables.\nSometimes you have to prepare your data for analysis. A common example is converting categorical variables that should be coded as factor variables, but often are coded as character vectors, or are coded numerically (like “1” and “0” instead of “Yes” and “No”). Sometimes, data is missing. Sometimes, missing data is coded unusually (like “999”) and that has to be fixed before trying to calculate statistics. “Cleaning” data in the real world is often a task that takes more time than analyzing it!\nFinally, once the data is in a suitably tidy form, we can use visualizations like tables, graphs, and charts to understand the data better. Often, there are conditions about the shape of our data that have to be met before inference is appropriate, and this step can help diagnose problems that could arise in the inferential procedure. This is a good time to look for outliers, for example.\n\n\n\n10.3.2 Hypotheses\nWe are trying to ask some question about a population of interest. However, all we have in our data is a sample of that population. The word inference comes from the verb “infer”: we are trying to infer what might be true of a population just from examining a sample. It’s also possible that our question involves comparing two or more populations to each other. In this case, we’ll have multiple samples, one from each of our populations. For example, in our sex discrimination example, we are comparing two populations: male bank managers who consider male files for promotion, and male bank managers who consider female files for promotion. Our data gives us two samples who form only a part of the larger populations of interest.\nTo convince our audience that our analysis is correct, it makes sense to take a skeptical position. If we are trying to prove that there is an association between promotion and sex, we don’t just declare it to be so. We start with a “null hypothesis,” or an expression of the belief that there is no association. A null hypothesis always represents the “default” position that a skeptic might take. It codifies the idea that “there’s nothing to see here.”\nOur job is to gather evidence to show that there is something interesting going on. The statement of interest to us is called the “alternative hypothesis.” This is usually the thing we’re trying to prove related to our research question.\nWe can perform one-sided tests or two-sided tests. A one-sided test is when we have a specific direction in mind for the effect. For example, if we are trying to prove that male files are more likely to be promoted than female files, then we would perform a one-sided test. On the other hand, if we only care about proving an association, then male files could be either more likely or less likely to be promoted than female files. (This is contrasted to the null that states that male files are equally likely to be promoted as female files.) If it seems weird to run a two-sided test, keep in mind that we want to give our statistical analysis a chance to prove an association regardless of the direction of the association. Wouldn’t you be interested to know if it turned out that male files were, in fact, less likely to be promoted?\nYou can’t cheat and look at the data first. In a normal research study out there in the real world, you develop hypotheses long before you collect data. So you have to decide to do a one-sided or two-sided test before you have the luxury of seeing your data pointing in one direction or the other.\nRunning a two-sided test is often a good default option. Again, this is because our analysis will allow us to show interesting effects in any direction.\nWe typically express hypotheses in two ways. First, we write down full sentences that express in the context of the problem what our null and alternative hypotheses are stating. Then, we express the same ideas as mathematical statements. This translation from words to math is important as it gives us the connection to the quantitative statistical analysis we need to perform. The null hypothesis will always be that some quantity is equal to (=) the null value. The alternative hypothesis depends on whether we are conducting a one-sided test or a two-sided test. A one-sided test is mathematically saying that the quantity of interest is either greater than (&gt;) or less than (&lt;) the null value. A two-sided test always states that the quantity of interest is not equal to (\\(\\neq\\)) the null value. (Notice the math symbol enclosed in dollar signs in the previous sentence. In the HTML file, these symbols will appear correctly. In the Quarto document, you can hover the cursor anywhere between the dollar signs and the math symbol will show up. Alternatively, you can click somewhere between the dollar signs and hit Ctrl-Enter or Cmd-Enter, just like with inline R code.)\nThe most important thing to know is that the entire hypothesis test, up until you reach the conclusion, is conducted under the assumption that the null hypothesis is true. In other words, we pretend the whole time that our alternative hypothesis is false, and we carry out our analysis working under that assumption. This may seem odd, but it makes sense when you remember that the goal of inference is to try to convince a skeptic. Others will only believe your claim after you present evidence that suggests that the data is inconsistent with the claims made in the null.\n\n\n10.3.3 Model\nA model is an approximation—usually a simplification—of reality. In a hypothesis test, when we say “model” we are talking specifically about the “null model.” In other words, what is true about the population under the assumption of the null? If we sample from the population repeatedly, we find that there is some kind of distribution of values that can occur by pure chance alone. This is called the sampling distribution model. We have been learning about how to use randomization to understand the sampling distribution and how much sampling variability to expect, even when the null hypothesis is true.\nBuilding a model is contingent upon certain assumptions being true. We cannot usually demonstrate directly that these assumptions are conclusively met; however, there are often conditions that can be checked with our data that can give us some confidence in saying that the assumptions are probably met. For example, there is no hope that we can infer anything from our sample unless that sample is close to a random sample of the population. There is rarely any direct evidence of having a properly random sample, and often, random samples are too much to ask for. There is almost never such a thing as a truly random sample of the population. Nevertheless, it is up to us to make the case that our sample is as representative of the population as possible. Additionally, we have to know that our sample comprises less than 10% of the size of the population. The reasons for this are somewhat technical and the 10% figure is just a rough guideline, but we should think carefully about this whenever we want our inference to be correct.\nThose are just two examples. For the randomization tests we are running, those are the only two conditions we need to check. For other hypothesis tests in the future that use different types of models, we will need to check more conditions that correspond to the modeling assumptions we will need to make.\n\n\n10.3.4 Mechanics\nThis is the nitty-gritty, nuts-and-bolts part of a hypothesis test. Once we have a model that tells us how data should behave under the assumption of the null hypothesis, we need to check how our data actually behaved. The measure of where our data is relative to the null model is called the test statistic. For example, if the null hypothesis states that there should be a difference of zero between promotion rates for males and females, then the test statistic would be the actual observed difference in our data between males and females.\nOnce we have a test statistic, we can plot it in the same graph as the null model. This gives us a visual sense of how rare or unusual our observed data is. The further our test statistic is from the center of the null model, the more evidence we have that our data would be very unusual if the null model were true. And that, in turn, gives us a reason not to believe the null model. When conducting a two-sided test, we will actually graph locations on both sides of the null value: the test statistic on one side of the null value and a point the same distance on the other side of the null value. This will acknowledge that we’re interested in evidence of an effect in either direction.\nFinally, we convert the visual evidence explained in the previous paragraph to a number called a P-value. This measures how likely it is to see our observed data—or data even more extreme—under the assumption of the null. A small P-value, then, means that if the null were really true, we wouldn’t be very likely at all to see data like ours. That leaves us with little confidence that the null model is really true. (After all, we did see the data we gathered!) If the P-value is large—in other words, if the test statistic is closer to the middle of the null distribution—then our data is perfectly consistent with the null hypothesis. That doesn’t mean the null is true, but it certainly does not give us evidence against the null.\nA one-sided test will give us a P-value that only counts data more extreme than the observed data in the direction that we explicitly hypothesized. For example, if our alternative hypothesis was that male files are more likely to be promoted, then we would only look at the part of the model that showed differences with as many or more male promotions as our data showed. A two-sided P-value, by contrast, will count data that is extreme in either direction. This will include values on both sides of the distribution, which is why it’s called a two-sided test. Computationally, it is usually easiest to calculate the one-sided P-value and just double it.1\nRemember the statement made earlier that throughout the hypothesis testing process, we work under the assumption that the null hypothesis is true. The P-value is no exception. It tells us under the assumption of the null how likely we are to to see data at least as extreme (if not even more extreme) as the data we actually saw.\n\n\n10.3.5 Conclusion\nThe P-value we calculate in the Mechanics section allows us to determine what our decision will be relative to the null hypothesis. As explained above, when the P-value is small, that means we had data that would be very unlikely had the null been true. The sensible conclusion is then to “reject the null hypothesis.” On the other hand, if the data is consistent with the null hypothesis, then we “fail to reject the null hypothesis.”\nHow small does the P-value need to be before we are willing to reject the null hypothesis? That is a decision we have to make based on how much we are willing to risk an incorrect conclusion. A value that is widely used is 0.05; in other words, if \\(P &lt; 0.05\\) we reject the null, and if \\(P &gt; 0.05\\), we fail to reject the null. However, for situations where we want to be conservative, we could choose this threshold to be much smaller. If we insist that the P-value be less than 0.01, for example, then we will only reject the null when we have a lot more evidence. The threshold we choose is called the “significance level,” denoted by the Greek letter alpha: \\(\\alpha\\). The value of \\(\\alpha\\) must be chosen long before we compute our P-value so that we’re not tempted to cheat and change the value of \\(\\alpha\\) to suit our P-value (and by doing so, quite literally, move the goalposts). While there is nothing magical about an \\(\\alpha\\) of 0.05, this is a well-established (if arbitrary and somewhat meaningless) convention in most of the research world. Unless we state otherwise, always assume for purposes of the exercises in this book that we are using a significance level of \\(\\alpha = 0.05\\).\nNote that we never accept the null hypothesis. The hypothesis testing procedure gives us no evidence in favor of the null. All we can say is that the evidence is either strong enough to warrant rejection of the null, or else it isn’t, in which case we can conclude nothing. If we can’t prove the null false, we are left not knowing much of anything at all.\nThe phrases “reject the null” or “fail to reject the null” are very statsy. Your audience may not be statistically trained. Besides, the real conclusion you care about concerns the research question of interest you posed at the beginning of this process, and that is built into the alternative hypothesis, not the null. Therefore, we need some statement that addresses the alternative hypothesis in words that a general audience will understand. we recommend the following templates:\n\nWhen you reject the null, you can safely say, “We have sufficient evidence that [restate the alternative hypothesis].”\nWhen you fail to reject the null, you can safely say, “We have insufficient evidence that [restate the alternative hypothesis].”\n\nThe last part of your conclusion should be an acknowledgement of the uncertainty in this process. Statistics tries to tame randomness, but in the end, randomness is always somewhat unpredictable. It is possible that we came to the wrong conclusion, not because we made mistakes in our computation, but because statistics just can’t be right 100% of the time when randomness is involved. Therefore, we need to explain to our audience that we may have made an error.\nA Type I error is what happens when the null hypothesis is actually true, but our procedure rejects it anyway. This happens when we get an unrepresentative extreme sample for some reason. For example, perhaps there really is no association between promotion and sex. Even if that were true, we could accidentally survey a group of bank managers who—by pure chance alone—happen to recommend promotion more often for the male files. Our test statistic will be “accidentally” far from the null value, and we will mistakenly reject the null. Whenever we reject the null, we are at risk of making a Type I error. Given that we are conclusively stating a statistically discernible finding, if that finding is wrong, this is a false positive, a term that is synonymous with a Type I error. The significance level \\(\\alpha\\) discussed above is, in fact, the probability of making a Type I error. (If the null is true, we will still reject the null if our P-value happens to be less than \\(\\alpha\\).)\nOn the other hand, the null may actually be false, and yet, we may not manage to gather enough evidence to disprove it. This can also happen due to an unusual sample—a sample that doesn’t conform to the “truth”. But there are other ways this can happen as well, most commonly when you have a small sample size (which doesn’t allow you to prove much of anything at all) or when the effect you’re trying to measure exists, but is so small that it is hard to distinguish from no effect at all (which is what the null postulates). In these cases, we are at risk of making a Type II error. Anytime we say that we fail to reject the null, we have to worry about the possibility of making a Type II error, also called a false negative.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#example",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#example",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.4 Example",
    "text": "10.4 Example\nBelow, we’ll model the process of walking through a complete hypothesis test, showing how we would address each step. Then, you’ll have a turn at doing the same thing for a different question. Unless otherwise stated, we will always assume a significance level of \\(\\alpha = 0.05\\). (In other words, we will reject the null if our computed P-value is less than 0.05, and we will fail to reject the null if our P-value is greater than or equal to 0.05.)\nThe research question is the following:\nIs there an association between decision and sex in hiring branch managers for banks in the 1970s?\nNote that the question does not ask, “Were bank managers more likely to promote male candidates?” That is a perfectly valid research question—and it was the question we asked in the last chapter where we first read about this experiment. But it is not the one we are asking here. We are simply asking, “Is there an association…?” An association can go either direction. Perhaps more male candidates were promoted. But it would also qualify as an association if more female candidates were promoted. The wording of the research question indicates that we will need to perform a two-sided test.\nNote that there is some mathematical formatting below. As mentioned before, this is done by enclosing such math in dollar signs. Don’t worry too much about the syntax; just mimic what you see in the example.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#exploratory-data-analysis-1",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#exploratory-data-analysis-1",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.5 Exploratory data analysis",
    "text": "10.5 Exploratory data analysis\n\n10.5.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou can look at the help file by typing ?sex_discrimination at the Console. (However, do not put that command here in a code chunk. The Quarto document has no way of displaying a help file when it’s processed.) You can also type that into the Help tab in the lower-right panel in RStudio.\nThe help file doesn’t say too much, but there is a “Source” at the bottom. We can do an internet search for “Rosen Jerdee Influence of sex role stereotypes on personnel decisions”. As many academics articles on the internet are, this one is pay-walled, so we can’t read it for free. If you go to school or work for an institution with a library, though, you may be able to access articles through your library services. Talk to a librarian if you’d like to access research articles. As long as you have the citation details, librarians can often track down articles, and many are already accessible through library databases.\nIn this case, we can read the abstract for free. This tells us that the data we have is only one part of a larger set of experiments done.\nThis is also the place to comment on any ethical concerns you may have. For example, how was the data collected? Did the researchers follow ethical guidelines in the treatment of their subjects, like obtaining consent? Without accessing the full article, it’s hard to know in this case. But do your best in each data analysis task you have to try to find out as much as possible about the data.\nIn this section, we’ll also print the data set and use glimpse to summarize the variables.\n\nsex_discrimination\n\n\n  \n\n\n\n\nglimpse(sex_discrimination)\n\nRows: 48\nColumns: 2\n$ sex      &lt;fct&gt; male, male, male, male, male, male, male, male, male, male, m…\n$ decision &lt;fct&gt; promoted, promoted, promoted, promoted, promoted, promoted, p…\n\n\n\n\n10.5.2 Prepare the data for analysis.\nIn this section, we do any tasks required to clean the data. This will often involve using mutate, either to convert other variable types to factors, or compute additional variables using existing columns. It may involve using filter to analyze only one part of the data we care about.\nIf there is missing data, this is the place to identify it and decide if you need to address it before starting your analysis. It’s always important to check for missing data. It’s not always necessary to address it now as many of the R functions we use will ignore rows with missing data.\nThe easiest way to detect missing data is to try deleting rows that are missing some data with drop_na and see if the number of rows changes:\n\nsex_discrimination |&gt;\n  drop_na()\n\n\n  \n\n\n\nSince the result still has 48 rows, there are no missing values.\nThe sex_discimination data is already squeaky clean, so we don’t need to do anything here.\n\n\n10.5.3 Make tables or plots to explore the data visually.\nAs we have two categorical variables, a contingency table is a good way of visualizing the distribution of both variables together. (Don’t forget to include the marginal distribution and create two tables: one with counts and one with percentages!)\n\ntabyl(sex_discrimination, decision, sex) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\ntabyl(sex_discrimination, decision, sex) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\") |&gt;\n  adorn_pct_formatting()",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#hypotheses-1",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#hypotheses-1",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.6 Hypotheses",
    "text": "10.6 Hypotheses\n\n10.6.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThere are technically two samples of interest here. All the data comes from a group of 48 bank managers recruited for the study, but one group of interest are bank managers who are evaluating male files, and the other group of interest are bank managers who are evaluating female files.\nOne of the contingency tables above shows the sample sizes for each group in the marginal distribution along the bottom of the table (i.e., the column sums). There are 24 mangers with male files and 24 managers with female files.\nThe populations of interest are probably all bank managers evaluating male candidates and all bank managers evaluating female candidates, probably only in in the U.S. (where the two researchers were based) and only during the 1970s.\n\n\n10.6.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) There is no association between decision and sex in hiring branch managers for banks in the 1970s.\n\\(H_{A}:\\) There is an association between decision and sex in hiring branch managers for banks in the 1970s.\nNote: The null hypothesis is indicated by the symbol \\(H_{0}\\), often pronounced “H naught” or “H sub zero.” The alternative hypothesis is indicated by \\(H_{A}\\), pronounced “H sub A.” The alternative hypothesis is the claim that we’re interested in proving; it’s the statement that we want to make if the answer to the research question is “yes.”\n\n\n10.6.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: p_{promoted, male} - p_{promoted, female} = 0\\)\n\\(H_{A}: p_{promoted, male} - p_{promoted, female} \\neq 0\\)\nNote: This math looks very different in form and structure from the contextually meaningful full sentences above that just talk about “association.” We have to translate those sentences into something we can measure numerically. What would the numbers show if there were no association between decision and sex? If the null hypothesis were true, this would manifest as no difference between the proportion of males promoted and the proportion of females promoted. If the alternative hypothesis is true, there is a difference between these two proportions. The difference is not equal to zero.\nPay attention to the “success” condition (in this case, “promoted”). We could choose to measure either those promoted or those not promoted. The difference will be positive for one and negative for the other, so it really doesn’t matter which one we choose. Just make a choice and be consistent. Also pay close attention here to the order of the subtraction. Again, while it doesn’t matter conceptually, we need to make sure that the code we include later agrees with this order.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#model-1",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#model-1",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.7 Model",
    "text": "10.7 Model\n\n10.7.1 Identify the sampling distribution model.\nWe will randomize to simulate the sampling distribution.\n\n\n10.7.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom (for both groups)\n\nWe have no evidence that these are random samples of bank managers. We hope that they are representative. If the populations of interest are all bank managers in the U.S. evaluating either male candidates or female candidates, then we have some doubts as to how representative these samples are. It is likely that the bank managers were recruited from limited geographic areas based on the location of the researchers, and we know that geography could easily be a confounder for sex discrimination (because some areas of the country might be more prone to it than others). Despite our misgivings, we will proceed on with the analysis, but we will temper our expectations for grand, sweeping conclusions.\n\n10% (for both groups)\n\nRegardless of the intended populations, 24 bank managers evaluating male files and 24 bank managers evaluating female files are surely less than 10% of all bank managers under consideration from those respective populations.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#mechanics-1",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#mechanics-1",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.8 Mechanics",
    "text": "10.8 Mechanics\n\n10.8.1 Compute the test statistic.\nWe let infer do the work here:\n\nobs_diff_1 &lt;- sex_discrimination |&gt;\n  observe(decision ~ sex, success = \"promoted\",\n          stat = \"diff in props\", order = c(\"male\", \"female\"))\nobs_diff_1\n\n\n  \n\n\n\nNote: obs_diff_1 is a tibble, albeit a small one, having only one column and one row. That tibble is what we need to feed into the visualization later. However, for reporting the value by itself, we have to pull it out of the tibble. We will do this below using the pull function. See the inline code in the next subsection.\n\n\n10.8.2 Report the test statistic in context (when possible).\nThe observed difference in the proportion of promotion recommendations for male files versus female files is 0.2916667 (subtracting males minus females). Or, another way to say this: there is a 29.1666667% difference in the promotion rates between male files and female files.\nNote: it’s been a few chapters since we’ve seen inline code, so make sure you remember how it works. Inline code starts with a backtick followed by the letter r and a space. It ends with a backtick. Everything inside the two backticks must be valid R code. We should always check that our inline code works before moving on. We do this by placing the cursor somewhere between the two backticks and then hitting Ctrl-Enter (Cmd-Enter). Do that with both code chunks above to see that the codes works and generates the correct answer. If you get an error, fix it before moving on. Otherwise, the next place you’ll run into a problem is not until you go to “Render” the document. That will generate an error that is much more challenging to track down.\n\n\n10.8.3 Plot the null distribution.\n\nset.seed(9999)\ndecision_sex_test &lt;- sex_discrimination |&gt;\n  specify(decision ~ sex, success = \"promoted\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\ndecision_sex_test\n\n\n  \n\n\n\n\ndecision_sex_test |&gt;\n  visualize(bins = 9) +\n  shade_p_value(obs_stat = obs_diff_1, direction = \"two-sided\")\n\n\n\n\n\n\n\n\nNote: In this section, we will use the series of verbs from infer to generate all the information we need about the hypothesis test. The first code chunk will generate the null distribution (in this case, by simulating 1000 random repetitions of the permutation process). We call that output decision_sex_test here, but you’ll change that to another name for a different test. The recommended pattern is response_predictor_test.\nDon’t forget to set the seed. We are using randomization to permute the values of the predictor variable in order to break any association that might exist in the data. This will allow us to explore the sampling distribution created under the assumption of the null hypothesis.\nThe second code chunk will allow us to plot the null distribution visually. When you get to the visualize step, leave the number of bins out at first. (Just type visualize() with empty parentheses.) If you determine that the default binning is not optimal, you can add back bins and experiment with the number. We know from the previous chapter that 9 bins is good here.\nIn the shade_p_value command, be careful about two things:\n\nThe obs_stat argument is used to tell R where our data is located. We stored that above as the variable obs_diff_1. When you do an example on your own, this will need to change to a different value (like, maybe obs_diff_2).\nLook carefully at the direction. In the previous chapter, we used “greater” because our question was only about more males getting promoted. Here, though, we are conducting a two-sided test, so we have to change direction to “two-sided”.\n\nIn the output, you’ll note that there is light gray shading in both tails. This is because we are conducting a two-sided test, which means that we’re interested in values that are more extreme than our observed difference in both directions.\n\n\n10.8.4 Calculate the P-value.\n\nP_1 &lt;- decision_sex_test |&gt;\n  get_p_value(obs_stat = obs_diff_1, direction = \"two-sided\")\nP_1\n\n\n  \n\n\n\nNote: Again, be careful to watch for the two things mentioned above: 1. change obs_stat to match your data; 2. check that the direction is consistent with your choice of a one-sided (“greater” or “less”) and two-sided (“two-sided”) test.\nAs with the test statistic earlier, the P-value appears above in a 1x1 tibble. That’s fine for this step, but in the inline code below, we will need to use pull again to extract the value.\n\n\n10.8.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.048. If there were no association between decision and sex, there would be a 4.8% chance of seeing data at least as extreme as we saw.\nSome important things here:\n\nWe include an interpretation for our P-value. Remember that the P-value is the probability—under the assumption of the null hypothesis—of seeing results as extreme or even more extreme than the data we saw.\nThe P-value is less than 0.05 (just barely). Remember that as we talk about the conclusion in the next section of the rubric.\n\nTake a second to check that the inline code works. Put the cursor in both inline code chunks and hit Ctrl-Enter (Cmd-Enter). When you’re doing this on your own, don’t move on if you have errors in your inline code!",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#conclusion-1",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#conclusion-1",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.9 Conclusion",
    "text": "10.9 Conclusion\n\n10.9.1 State the statistical conclusion.\nWe reject the null hypothesis.\nNote: the only choices here are “We reject the null hypothesis” (if the P-value is less than the significance level \\(\\alpha\\), here 0.05) or “We fail to reject the null hypothesis” (if the P-value is greater than the significance level \\(\\alpha\\), here 0.05).\n\n\n10.9.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is sufficient evidence to suggest that there is an an association between decision and sex in hiring branch managers for banks in the 1970s.\nNote: the easiest thing to do here is just restate the alternative hypothesis. If we reject the null, then we have sufficient evidence for the alternative hypothesis. If we fail to reject the null, we have insufficient evidence for the alternative hypothesis. Either way, though, this contextually meaningful conclusion is all about the alternative hypothesis.\n\n\n10.9.3 Express reservations or uncertainty about the generalizability of the conclusion.\nWe have some reservations about how generalizable this conclusion is due to the fact that we are lacking information about how representative our samples of bank managers were. We also point out that this experiment was conducted in the 1970s, so its conclusions are not valid for today.\nNote: This would also be the place to point out any possible sources of bias or confounding that might be present, especially for observational studies.\n\n\n10.9.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nAs we rejected the null, we run the risk of committing a Type I error. It is possible that there is no association between decision and sex, but we’ve come across a sample in which male files were somehow more likely to be recommended for promotion.\n\nAfter writing up your conclusions and acknowledging the possibility of a Type I or Type II error, the hypothesis test is complete. (At least for now. In the future, we will add one more step of computing a confidence interval.)",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#more-on-one-sided-and-two-sided-tests",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#more-on-one-sided-and-two-sided-tests",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.10 More on one-sided and two-sided tests",
    "text": "10.10 More on one-sided and two-sided tests\nWe want to emphasize again the difference between conducting a one-sided versus a two-sided test. You may recall that in “Introduction to simulation, Part 2”, we calculated this:\n\nset.seed(9999)\nsex_discrimination |&gt;\n  specify(decision ~ sex, success = \"promoted\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\")) |&gt;\n  get_p_value(obs_stat = obs_diff_1, direction = \"greater\")\n\n\n  \n\n\n\nThe justification was that, back then, we already suspected that male files were more likely to be promoted, and it appears that our evidence (the test statistic, or our observed difference) was pretty far in that direction. (Actually, we may get a slightly different number each time. Remember that we are randomizing. Therefore, we won’t expect to get the exact same numbers each time.)\nBy way of contrast, in this chapter we computed the two-sided P-value:\n\nset.seed(9999)\nsex_discrimination |&gt;\n  specify(decision ~ sex, success = \"promoted\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\")) |&gt;\n  get_p_value(obs_stat = obs_diff_1, direction = \"two-sided\")\n\n\n  \n\n\n\nThe only change to the code is the word “two-sided” (versus “greater”) in the last line.\nOur P-value in this chapter is twice as large as it could have been if we had run a one-sided test.\nDoubling the P-value might mean that it no longer falls under the significance threshold \\(\\alpha = 0.05\\) (although in this case, we still came in under 0.05). This raises an obvious question: why use two-sided tests at all? If the P-values are higher, that makes it less likely that we will reject the null, which means we won’t be able to prove our alternative hypothesis. Isn’t that a bad thing?\nAs a matter of fact, there are many researchers in the world who do think it’s a bad thing, and routinely do things like use one-sided tests to give them a better chance of getting small P-values. But this is not ethical. The point of research is to do good science, not prove your pet theories correct. There are many incentives in the world for a researcher to prove their theories correct (money, awards, career advancement, fame and recognition, legacy, etc.), but these should be secondary to the ultimate purpose of advancing knowledge. Sadly, many researchers out there have these priorities reversed. I do not claim that researchers set out to cheat; I suspect that the vast majority of researchers act in good faith. Nevertheless, the rewards associated with “successful” research cause cognitive biases that are hard to overcome. And “success” is often very narrowly defined as research that produces small P-values.\nA better approach is to be conservative. For example, a two-sided test is not only more conservative because it produces higher P-values, but also because it answers a more general question. That is, it is scientifically interesting when an association goes in either direction (e.g. more male promotions, but also possibly more female promotions). This is why we recommended above using two-sided tests by default, and only using a one-sided test when there is a very strong research hypothesis that justifies it.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#a-reminder-about-failing-to-reject-the-null",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#a-reminder-about-failing-to-reject-the-null",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.11 A reminder about failing to reject the null",
    "text": "10.11 A reminder about failing to reject the null\nIt’s also important to remember that when we fail to reject the null hypothesis, we are not saying that the null hypothesis is true. Neither are we saying it’s false. Failure to reject the null is really a failure to conclude anything at all. But rather than looking at it as a failure, a more productive viewpoint is to see it as an opportunity for more research, possibly with larger sample sizes. We never conclude that we have evidence in favor of the null hypothesis! At best, our data might be consistent with the null hypothesis. But that is not the same thing as proving the null hypothesis.\nEven when we do reject the null, it is important not to see that as the end of the conversation. Too many times, a researcher publishes a “statistically significant” finding in a peer-reviewed journal, and then that result is taken as “Truth.” We should, instead, view statistical inference as incremental knowledge that works slowly to refine our state of scientific knowledge, as opposed to a collection of “facts” and “non-facts.”\nIn fact, we won’t use the term “statistically significant” anywhere in this book. The word “significant” has the unfortunate connotation of “important.” A statistical finding might meet the threshold for rejecting the null hypothesis without being a “large” or “important” finding. Instead, we will refer to results as “statistically discernible” when we reject the null hypothesis. We can only conclude that our data is mathematically unlikely given the null hypothesis, which means we can “discern” that the null hypothesis is not likely to be true.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#your-turn",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#your-turn",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.12 Your turn",
    "text": "10.12 Your turn\nNow it’s your turn to run a complete hypothesis test. Determine if males were admitted to the top six UC Berkeley grad programs at a higher rate than females. For purposes of this exercise, we will not take into account the Dept variable as we did in the last chapter when we discussed Simpson’s Paradox. But as that is a potential source of confounding, be sure to mention it in the part of the rubric where you discuss reservations about your conclusion.\nAs always, use a significance level of \\(\\alpha = 0.05\\).\nHere is the data import:\n\nucb_admit &lt;- read_csv(\"https://vectorposse.github.io/intro_stats/data/ucb_admit.csv\",\n                      col_types = list(\n                        Admit = col_factor(),\n                        Gender = col_factor(),\n                        Dept = col_factor()))\n\nWe have copied the template below. You need to fill in each step. Some of the steps will be the same or similar to steps in the example above. It is perfectly okay to copy and paste R code, making the necessary changes. It is not okay to copy and paste text. You need to put everything into your own words. Also, don’t copy and paste the parts that are labeled as “Notes”. That is information to help you understand each step, but it’s not part of the statistical analysis itself.\nThe template below is exactly the same as in the Appendix up to the part about confidence intervals which we haven’t learned yet.\nBe sure to use new variable names everywhere! The test statistic should be called obs_diff_2 so you don’t mess up the value of obs_diff_1 above. Same with the P-value: use P_2 in place of P_1. The name of the test should also change. I might suggest admit_gender_test in line with our convention for naming these things response_predictor_test.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\nPlease write up your answer here.\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n# Since we know you will need to produce two contingency tables, \n# here's another code chunk for the second one.\n# In the future, though, you will need to know when to create \n# extra code chunks on your own.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\n\nCondition 1\n\nCheck the condition here.\n\nCondition 2\n\nCheck the condition here.\n\n\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n# Don't forget to use obs_diff_2 instead.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here. (Use inline code and check that it works before moving on!)\n\n\n\nPlot the null distribution.\n\n\nset.seed(9999)\n# Add code here to generate the null distribution.\n# Run 1000 reps like in the earlier example.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n# Don't forget to use P_2 instead.\n\nNote: A P-value can never be exactly zero. It might be true that in 1000 simulations, none resulted in a value more extreme than the data. But it’s never impossible to get any particular extreme value by chance alone. When P-values are very small, the convention is to say \\(P &lt; 0.001\\).\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here. If you tried to use inline code, the P-value would be reported here as 0, which is not really correct. So you should not use inline code for this part.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#conclusion-3",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#conclusion-3",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "10.13 Conclusion",
    "text": "10.13 Conclusion\nA hypothesis test is a formal set of steps—a procedure, if you will—for implementing the logic of inference. We take a skeptical position and assume a null hypothesis in contrast to the question of interest, the alternative hypothesis. We build a model under the assumption of the null hypothesis to see if our data is consistent with the null (in which case we fail to reject the null) or unusual/rare relative to the null (in which case we reject the null). We always work under the assumption of the null so that we can convince a skeptical audience using evidence. We also take care to acknowledge that statistical procedures can be wrong, and not to put too much credence in the results of any single set of data or single hypothesis test.\n\n10.13.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "10-hypothesis_testing_with_randomization_1-web.html#footnotes",
    "href": "10-hypothesis_testing_with_randomization_1-web.html#footnotes",
    "title": "10  Hypothesis testing with randomization, Part 1",
    "section": "",
    "text": "This is not technically the most mathematically appropriate thing to do, but it’s a reasonable approximation in many common situations.↩︎",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 1</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html",
    "href": "11-hypothesis_testing_with_randomization_2-web.html",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "",
    "text": "11.1 Introduction\nNow that we have learned about hypothesis testing, we’ll explore a different example. Although the rubric for performing the hypothesis test will not change, the individual steps will be implemented in a different way due to the research question we’re asking and the type of data used to answer it.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#introduction",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#introduction",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "",
    "text": "11.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"MASS\")\n\n\n11.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/11-hypothesis_testing_with_randomization_2.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n11.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#load-packages",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#load-packages",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.2 Load packages",
    "text": "11.2 Load packages\nIn additional to tidyverse and janitor, we load the MASS package to access the melanoma data on patients in Denmark with malignant melanoma, and the infer package for inference tools.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(infer)",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#our-research-question",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#our-research-question",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.3 Our research question",
    "text": "11.3 Our research question\nWe know that certain types of cancer are more common among females or males. Is there a sex bias among patients with malignant melanoma?\nLet’s jump into the “Exploratory data analysis” part of the rubric first.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#exploratory-data-analysis",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#exploratory-data-analysis",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.4 Exploratory data analysis",
    "text": "11.4 Exploratory data analysis\n\n11.4.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou can look at the help file by typing ?Melanoma at the Console. However, do not put that command here in a code chunk. The Quarto document has no way of displaying a help file when it’s processed. Be careful: there’s another data set called melanoma with a lower-case “m”. Make sure you are using an uppercase “M”.\nThere is a reference at the bottom of the help file.\n\nExercise 1\nAt the bottom of the help file, there is a “Source” listed (by authors Andersen, Borgan, Gill, and Keiding). Look up this reference on the internet. How can you tell that this reference is not, in fact, a direct reference to a study of cancer patients in Denmark?\n\nPlease write up your answer here.\n\n\nFrom the exercise above, we can see that it will be very difficult, if not impossible, to discover anything useful about the true provenance of the data (unless you happen to have a copy of that textbook, which in theory provided another more primary source). We will not know, for example, how the data was collected and if the patients consented to having their data shared publicly. The data is suitably anonymized, though, so we don’t have any serious concerns about the privacy of the data. Having said that, if a condition is rare enough, a dedicated research can often “de-anonymize” data by cross-referencing information in the data to other kinds of public records. But melanoma is not particularly rare. At any rate, all we can do is assume that the textbook authors obtained the data from a source that used proper procedures for collecting and handling the data.\nWe print the data frame:\n\nMelanoma\n\n\n  \n\n\n\nUse glimpse to examine the structure of the data:\n\nglimpse(Melanoma)\n\nRows: 205\nColumns: 7\n$ time      &lt;int&gt; 10, 30, 35, 99, 185, 204, 210, 232, 232, 279, 295, 355, 386,…\n$ status    &lt;int&gt; 3, 3, 2, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, …\n$ sex       &lt;int&gt; 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, …\n$ age       &lt;int&gt; 76, 56, 41, 71, 52, 28, 77, 60, 49, 68, 53, 64, 68, 63, 14, …\n$ year      &lt;int&gt; 1972, 1968, 1977, 1968, 1965, 1971, 1972, 1974, 1968, 1971, …\n$ thickness &lt;dbl&gt; 6.76, 0.65, 1.34, 2.90, 12.08, 4.84, 5.16, 3.22, 12.88, 7.41…\n$ ulcer     &lt;int&gt; 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n\n\n\n\n\n11.4.2 Prepare the data for analysis.\nIt appears that sex is coded as an integer. You will recall that we need to convert it to a factor variable since it is categorical, not numerical.\n\nExercise 2\nAccording to the help file, which number corresponds to which sex?\n\nPlease write up your answer here.\n\n\nWe can convert a numerical variable a couple of different ways. In Chapter 3, we used the as_factor command. That command works fine, but it doesn’t give you a way to change the levels of the variable. In other words, if we used as_factor here, we would get a factor variable that still contained zeroes and ones.\nInstead, we will use the factor command. It allows us to manually relabel the levels. The levels argument requires a vector (with c) of the current levels, and the labels argument requires a vector listing the new names you want to assign, as follows:\n\nMelanoma &lt;- Melanoma |&gt;\n  mutate(sex_fct = factor(sex,\n                          levels = c(0, 1),\n                          labels = c(\"female\", \"male\")))\nglimpse(Melanoma)\n\nRows: 205\nColumns: 8\n$ time      &lt;int&gt; 10, 30, 35, 99, 185, 204, 210, 232, 232, 279, 295, 355, 386,…\n$ status    &lt;int&gt; 3, 3, 2, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, …\n$ sex       &lt;int&gt; 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, …\n$ age       &lt;int&gt; 76, 56, 41, 71, 52, 28, 77, 60, 49, 68, 53, 64, 68, 63, 14, …\n$ year      &lt;int&gt; 1972, 1968, 1977, 1968, 1965, 1971, 1972, 1974, 1968, 1971, …\n$ thickness &lt;dbl&gt; 6.76, 0.65, 1.34, 2.90, 12.08, 4.84, 5.16, 3.22, 12.88, 7.41…\n$ ulcer     &lt;int&gt; 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ sex_fct   &lt;fct&gt; male, male, male, female, male, male, male, female, male, fe…\n\n\nYou should check to make sure the first few entries of sex_fct agree with the numbers in the sex variable according to the labels explained in the help file. (If not, it means that you put the levels in one order and the labels in a different order.)\nWe should also check if there are any rows with missing data:\n\nMelanoma |&gt;\n  drop_na(sex_fct)\n\n\n  \n\n\n\nThere are still 205 rows, so that means that no data is missing from the sex_fct variable.\n\n\n\n11.4.3 Make tables or plots to explore the data visually.\nWe only have one categorical variable, so we only need a frequency table. Since we are concerned with proportions, we’ll also look at a relative frequency table which the tabyl command provides for free.\n\ntabyl(Melanoma, sex_fct) |&gt;\n  adorn_totals()",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#the-logic-of-inference-and-randomization",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#the-logic-of-inference-and-randomization",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.5 The logic of inference and randomization",
    "text": "11.5 The logic of inference and randomization\nThis is a good place to pause and remember why statistical inference is important. There are certainly more females than males in this data set. So why don’t we just show the table above, declare females are more likely to have malignant melanoma, and then go home?\nThink back to coin flips. Even though there was a 50% chance of seeing heads, did that mean that exactly half of our flips came up heads? No. We have to acknowledge sampling variability: even if the truth were 50%, when we sample, we could accidentally get more or less than 50%, just by pure chance alone. Perhaps these 205 patients just happen to have more females than average.\nThe key, then, is to figure out if 61.5% is a “statistically discernible” difference from 50%. In other words, is it possible that a number like 61.5% (or one even more extreme) could easily come about from random chance? Or is 61.5% far enough away from 50% that it is not likely to be a random fluke?1\nAs we know from the last chapter, we can run a formal hypothesis test to find out. As we do so, make note of the things that are the same and the things that have changed from the last hypothesis tests you ran. For example, we are not comparing two groups anymore. We have one group of patients, and all we’re doing is measuring the percentage of this group that is female. It’s tempting to think that we’re comparing males and females, but that’s not the case. We are not using sex to divide our data into two groups for the purpose of exploring whether some other variable differs between men and women. We just have one sample. “Female” and “Male” are simply categories in a single categorical variable. Also, because we are only asking about one variable (sex_fct), the mathematical form of the hypotheses will look a little different.\nBecause this is no longer a question about two variables being independent or associated, the “permuting” idea we’ve been using no longer makes sense. So what does make sense?\nIt helps to start by figuring out what our null hypothesis is. Remember, our question of interest is whether there is a sex bias in malignant melanoma. In other words, are there more or fewer females than males with malignant melanoma? As this is our research question, it will be the alternative hypothesis. So what is the null? What is the “default” situation in which nothing interesting is going on? Well, there would be no sex bias. In other words, there would be the same number of females and males with malignant melanoma. Or another way of saying that—with respect to the “success” condition of being female—is that females comprise 50% of all patients with malignant melanoma.\nOkay, given our philosophy about the null hypothesis, let’s take the skeptical position and assume that, indeed, 50% of all malignant melanoma patients in our population are female. Then let’s take a sample of 205 patients. We can’t get exactly 50% females from a sample of 205 (that would be 102.5 females!), so what numbers can we get?\nRandomization will tell us. What kind of randomization? As we come across each patient in our sample, there is a 50% chance of them being female. So instead of sampling real patients, what if we just flipped a coin? A simulated coin flip will come up heads just as often as our patients will be female under the assumption of the null.\nThis brings us full circle, back to the first randomization idea we explored. We can simulate coin flips, graph our results, and calculate a P-value. More specifically, we’ll flip a coin 205 times to represent sampling 205 patients. Then we’ll repeat this procedure a bunch of times and establish a range of plausible percentages that can come about by chance from this procedure. Instead of doing coin flips with the rflip command as we did then, however, we’ll use our new favorite friend, the infer package.\nLet’s dive back into the remaining steps of the formal hypothesis test.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#hypotheses",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#hypotheses",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.6 Hypotheses",
    "text": "11.6 Hypotheses\n\n11.6.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of 205 patients from Denmark with malignant melanoma. Our population is presumably all patients with malignant melanoma, although in checking conditions below, we’ll take care to discuss whether patients in Denmark are representative of patients elsewhere.\n\n\n11.6.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) Half of malignant melanoma patients are female.\n\\(H_{A}:\\) There is a sex bias among patients with malignant melanoma (meaning that females are either over-represented or under-represented).\n\n\n11.6.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: p_{female} = 0.5\\)\n\\(H_{A}: p_{female} \\neq 0.5\\)",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#model",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#model",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.7 Model",
    "text": "11.7 Model\n\n11.7.1 Identify the sampling distribution model.\nWe will randomize to simulate the sampling distribution.\n\n\n11.7.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nAs mentioned above, these 205 patients are not a random sample of all people with malignant melanoma. We don’t even have any evidence that they are a random sample of melanoma patients in Denmark. Without such evidence, we have to hope that these 205 patients are representative of all patients who have malignant melanoma. Unless there’s something special about Danes in terms of their genetics or diet or something like that, one could imagine that their physiology makes them just as susceptible to melanoma as anyone else. More specifically, though, our question is about females and males getting malignant melanoma. Perhaps there are more female sunbathers in Denmark than in other countries. That might make Danes unrepresentative in terms of the gender balance among melanoma patients. We should be cautious in interpreting any conclusion we might reach in light of these doubts.\n\n10%\n\nWhether in Denmark or not, given that melanoma is a fairly common form of cancer, we assume 205 is less than 10% of all patients with malignant melanoma.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#mechanics",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#mechanics",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.8 Mechanics",
    "text": "11.8 Mechanics\n\n11.8.1 Compute the test statistic.\n\nfemale_prop &lt;- Melanoma |&gt;\n  observe(response = sex_fct, success = \"female\",\n          stat = \"prop\")\nfemale_prop\n\n\n  \n\n\n\nNote: Pay close attention to the difference in the observe command above. Unlike in the last chapter, we don’t have any tildes. That’s because there are not two variables involved. There is only one variable, which observe needs to see as the “response” variable. (Don’t forget to use the factor version sex_fct and not sex!) We still have to specify a “success” condition. Since the hypotheses are about measuring females, we have to tell observe to calculate the proportion of females. Finally, the stat is no longer “diff in props” There are not two proportions with which to find a difference. There is just one proportion, hence, prop.\n\n\n11.8.2 Report the test statistic in context (when possible).\nThe observed percentage of females with melanoma in our sample is 61.4634146%.\nNote: As explained in the last chapter, we have to use pull to pull out the number from the female_prop tibble.\n\n\n11.8.3 Plot the null distribution.\n\nset.seed(42)\nmelanoma_test &lt;- Melanoma |&gt;\n  specify(response = sex_fct, success = \"female\") |&gt;\n  hypothesize(null = \"point\", p = 0.5) |&gt;\n  generate(reps = 1000, type = \"draw\") |&gt;\n  calculate(stat = \"prop\")\nmelanoma_test\n\n\n  \n\n\n\n\nmelanoma_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = female_prop, direction = \"two-sided\")\n\n\n\n\n\n\n\n\nNote: There will always be two code chunks in this step. The first performs the simulation (1000 “coin flips”). The output is a list of 1000 simulated proportions. This is the sampling distribution. It represents possible sample proportions of females with melanoma under the assumption that the null is true. In other words, even if the “true” proportion of female melanoma patients were 0.5, these are all values that can result from random samples.\nIn the hypothesize command, we use “point” to tell infer that we want the null to be centered at the point 0.5. In the generate command, we need to specify the type as “draw” instead of “permute”. We are not shuffling any values here; we are “drawing” values from a probability distribution like coin flips. Everything else in the command is pretty self-explanatory.\nThe second code chunk creates a histogram of the simulated values under the assumption of the null. The value of our test statistic, female_prop (0.6146341) appears in the right tail as a red line. Although the line only appears on the right, keep in mind that we are conducting a two-sided test, so we are interested in values more extreme than the red line on the right, but also more extreme than a similarly placed (invisible) line on the left.\n\nExercise 3\nThe red line sits at about 0.615. If you were to draw a red line on the above histogram that represented a value equally distant from 0.5, but on the left instead of the right, where would that line be? Do a little arithmetic to figure it out and show your work.\n\nPlease write up your answer here.\n\n\n\n\n11.8.4 Calculate the P-value.\n\nP1 &lt;- melanoma_test |&gt;\n  get_p_value(obs_stat = female_prop, direction = \"two-sided\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an approximation\nbased on the number of `reps` chosen in the `generate()` step.\nℹ See `get_p_value()` (`?infer::get_p_value()`) for more information.\n\nP1\n\n\n  \n\n\n\nThe P-value appears to be zero. If we were to report this using inline R code, we would say that the P-value was 0.\nIndeed, among the 1000 simulated values, we saw none that exceeded 0.615 and none that were less than 0.385. However, a true P-value can never be zero. If you did millions or billions of simulations (please don’t try!), surely there would be one or two with even more extreme values. In cases when the P-value is really, really tiny, it is traditional to report \\(P &lt; 0.001\\). It is incorrect to say \\(P = 0\\).\n\n\n11.8.5 Interpret the P-value as a probability given the null.\n\\(P &lt; 0.001\\). If there were no sex bias in malignant melanoma patients, there would be less than a 0.1% chance of seeing a percentage of females at least as extreme as the one we saw in our data.\nNote: Don’t forget to interpret the P-value in a contextually meaningful way. The P-value is the probability under the assumption of the null hypothesis of seeing data at least as extreme as the data we saw. In this context, that means that if we assume 50% of patients are female, it would be extremely rare to see more than 61.5% or less than 38.5% females in a sample of size 205.\nAlso note that if the P-value were not listed as 0, we would want to use inline code to report our sentence: “If there were no sex bias in malignant melanoma patients, there would be a 0% chance of seeing a percentage of females at least as extreme as the one we saw in our data.” But this sentence is incorrect here because it mistakenly calculates the P-value as if it were exactly 0 (which it never can be).",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#conclusion",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#conclusion",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.9 Conclusion",
    "text": "11.9 Conclusion\n\n11.9.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n11.9.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is sufficient evidence that there is a sex bias in patients who suffer from malignant melanoma.\n\n\n11.9.3 Express reservations or uncertainty about the generalizability of the conclusion.\nWe have no idea how these patients were sampled. Are these all the patients in Denmark with malignant melanoma over a certain period of time? Were they part of a convenience sample? As a result of our uncertainly about the sampling process, we can’t be sure if the results generalize to a larger population, either in Denmark or especially outside of Denmark.\n\nExercise 4\nCan you find on the internet any evidence that females do indeed suffer from malignant melanoma more often than males (not just in Denmark, but anywhere)?\n\nPlease write up your answer here.\n\n\n\n\n11.9.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nAs we rejected the null, we run the risk of making a Type I error. If we have made such an error, that would mean that patients with malignant melanoma are equally likely to be male or female, but that we got a sample with an unusual number of female patients.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#your-turn",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#your-turn",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.10 Your turn",
    "text": "11.10 Your turn\nPast studies have shown that the presence of ulcerated tumors (tumors that break through the skin on top of the melanoma) are more dangerous, significantly increasing the risk of death from melanoma. There is some disagreement among studies, however, about the rate at which melanoma ulcerations occur. A review article from 2022 cited another study that estimated the ulceration rate to be 18%.2 But that number was based on a sample of patients suffering from melanoma of varying degrees of severity, not just patients diagnosed with malignant melanoma.\nDetermine if the percentage of patients in Denmark with malignant melanoma who also have an ulcerated tumor (measured with the ulcer variable) is significantly different from 18%. (Keep in mind that when you refer back to the example above, you will need to modify the null hypothesis value to reflect that it is now 18% and not 50%!)\nAs before, you have the outline of the rubric for inference below. Some of the steps will be the same or similar to steps in the example above. It is perfectly okay to copy and paste R code, making the necessary changes. It is not okay to copy and paste text. You need to put everything into your own words.\nThe template below is exactly the same as in the appendix (Rubric for inference) up to the part about confidence intervals which we haven’t learned yet.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\nPlease write up your answer here.\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\nset.seed(42)\n# Add code here to simulate the null distribution.\n# Run 1000 simulations like in the earlier example.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n# Don't forget to use P_2 instead.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#conclusion-2",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#conclusion-2",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "11.11 Conclusion",
    "text": "11.11 Conclusion\nNow you have seen two fully-worked examples of hypothesis tests using randomization, and you have created two more examples on your own. Hopefully, the logic of inference and the process of running a formal hypothesis test are starting to make sense.\nKeep in mind that the outline of steps will not change. However, the way each step is carried out will vary from problem to problem. Not only does the context change (one example involved sex discrimination, the other melanoma patients), but the statistics you compute also change (one example compared proportions from two samples and the other only had one proportion from a single sample). Pay close attention to the research question and the data that will be used to answer that question. That will be the only information you have to help you know which hypothesis test applies.\n\n11.11.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "11-hypothesis_testing_with_randomization_2-web.html#footnotes",
    "href": "11-hypothesis_testing_with_randomization_2-web.html#footnotes",
    "title": "11  Hypothesis testing with randomization, Part 2",
    "section": "",
    "text": "Most statisticians will use the term “statistically significant” instead of “statistically discernible.” The problem with “statistically significant” is that the word “significant” is often synonymous with “important.” An 11.5 % increase over 50% might be clinically important, or it might not be, depending on the context of the problem. All we can say from a hypothesis test is whether it is mathematically probable to see a number like 61.5% (or more extreme) if the null value of 50% were true. That mathematical fact does not say anything about whether the measurement is a clinically important one. With large enough sample sizes, even minor deviations from the null value will be statistically discernible.↩︎\nhttps://pmc.ncbi.nlm.nih.gov/articles/PMC9440663/↩︎",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Hypothesis testing with randomization, Part 2</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html",
    "href": "12-confidence_intervals-web.html",
    "title": "12  Confidence intervals",
    "section": "",
    "text": "12.1 Introduction\nSampling variability means that we can never trust a single sample to identify a population parameter exactly. Instead of simply trusting a point estimate, we can look at the entire sampling distribution to create an interval of plausible values called a confidence interval. By making our intervals wide enough, we hope to have some chance of capturing the true population value. Like hypothesis tests, confidence intervals are a form of inference because they use a sample to deduce something about the population. Along the way, we will also learn about a new form of randomization called bootstrapping.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#introduction",
    "href": "12-confidence_intervals-web.html#introduction",
    "title": "12  Confidence intervals",
    "section": "",
    "text": "12.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n12.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/12-confidence_intervals.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n12.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#load-packages",
    "href": "12-confidence_intervals-web.html#load-packages",
    "title": "12  Confidence intervals",
    "section": "12.2 Load packages",
    "text": "12.2 Load packages\nWe load the standard tidyverse, janitor, and infer packages. We’ll also need the openintro package later in the chapter for the hsb2 and the smoking data set.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#population-vs-sample-proportions",
    "href": "12-confidence_intervals-web.html#population-vs-sample-proportions",
    "title": "12  Confidence intervals",
    "section": "12.3 Population vs sample proportions",
    "text": "12.3 Population vs sample proportions\nIn the past few chapters, we’ve used a lowercase p to represent the “true” population proportion in a hypothesis test. For example, in the last chapter, we used \\(p_{female}\\) to denote the “true” proportion of melanoma patients who were female.\nThe word “true” appears in quotation marks here because an actual “true” population parameter p is usually unknown and unknowable. (If we knew its value, we wouldn’t need to gather data and do statistics.) But for the sake of a hypothesis test, we pretend that we know the value of p. We assign it some “null” value as part of establishing a null hypothesis.\nIn the “Mechanics” section of the hypothesis testing rubric, we compare the null value p to the test statistic, which is the sample proportion from our data. We will now introduce the symbol \\(\\hat{p}\\) for this sample proportion. If you are working in the Quarto document, take the mouse and hover over the text between the dollar signs in the last sentence. You should see the letter p with a little hat on top. (If you are looking at the HTML page, you can already see the symbol.) We pronounce this math symbol “p hat” and it will always represent the sample proportion.\nDo not confuse \\(p\\) and \\(\\hat{p}\\). The first is a parameter describing the true value of a proportion in the whole population (or, in our case, a hypothesized value of a population proportion in a null hypothesis). On the other hand, \\(\\hat{p}\\) is a statistic that we calculate from our sample data.\nAnd do not confuse either of these symbols with P-values, the numbers we calculate at the end of hypothesis tests for the purpose of rejecting or failing to reject null hypotheses. In this book, we will always use lowercase p to indicate proportions and uppercase P to indicate P-values. But, beware, in the research world, P-values are often written with lowercase p, and that can be confusing.\nSorry, statisticians are bad at naming stuff.\nAs an example, imagine you obtain a random sample of 200 high school seniors from across the U.S. Suppose 32 of them attend private school. As a sample statistic, we have\n\\[\n\\hat{p} = 32/200 = 0.16\n\\]\nIn other words, 16% of the students in the sample attended private school.\nIf our sample is representative, we might guess that the true population parameter \\(p\\) is also close to 0.16, but we’re not really sure:\n\\[\np \\approx 0.16?\n\\]\nAnd what about the sampling variability? In previous chapters, we flipped coins. A “weighted” coin flipped 200 times can give us a “new” (fake) sample, and doing that a thousand times (or even more) can give us a lot of new samples to see what range of values is possible. But what would we use as the probability of heads for the weighted coin? It would be a bad idea to use 0.16 because that would assume that the population proportion agreed exactly with the one sample we happen to have. It worked in a hypothesis test because we had a value of \\(p\\) we assumed was “true” in the guise of a null hypothesis. But, in general, if we simply want to estimate a population parameter with a sample statistic, we have no such information to use. So coin flipping is out.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#bootstrapping",
    "href": "12-confidence_intervals-web.html#bootstrapping",
    "title": "12  Confidence intervals",
    "section": "12.4 Bootstrapping",
    "text": "12.4 Bootstrapping\nAn alternative that is available to us is a procedure called bootstrapping. The idea sounds weird, but it’s pretty simple: instead of building fake samples, what if we tried to build a fake population? And then, what if we took repeated samples from it?\nHow would we build a fake population? Imagine making many, many copies of our sample until we had thousands or even millions of students. In fact, we can think of an infinite number of copies of our sample if we want. Sure, this fake population isn’t exactly like the real population of all high school seniors. But if our sample is representative, we might hope that lots of copies of our sample would approximate the population we care about.\nComputationally, it’s a lot of work to copy our sample thousands or millions of times. And we certainly can’t work with an infinite number of copies. Fortunately, we can use a shortcut. It’s called sampling with replacement.\nNormal sampling is usually without replacement, meaning that once we have sampled an individual, they are not eligible to be sampled again. We don’t want to survey Bobby and then later in our study, survey Bobby again.\nIn sampling with replacement, we put Bobby back in the pool and make them eligible to be sampled again. This is the same thing as having access to an infinite population. Remember that our fake population is just many, many copies of our sample. So in that fake population, there are many, many Bobby clones that could end up in our sample. So rather than cloning Bobby many, many times, let’s just put Bobby back in the group any time they’re sampled.\nWe need to see this in action. We have a random sample of 200 students obtained by the National Center of Education Statistics in their “High School and Beyond” survey. This is stored in the hsb2 data set from the openintro package. Here are the school types for these students, stored in the variable schtyp:\n\nhsb2$schtyp\n\n  [1] public  public  public  public  public  public  public  public  public \n [10] public  public  public  public  public  public  public  public  private\n [19] public  public  public  public  public  public  public  public  public \n [28] private private public  public  public  private public  private public \n [37] private public  public  public  private private public  public  public \n [46] public  public  public  private public  public  public  public  private\n [55] public  public  public  public  private public  private public  public \n [64] public  private public  public  public  public  public  public  public \n [73] public  public  public  public  public  public  public  public  public \n [82] public  private public  public  public  public  public  public  public \n [91] public  public  public  public  public  public  public  public  public \n[100] private public  public  public  public  public  public  public  public \n[109] private private public  public  public  public  private public  public \n[118] public  public  public  private public  public  public  public  public \n[127] public  public  public  public  public  public  public  public  public \n[136] public  private public  public  private public  public  public  public \n[145] public  private public  private public  public  public  public  public \n[154] public  public  public  public  public  public  public  public  public \n[163] private public  public  public  public  public  private public  public \n[172] public  public  public  public  public  public  public  public  public \n[181] public  private public  public  public  public  public  public  private\n[190] public  public  private private public  private private public  private\n[199] public  public \nLevels: public private\n\n\nLet’s sample one individual from our sample of 200 students:\n\n# We set the seed to make our work reproducible\nset.seed(6)\nsample(hsb2$schtyp, size = 1)\n\n[1] public\nLevels: public private\n\n\nThat was one of the public school students from among the 200 students in our sample. Here’s another one:\n\nset.seed(7)\nsample(hsb2$schtyp, size = 1)\n\n[1] private\nLevels: public private\n\n\nThat was one of the private school students.\nWe can do this 200 times. Now, if we sample without replacement, all we get back are the original students, just listed in a different order. Think about why: we’re just picking one student at a time. But since they don’t get replaced, eventually, every student will get chosen. We’re choosing 200 students, but there are only 200 students from which to choose.\n\nset.seed(8)\nsample_without_replacement1 &lt;- sample(hsb2$schtyp, size = 200)\nsample_without_replacement1\n\n  [1] public  public  public  public  public  public  public  public  public \n [10] public  public  public  public  public  public  public  private public \n [19] public  public  public  public  public  public  public  public  public \n [28] public  public  private public  public  public  public  public  public \n [37] public  public  public  public  public  public  public  private public \n [46] public  public  public  public  private private private public  public \n [55] private private public  public  public  public  public  public  private\n [64] public  public  private public  public  public  public  public  public \n [73] public  public  public  public  public  public  public  public  public \n [82] public  public  public  public  public  public  public  public  public \n [91] public  public  public  public  public  public  public  public  public \n[100] public  public  private public  public  public  public  public  public \n[109] public  public  public  public  public  public  public  public  public \n[118] public  public  public  private public  public  private public  public \n[127] private private public  public  public  public  private public  private\n[136] private public  public  public  public  public  public  public  public \n[145] public  public  public  public  public  public  public  public  private\n[154] public  public  public  public  public  private public  private private\n[163] public  public  public  public  private public  public  private public \n[172] private private public  public  public  public  public  public  public \n[181] public  private public  private public  public  public  private private\n[190] public  public  public  public  public  public  public  public  private\n[199] public  private\nLevels: public private\n\n\n\ntabyl(sample_without_replacement1)\n\n\n  \n\n\n\n\nset.seed(9)\nsample_without_replacement2 &lt;- sample(hsb2$schtyp, size = 200)\nsample_without_replacement2\n\n  [1] public  public  public  private public  private public  private public \n [10] public  public  private private private private private public  public \n [19] private public  public  public  public  public  public  public  public \n [28] public  public  public  public  public  public  public  public  public \n [37] public  public  public  public  public  public  public  private public \n [46] public  public  public  public  private public  private public  public \n [55] public  private public  public  public  public  public  public  public \n [64] private public  public  public  public  public  public  public  public \n [73] public  public  public  public  private public  public  public  public \n [82] private private public  public  public  public  public  public  private\n [91] public  private public  public  public  private public  public  public \n[100] public  public  private private public  public  public  public  public \n[109] public  private public  public  private public  private public  public \n[118] public  public  public  public  public  private public  public  public \n[127] public  public  public  public  public  public  public  public  public \n[136] public  public  public  public  public  public  private public  public \n[145] public  private public  public  public  public  public  public  public \n[154] public  public  public  public  public  public  public  public  private\n[163] private public  public  public  public  public  public  public  public \n[172] public  public  public  public  public  public  public  public  public \n[181] private public  public  public  public  public  private public  public \n[190] public  public  public  public  public  public  public  public  public \n[199] public  public \nLevels: public private\n\n\n\ntabyl(sample_without_replacement2)\n\n\n  \n\n\n\nThe two lists above consist of the same 200 students, just drawn in a different order.\nOn the other hand, if we sample with replacement, then students can get chosen more than once. (Remember, we’re equating “getting chosen more than once” with “sampling from an infinite population and choosing a clone.”) Now, the number of private school students we see might not be 32.\nEach of the following samples is called a bootstrap sample. Notice that we’ve added the argument replace = TRUE to the sample function:\n\nset.seed(10)\nsample_with_replacement1 &lt;- sample(hsb2$schtyp, size = 200,\n                                   replace = TRUE)\nsample_with_replacement1\n\n  [1] private public  public  public  public  private public  public  public \n [10] public  public  public  public  public  public  public  public  public \n [19] private public  public  public  public  private private private public \n [28] public  private public  public  public  private public  public  public \n [37] public  public  public  public  public  public  private public  public \n [46] public  public  public  public  public  public  private public  public \n [55] public  public  public  public  public  public  public  public  public \n [64] public  public  private public  private public  public  public  private\n [73] public  public  public  public  public  public  public  public  public \n [82] public  public  public  public  private public  public  public  public \n [91] public  private public  private public  private public  public  public \n[100] public  public  public  private private public  public  public  public \n[109] public  public  public  public  public  private private public  public \n[118] private public  public  private public  public  private public  public \n[127] public  public  public  private private private public  public  private\n[136] public  public  public  public  public  public  public  public  public \n[145] public  public  public  public  public  public  public  public  public \n[154] public  public  public  public  public  public  public  private public \n[163] public  public  public  private private public  private private private\n[172] public  public  public  public  public  public  private public  public \n[181] public  public  public  public  public  public  private public  public \n[190] public  public  public  public  public  public  public  public  public \n[199] public  public \nLevels: public private\n\n\n\ntabyl(sample_with_replacement1)\n\n\n  \n\n\n\nThat bootstrap sample proportion is 0.18, not 0.16.\n\nset.seed(11)\nsample_with_replacement2 &lt;- sample(hsb2$schtyp, size = 200,\n                                   replace = TRUE)\nsample_with_replacement2\n\n  [1] public  public  public  public  public  private public  public  private\n [10] public  public  private public  public  public  public  public  public \n [19] public  public  public  public  public  public  public  public  public \n [28] public  public  public  public  public  public  public  public  public \n [37] public  public  public  public  public  public  public  public  public \n [46] public  public  public  public  public  public  public  private public \n [55] public  public  public  public  public  public  public  public  public \n [64] public  public  public  public  public  public  public  public  public \n [73] public  public  public  public  private public  public  public  public \n [82] public  private private public  public  private public  public  public \n [91] public  private public  public  public  public  private public  private\n[100] public  public  private public  public  public  public  public  public \n[109] public  public  private public  public  private public  public  public \n[118] private private public  public  public  public  private public  private\n[127] public  private public  private public  public  public  private public \n[136] private public  public  public  private private private public  private\n[145] public  public  private public  public  private public  public  public \n[154] private private public  public  public  public  public  public  private\n[163] private public  public  public  public  public  private public  private\n[172] public  public  public  private private public  private public  public \n[181] public  public  public  public  public  public  public  public  public \n[190] public  private public  private public  public  public  private public \n[199] public  public \nLevels: public private\n\n\n\ntabyl(sample_with_replacement2)\n\n\n  \n\n\n\nThat bootstrap sample proportion is 0.2.\nNow we’re getting some sampling variability!\nIf we do this many, many times, we get a whole collection of sample proportions. The distribution of all those sample proportions, obtained with bootstrap samples (samples drawn with replacement), is called the bootstrap sampling distribution.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#computing-a-bootstrap-sampling-distribution",
    "href": "12-confidence_intervals-web.html#computing-a-bootstrap-sampling-distribution",
    "title": "12  Confidence intervals",
    "section": "12.5 Computing a bootstrap sampling distribution",
    "text": "12.5 Computing a bootstrap sampling distribution\nThe infer package can compute bootstrap samples and, hence, produce a bootstrap sampling distribution. The code looks a whole like the code you already know for hypothesis testing:\n\nprivate_boot &lt;- hsb2 |&gt;\n  specify(response = schtyp, success = \"private\") |&gt;\n  generate(reps = 1000, type = \"bootstrap\") |&gt;\n  calculate(stat = \"prop\")\nprivate_boot\n\n\n  \n\n\n\nWe simply changed the type to “bootstrap”.\nNow we visualize like normal:\n\nprivate_boot |&gt;\n  visualize()\n\n\n\n\n\n\n\n\n(We can change the number of bins if we want, but this number looks pretty good.)",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#confidence-intervals",
    "href": "12-confidence_intervals-web.html#confidence-intervals",
    "title": "12  Confidence intervals",
    "section": "12.6 Confidence intervals",
    "text": "12.6 Confidence intervals\nThe histogram above simulates what might happen if we took many samples from our infinite “fake” population consisting of many copies of our original, actual sample data. On the lower end, we might see something like 8% private school students. On the upper end, we could see 25% or more private school students.\nIn the chapter about numerical data, we computed the IQR (interquartile range), which was the difference between the 25th percentile and the 75th percentile. The IQR was then the range of the middle 50% of the data. Let’s use infer tools to calculate the middle 50% of the above distribution:\n\nprivate_50 &lt;- private_boot |&gt;\n  get_confidence_interval(level = 0.5)\nprivate_50\n\n\n  \n\n\n\nThe middle 50% ranges from 14% up to 17.5%. We can also visualize this:\n\nprivate_boot |&gt;\n  visualise() +\n  shade_confidence_interval(endpoints = private_50)\n\n\n\n\n\n\n\n\nIn other words, when we go out to gather a sample from our (fake infinite) population of high school seniors, about half of the time, we expect the percentage of private students to be somewhere between 14% and 17.5%. The other half of the time, we will sample a value outside that range.\nThis is a confidence interval. More specifically, this is a 50% confidence interval. This is the range of values we expect sample proportions to be in approximately half of the samples we might gather from our (fake infinite) population.\nNow don’t forget the goal. What we are really trying to find is the value \\(p\\), the true population parameter. We want to know what proportion of high school seniors attend private school in the whole population of all high school seniors in the U.S.\nFor mathematical reasons that are outside the scope of this course, it turns out that the sampling variability in the bootstrap distribution around \\(\\hat{p}\\) is very similar to the sampling variability of the sample proportion \\(\\hat{p}\\) around the true value \\(p\\). We bootstrapped our way to the picture above using one actual sample with about 16% private school students. A different sample of high school seniors would give us different bootstrap samples, producing a slightly different bootstrap distribution from the one above. But it, too, will have a shaded region like the histogram above. Every actual sample we might obtain in the real world would give us a bootstrap distribution with a different shaded region. But the amazing fact is this: about half of those shaded regions will actually contain the true population parameter \\(p\\).\nThink about the value \\(p\\) like a fish hidden in a murky lake. The sample proportion \\(\\hat{p}\\) is our attempt at fishing. We drop a hook down at the value \\(\\hat{p}\\) and pull it right back up. It’s not very likely that we caught the fish, although we hope that we were close. Alas, the sample proportion is almost never exactly equal to the true proportion \\(p\\). But what if we cast a net instead? That net is the shaded range of values in our confidence interval. That range of values might catch the fish.\nThe difference between statistics and fishing is that, in the latter, when we pull up the net, we can see if we successfully caught the fish. In the former, all we can say is that there is some probability that the net caught the fish, but you’re not able to look inside the net to know for sure.\nSo the confidence interval we created above might have caught the true value \\(p\\). But then again, it might not have. There’s only a 50% chance we captured the true value in the range 14% to 17.5% that we computed from our specific sample with its accompanying bootstrap samples. Most researchers would be displeased with only a 50% success rate. So can we do better?\nHow much better do we want to do? This is a subjective question with no definitive answer. Many people say they want to be 95% confident that the confidence interval they build will capture the true population parameter. Let’s modify our code to do that:\n\nprivate_95 &lt;- private_boot |&gt;\n  get_confidence_interval(level = 0.95)\nprivate_95\n\n\n  \n\n\n\nThe middle 95% ranges from 11% up to 21.5%. We can also visualize this:\n\nprivate_boot |&gt;\n  visualise() +\n  shade_confidence_interval(endpoints = private_95)\n\n\n\n\n\n\n\n\nThe interpretation is that when you go collect many samples, the confidence intervals you produce using the bootstrap procedure described above will capture the true population proportion 95% of the time.\n\nExercise 1\nWhy is a 95% confidence interval wider than a 50% confidence interval? In other words, why should our desire to be 95% confident in capturing the true value of \\(p\\) result in an interval that is wider than if we only wanted to be 50% confident?\n\nPlease write up your answer here.\n\n\n\nExercise 2\nBeing more confident seems like a good thing. In fact, we might want a 99% confidence interval. Compute and visualize a 99% confidence interval for proportion of private school students.\n\n\n# Add code here to compute a 99% confidence interval\n\n\n# Add code here to visualize a 99% confidence interval\n\n\n\n\nExercise 3\nCan you think of any downside to using higher and higher confidence levels? As a hint, think about the following completely true sentence: “I am 100% confident that the true proportion of high school seniors attending private school is somewhere between 0% and 100%.”\n\nPlease write up your answer here.\n\n\nWhile 50% is clearly too low for a confidence level, as seen above, there is no particular reason that we need to compute a 95% confidence interval either. There is some consensus in the scientific community here: 95% has evolved to become a generally agreed-upon standard. But we could compute a 90% confidence interval or a 99% confidence interval (as you did above), or any other type of interval. Having said that, if you choose other intervals besides these three, people might wonder if you’re up to something.1",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#conditions",
    "href": "12-confidence_intervals-web.html#conditions",
    "title": "12  Confidence intervals",
    "section": "12.7 Conditions",
    "text": "12.7 Conditions\nDon’t forget that there are always assumptions we make when relying on any kind of statistical inference. Before computing a confidence interval for a proportion, we must verify that certain conditions are satisfied. But these conditions are not new. We already know from hypothesis testing what is required for good inference from a sample. These are the “Random” and the “10%” conditions.\n\nRandom\n\nThe sample must be random (or hopefully representative).\n\n10%\n\nThe sample size must be less than 10% of the size of the population.\n\n\nBoth conditions are met for the data in the High School and Beyond survey.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#rubric-for-confidence-intervals",
    "href": "12-confidence_intervals-web.html#rubric-for-confidence-intervals",
    "title": "12  Confidence intervals",
    "section": "12.8 Rubric for confidence intervals",
    "text": "12.8 Rubric for confidence intervals\nTypically, you will be asked to report a confidence interval after performing a hypothesis test. Whereas a hypothesis test gives you a “decision criterion” (using data to make a decision to reject the null or fail to reject the null), a confidence interval gives you an estimate of the “effect size” (a range of plausible values for the population parameter).\nAs such, there is a section in the Rubric for inference that shows the steps of calculating and reporting a confidence interval. They are as follows:\n\nCheck the relevant conditions to ensure that model assumptions are met.\nCalculate and graph the confidence interval.\nState (but do not overstate) a contextually meaningful interpretation.\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nComment on the effect size and the practical significance of the result.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#effect-size",
    "href": "12-confidence_intervals-web.html#effect-size",
    "title": "12  Confidence intervals",
    "section": "12.9 Effect size",
    "text": "12.9 Effect size\nThe last step above is worth some additional explanation. To illustrate the definition of effect size and why we care about it, imagine that we know a standard treatment for a disease that works for about 70% of all patients who suffer from the disease. Now suppose that we develop a new drug and test it in some clinical trials. Here are three possible scenarios:\n\nThe new drug works for 80% of the patients in our trials with a confidence interval from 78% to 82%.\nThe new drug works for 80% of the patients in our trials with a confidence interval from 65% to 95%.\nThe new drug works for 74% of the patients in our trials with a confidence interval from 72% to 76%.\n\n\nExercise 4(a)\nIn both scenarios 1 and 2 the sample result is a 10 percentage point improvement in our ability to treat the disease. But are scenarios 1 and 2 actually the same? In other words, what can we conclude about the true proportion of patients for whom the drug works in scenario 1 versus scenario 2?\n\nPlease write up your answer here.\n\n\n\nExercise 4(b)\nIn scenario 3, the improvement is only 4 percentage points. So how does scenario 3 compare to scenario 2? Give one reason why scenario 2 might represent a “better” outcome and give one reason why scenario 3 might represent a “better” outcome.\n\nPlease write up your answer here.\n\n\n\nExercise 4(c)\nSuppose our new drug is very expensive to produce. Why might scenario 3 cause a pharmaceutical company to decide not to manufacture and market the drug?\n\nPlease write up your answer here.\n\n\nThe effect size in a study is the difference between the hypothesized value of a population parameter from the null hypothesis and our new estimate of that value resulting from the study. However, due to sampling variability, our sample does not tell us an exact value for the effect size. The confidence interval provides a range of plausible values for the true population value. (And even then, we cannot be 100% confident we captured that true population value.) So when we report an effect size, we have to take into account a range of possible effect sizes based on the confidence interval.\nWhen considering effect sizes, we also have to think about their magnitudes. A 1% increase is not the same as a 10% increase, and there are costs and benefits to consider when making decisions based on the results of statistical findings. That cost/benefit analysis often requires discipline-specific knowledge. The value of a new drug might require someone with medical expertise to evaluate, for example. For purposes of this course, we will ask you to make your best guess as to whether the range of effect sizes you find are likely to be of practical importance in the context of whatever problem you’re investigating.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#example",
    "href": "12-confidence_intervals-web.html#example",
    "title": "12  Confidence intervals",
    "section": "12.10 Example",
    "text": "12.10 Example\nHere is a worked example. (Unless otherwise stated, we always use a 95% confidence level.)\nSome of the students in the “High School and Beyond” survey attended vocational programs. This data is stored in the prog variable. Using a confidence interval, estimate what percentage of all high school seniors attend vocational programs.\nWe will need to do a little data cleaning before we can address this question. There are actually three types of programs: “general”, “academic”, and “vocational”. The infer commands will only work when a categorical variable has two levels. We are thinking of “general” and “academic” together as more like a combined “other” category. We can fix this by creating a new factor variable with mutate. Inside that mutate, we will use the fct_collapse function to collapse two of the levels into one as follows:\n\nhsb2 &lt;- hsb2 |&gt;\n  mutate(prog2 = fct_collapse(prog,\n                              vocational = \"vocational\",\n                              other = c(\"general\", \"academic\")))\nglimpse(hsb2)\n\nRows: 200\nColumns: 12\n$ id      &lt;int&gt; 70, 121, 86, 141, 172, 113, 50, 11, 84, 48, 75, 60, 95, 104, 3…\n$ gender  &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"male\", \"male\", \"male\", \"mal…\n$ race    &lt;chr&gt; \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"african…\n$ ses     &lt;fct&gt; low, middle, high, high, middle, middle, middle, middle, middl…\n$ schtyp  &lt;fct&gt; public, public, public, public, public, public, public, public…\n$ prog    &lt;fct&gt; general, vocational, general, vocational, academic, academic, …\n$ read    &lt;int&gt; 57, 68, 44, 63, 47, 44, 50, 34, 63, 57, 60, 57, 73, 54, 45, 42…\n$ write   &lt;int&gt; 52, 59, 33, 44, 52, 52, 59, 46, 57, 55, 46, 65, 60, 63, 57, 49…\n$ math    &lt;int&gt; 41, 53, 54, 47, 57, 51, 42, 45, 54, 52, 51, 51, 71, 57, 50, 43…\n$ science &lt;int&gt; 47, 63, 58, 53, 53, 63, 53, 39, 58, 50, 53, 63, 61, 55, 31, 50…\n$ socst   &lt;int&gt; 57, 61, 31, 56, 61, 61, 61, 36, 51, 51, 61, 61, 71, 46, 56, 56…\n$ prog2   &lt;fct&gt; other, vocational, other, vocational, other, other, other, oth…\n\n\nInspect the variables prog and prog2 above to make sure that the re-coding was successful. Then be sure to use prog2 and not prog everywhere.\n\n12.10.1 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nThe sample is a random sample of high school seniors from the U.S. as the survey was conducted by the National Center of Education Statistics, a reputable government organization.\n\n10%\n\nThe sample size is 200, which is much less than 10% of the population of all U.S. high school seniors.\n\n\n\n\n12.10.2 Calculate and graph the confidence interval.\n\nvocational_boot &lt;- hsb2 |&gt;\n  specify(response = prog2, success = \"vocational\") |&gt;\n  generate(reps = 1000, type = \"bootstrap\") |&gt;\n  calculate(stat = \"prop\")\nvocational_boot\n\n\n  \n\n\n\n\nvocational_ci &lt;- vocational_boot |&gt;\n  get_confidence_interval(level = 0.95)\nvocational_ci\n\n\n  \n\n\n\n\nvocational_boot |&gt;\n  visualize() +\n  shade_confidence_interval(endpoints = vocational_ci)\n\n\n\n\n\n\n\n\n\n\n12.10.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true percentage of U.S. high school seniors who attend a vocational program is captured in the interval (19%, 31%).\nNote: we use inline code to grab the values of the endpoints of the confidence interval. We also multiply by 100 to report percentages instead of proportions.\n\n\n12.10.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nIn this chapter, we haven’t run a hypothesis test, so this step is irrelevant for us here. However, in future chapters, we will incorporate this step into the rubric and see how the confidence interval relates to the conclusion of a hypothesis test.\n\n\n12.10.5 Comment on the effect size and the practical significance of the result.\nAgain, because we haven’t run a hypothesis test, we are not comparing this 19% to 31% range to a set null value. So there is no effect size to report here. But in future chapters, when we calculate a confidence interval after conducting a hypothesis test, we’ll incorporate this step into the rubric.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#your-turn",
    "href": "12-confidence_intervals-web.html#your-turn",
    "title": "12  Confidence intervals",
    "section": "12.11 Your turn",
    "text": "12.11 Your turn\nUse the smoking data set from the openintro package. What percentage of the population of the U.K. smokes tobacco? (The information you need is in the smoke variable.) Use a 95% confidence interval.\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\n\nRandom\n\n[Check condition here.]\n\n10%\n\n[Check condition here.]\n\n\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to create the bootstrap sampling distribution.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n(We will ignore the last two last steps in the rubric. We haven’t run a hypothesis test.)",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#interpreting-confidence-intervals",
    "href": "12-confidence_intervals-web.html#interpreting-confidence-intervals",
    "title": "12  Confidence intervals",
    "section": "12.12 Interpreting confidence intervals",
    "text": "12.12 Interpreting confidence intervals\nConfidence intervals are notoriously difficult to interpret.2\nHere are several wrong interpretations of a 95% confidence interval:\n\n95% of the data lies in the interval.\nThere is a 95% chance that the sample proportion lies in the interval.\nThere is a 95% chance that the population parameter lies in the interval.\n\nWe’ll take a closer look at these incorrect claims in a moment. First, let’s see how confidence intervals work using simulation.\nIn order to simulate, we’ll have to pretend temporarily that we know a true population parameter. Let’s use the example of a candidate who has the support of 64% of voters. In other words, \\(p = 0.64\\). We go out and get a sample of voters, let’s say 50. From that sample we construct a 95% confidence interval by bootstrapping. Most of the time, 64% (the true value!) should be in our interval. But sometimes it won’t be. We can get an unusual sample that is far away from 64%, just by pure chance alone. (Perhaps we accidentally run into a bunch of people who oppose our candidate.)\nOkay, let’s do it again. Get a new sample and calculate a new confidence interval. This sample will likely result in a different sample proportion than the first sample. Therefore, the confidence interval will be located in a different place. Does it contain 64%? Most of the time, we expect it to. Occasionally, it will not.\nWe can do this over and over again through the magic of simulation! Here’s what this simulation looks like in R. The following code is quite technical, although you will recognize bits and pieces of it. Don’t worry about it. You won’t need to generate code like this on your own. Just look at the pretty picture in the output below below the code.\n\n# You don't need to understand all this code\nset.seed(11111)\n\n# The true population proportion is 0.64\ntrue_val &lt;- 0.64\n# The sample size is 50\nsample_size &lt;- 50\n# Set confidence level\nour_level &lt;- 0.95\n# Set number of intervals to simulate\nsim_num &lt;- 100\n\n# Get a random sample of size n.\n# Compute the test statistic and the bootstrap confidence interval.\n# Put both into a single tibble.\nsimulate_ci &lt;- function(n, level = 0.95) {\n  sample_data &lt;-\n    factor(rbinom(n , size = 1, prob = true_val)) |&gt;\n    as_tibble()\n  stat &lt;- sample_data |&gt;\n    observe(response = value, success = \"1\", stat = \"prop\")\n  ci &lt;- sample_data |&gt;\n    specify(response = value, success = \"1\") |&gt;\n    generate(reps = 1000, type = \"bootstrap\") |&gt;\n    calculate(stat = \"prop\") |&gt;\n    get_confidence_interval(level = our_level)\n  return(bind_cols(stat, ci))\n}\n\n# Simulate 100 random samples (each of size 50)\n# Assign a color based on whether the intervals contain the true proportion\nci &lt;- map_dfr(rep(sample_size, times = sim_num), simulate_ci,\n              level = our_level) |&gt;\n  mutate(row_num = row_number()) |&gt;\n  mutate(color = ifelse(lower_ci &lt;= true_val &\n                          true_val &lt;= upper_ci,\n                        \"black\", \"red\"),\n         alpha = ifelse(color == \"black\", 0.5, 1))\n\n# Plot all the simulated intervals\nggplot(ci, aes(x = stat, y = row_num,\n               color = color, alpha = alpha)) +\n  geom_point() +\n  scale_color_manual(values = c(\"black\", \"red\"), guide = \"none\") +\n  geom_segment(aes(x = lower_ci,\n                   xend = upper_ci,\n                   yend = row_num)) +\n  geom_vline(xintercept = true_val, color = \"blue\") +\n  scale_alpha_identity() +\n  labs(y = \"Simulation\", x = \"Estimates with confidence intervals\")\n\n\n\n\n\n\n\n\nEach sample gives us a slightly different estimate, and therefore, a different confidence interval as well.\nFor each of the 100 simulated intervals, most of them (the black ones) do capture the true value of 0.64 (the blue vertical line). Occasionally they don’t (the red ones). We expect 5 red intervals, but since randomness is involved, it won’t necessarily be exactly 5. (Here there were only 3 bad intervals.)\nThis is the key to interpreting confidence intervals. The “95%” in a 95% confidence interval means that if we were to collect many random samples and use them to calculate confidence intervals, about 95% of those intervals would contain the true population parameter and about 5% would not.\nSo let’s revisit the erroneous statements from the beginning of this section and correct the misconceptions.\n\n95% of the data lies in the interval.\n\nThis doesn’t even make sense. Our data is categorical. The confidence interval is a range of plausible values for the proportion of successes in the sample.\n\nThere is a 95% chance that the sample proportion lies in the interval.\n\nNo. There is essentially a 100% chance that the sample proportion lies in the interval. Most of the time, the sample proportion is very close to the center of the interval. When we bootstrap, the “infinite population” we are simulating has the same population proportion as the sample we started with. (After all, the infinite population is just many copies of the sample we started with.) Therefore, samples from that infinite population should be more or less centered around the sample proportion.\n\nThere is a 95% chance that the population parameter lies in the interval.\n\nThis is wrong in a more subtle way. The problem here as that it takes our interval as being fixed and special, and then tries to declare that of all possible population parameters, we have a 95% chance of the true one landing in our interval. The logic is backwards. The population parameter is the fixed truth. It doesn’t wander around and land in our interval sometimes and not at other times. It is our confidence interval that wanders; it is just one of many intervals we could have obtained from random sampling. When we say, “We are 95% confident that…,” we are just using a convenient shorthand for, “If we were to repeat the process of sampling and creating confidence intervals many times, about 95% of those times would produce an interval that happens to capture the actual population proportion.” But we’re lazy and we don’t want to say that every time.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#conclusion",
    "href": "12-confidence_intervals-web.html#conclusion",
    "title": "12  Confidence intervals",
    "section": "12.13 Conclusion",
    "text": "12.13 Conclusion\nA confidence interval is a form of statistical inference that gives us a range of numbers in which we hope to capture the true population parameter. Of course, we can’t be certain of that. If we repeatedly collect samples, the expectation is that 95% of those samples will produce confidence intervals that capture the true population parameter, but that also means that 5% will not. We’ll never know if our sample was one of the 95% that worked, or one of the 5% that did not. And even if we get one of the intervals that worked, all we have is a range of values and it’s impossible to determine which of those values is the true population parameter. Because it’s statistics, we just have to live with that uncertainty.\n\n12.13.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "12-confidence_intervals-web.html#footnotes",
    "href": "12-confidence_intervals-web.html#footnotes",
    "title": "12  Confidence intervals",
    "section": "",
    "text": "A contrary position is proffered by Richard McElreath, an evolutionary ecologist and author of the amazing book Statistical Rethinking. He uses 89% and 97% intervals in his writing and research to highlight the absurdity of regarding 95% as a magic number that has some kind of deep, special meaning.↩︎\nSeveral studies have given surveys to statistics students, teachers, and researchers, and find that even these people often misinterpret confidence intervals. See, for example, this paper: http://www.ejwagenmakers.com/inpress/HoekstraEtAlPBR.pdf↩︎",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Confidence intervals</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html",
    "href": "13-normal_models-web.html",
    "title": "13  Normal models",
    "section": "",
    "text": "13.1 Introduction\nIn this chapter we will learn how to work with normal models. In addition to learning about theoretical normal distributions, we will also develop QQ plots to assess the normality of data.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#introduction",
    "href": "13-normal_models-web.html#introduction",
    "title": "13  Normal models",
    "section": "",
    "text": "13.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n13.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/13-normal_models.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n13.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#load-packages",
    "href": "13-normal_models-web.html#load-packages",
    "title": "13  Normal models",
    "section": "13.2 Load packages",
    "text": "13.2 Load packages\nIn addition to tidyverse, we return to the mosaic package to produce some nice visualizations of normal models.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#the-central-limit-theorem",
    "href": "13-normal_models-web.html#the-central-limit-theorem",
    "title": "13  Normal models",
    "section": "13.3 The Central Limit Theorem",
    "text": "13.3 The Central Limit Theorem\nAn important aspect of all the simulations that we’ve done so far—assuming that we’ve run a large enough number of them—is that their histograms all look like bell curves. This fact is known as the “Central Limit Theorem”. Under some basic assumptions that we’ll discuss in a later chapter, this will be typical of many of our simulated null distributions.\nSo rather than running a simulation each time we want to conduct a hypothesis test, we could also assume that the null distribution is a bell curve. The rest of this chapter will teach you how to work with the “normal distribution,” which is just the mathematically correct term for a bell curve.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#normal-models",
    "href": "13-normal_models-web.html#normal-models",
    "title": "13  Normal models",
    "section": "13.4 Normal models",
    "text": "13.4 Normal models\nThe normal distribution looks like this:\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(data.frame(x = c(-4, 4)), aes(x)) +\n  stat_function(fun = dnorm) +\n  scale_x_continuous(breaks = -3:3)\n\n\n\n\n\n\n\n\nThe curve pictured above is called the standard normal distribution. It has a mean of 0 and a standard deviation of 1. Mathematically, this is written as\n\\[\nN(\\mu = 0, \\sigma = 1),\n\\]\nor usually just\n\\[\nN(0, 1).\n\\]\nWe use this bell curve shape to model data that is unimodal, symmetric, and without outliers. A statistical “model” is a simplification or an idealization. Reality is, of course, never perfectly bell-shaped. Real data is not exactly symmetric with one clear peak in the middle. Nevertheless, an abstract model can give us good answers if used properly.\nAs an example of this, systolic blood pressure (SBP, measured in millimeters of mercury, or mmHg) is more-or-less normally distributed in women ages 30–44 in the U.S. and Canada, with a mean of 114 and a standard deviation of 14.1\nIf we were to plot a histogram with the SBP of every woman between the ages of 30 and 44 in the U.S. and Canada, it would have the shape of a normal distribution, but instead of being centered at 0 like the graph above, this one would be centered at 114. Mathematically, we write\n\\[\nN(\\mu = 114, \\sigma = 14),\n\\]\nor\n\\[\nN(114, 14).\n\\]\nThe graph now looks like this:\n\n# Again, don't worry about the syntax here.\nggplot(data.frame(x = c(58, 170)), aes(x)) +\n  stat_function(fun = dnorm, args = list(mean = 114, sd = 14)) +\n  scale_x_continuous(breaks = c(72, 86, 100, 114, 128, 142, 156))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#predictions-using-normal-models",
    "href": "13-normal_models-web.html#predictions-using-normal-models",
    "title": "13  Normal models",
    "section": "13.5 Predictions using normal models",
    "text": "13.5 Predictions using normal models\nA nice feature of the normal model is that it allows us to see what percentage of the population being modeled lies in certain regions. The following image illustrates a rule called the 68-95-99.7 Rule.2 The beautiful thing about this rule is that, if you can remember the name of the rule, you can remember the content of the rule. (To see the figure below, you will either need to render the file to HTML and look at the HTML output, or copy and paste the link below into a browser tab.)\n\n\n\nNormal Model\n\n\nAs explained in the diagram, 68% percentage (about two-thirds) of the population is expected to sit in the range from one standard deviation below the mean up to one standard deviation above the mean. In our blood pressure example above, since the mean is 114 and the standard deviation is 14, we might say the following:\n\nThe model predicts that around 68% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure between 100 and 128 mmHg.\n\n95% of the population (the vast majority) is expected to sit within two standard deviations of the mean:\n\nThe model predicts that around 95% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure between 86 and 142 mmHg.\n\n99.7% of the population is expected to sit within three standard deviations of the mean. While this seems like pretty much everyone, we do have to remember that about 3 out of every 1000 will still sit outside this predicted range:\n\nThe model predicts that around 99.7% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure between 72 and 156 mmHg.\n\nWe are not restricted to values that line up with standard deviations from the mean. But we will need technology to assist us with such calculations. For example, what percentage of women ages 30–44 in the U.S. and Canada are expected to have SBP under 130 mmHg? The pdist command from the mosaic package will not only help us with this calculation, but it also offers a nice visual representation depending on the arguments we supply to the function:\n\npdist(\"norm\", q = 130, mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n[1] 0.873451\n\n\nIn the Quarto view, you have to switch back and forth between the two boxes below the code chunk (above the graph) to see the number versus the graph. In the HTML output, however, both the number and the plot are visible.\nFor situations where we really just want to see the number, we can always add plot = FALSE to the function:\n\npdist(\"norm\", q = 130, mean = 114, sd = 14, plot = FALSE)\n\n[1] 0.873451\n\n\nThe other pieces of the pdist function are pretty intuitive: \"norm\" (and it has to be in quotes) indicates that we want a normal model, q is the value of interest to us, and mean and sd are self-evident. The numerical output gives the area under the curve to the left of our value of interest. This area is 0.873451; in other words, about 87.3% of women are expected to have SBP less than 130.\nIf you use this command inline, the pretty picture is not generated, just the value. For example, look at the following sentence (remembering that you can click anywhere inside the inline R code and hit Ctrl-Enter or Cmd-Enter):\n\nThe model predicts that 87.3451046% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure under 130 mmHg.\n\nNote that the above code multiplied the result of the pdist command by 100. This is important because the full sentence interpretation is meant to be read by human beings, and human beings tend to report these kinds of numbers as percentages and not decimals.3\nIt’s also important that you include the phrase, “The model predicts…” or something like that. Without that part, the claim is likely false. It would be too definitive. Remember that a model is just an approximation or simplification of reality. We’re not claiming we’ve found the “True” number. All we know is that if the model is roughly correct, we can predict the true value.\nHere’s another question: how many women are predicted to have SBP greater than 130? If 87.3% of women have SBP under 130, then 12.7% must have SBP over 130. Why? Because all women have to add up to 100%!\nTherefore, all we have to do to solve this problem is subtract the number we obtained in the previous question from 1. (Remember that 1 = 100%.)\n\nThe model predicts that 12.6548954% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure over 130 mmHg.\n\nDon’t forget to include parentheses. We need to multiply the whole expression by 100.\nNow, here’s a more complicated question: what percentage of women are predicted to have SBP between 110 mmHg and 130 mmHg?\nRecall that the proportion of women predicted to have SBP less than 130 mmHg was 0.873. But this is also counting women with SBP under 110 mmHg, whom we now want to exclude. The proportion of women with SBP under 110 is found with the following code:\n\npdist(\"norm\", q = 110, mean = 114, sd = 14, plot = FALSE)\n\n[1] 0.3875485\n\n\nTherefore, all we have to do is calculate 0.873 minus 0.388:\n\nThe model predicts that 48.5902564% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure between 110 mmHg and 130 mmHg.\n\n(Again, don’t forget the parentheses.)\nWhat about the pretty picture? Unfortunately, this doesn’t work so well:\n\npdist(\"norm\", q = 130, mean = 114, sd = 14) - \n  pdist(\"norm\", q = 110, mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] 0.4859026\n\n\nThe code is bulky and it prints two pictures, neither of which are quite right for our question.\nInstead, let’s observe that the pdist command can include both values (110 and 130) using the vector notation c:\n\npdist(\"norm\", q = c(110, 130), mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n[1] 0.3875485 0.8734510\n\n\nNow the picture looks great and you can see the proportion you desire in the area between the two lines at 110 and 130.\nThis doesn’t work so well for the numerical output though. Observe:\n\npdist(\"norm\", q = c(110, 130), mean = 114, sd = 14, plot = FALSE)\n\n[1] 0.3875485 0.8734510\n\n\nThere are two numbers shown, but neither is the correct answer. This command shows the percentages below 110 and below 130, respectively, but not the area in between 110 and 130. We still have to subtract. However, R can do this for us easily with the diff command:\n\npdist(\"norm\", q = c(110, 130), mean = 114, sd = 14, plot = FALSE) |&gt;\n    diff()\n\n[1] 0.4859026\n\n\nAgain, for inline R code, you don’t need to specify plot = FALSE:\n\nThe model predicts that 48.5902564% of women ages 30–44 in the U.S. and Canada will have systolic blood pressure between 110 mmHg and 130 mmHg.\n\nFor the following exercises, we’ll use a running example of IQ scores. Keep in mind that, at best, IQ scores fail to measure anything like “intelligence”. At worse, IQ tests (and other forms of standardized testing) have been used to perpetuate systemic racism and inequality.\nIQ scores—whatever they actually measure—are standardized so that they have a mean of 100 and a standard deviation of 16. For each exercise, use the pdist to draw the right picture and then state your answer in a contextually meaningful full sentence using inline R code. Don’t forget to use the phrase “The model predicts…” and report numbers as percentages, not decimals.\n\nExercise 1(a)\nWhat percentage of people would you expect to have IQ scores over 80?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.\n\n\n\nExercise 1(b)\nWhat percentage of people would you expect to have IQ scores under 90?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.\n\n\n\nExercise 1(c)\nWhat percentage of people would you expect to have IQ scores between 112 and 132?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#percentiles",
    "href": "13-normal_models-web.html#percentiles",
    "title": "13  Normal models",
    "section": "13.6 Percentiles",
    "text": "13.6 Percentiles\nOften, the question is reversed: instead of getting a value and being asked what percentage of the population falls above or below it, we are given a percentile and asked about the value to which it corresponds.\nHere is an example using systolic blood pressure: what is the cutoff value of SBP for the lowest 25% of women ages 30–44 in the U.S. and Canada? In other words, what is the 25th percentile of SBP for this group of women?\nThe command we need is qdist. It looks a lot like pdist. Observe:\n\nqdist(\"norm\", p = 0.25, mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n[1] 104.5571\n\n\nThe only change here is that one of the arguments is p instead of q, and the value of p is a proportion (between 0 and 1) instead of a value of SBP. The output is now an SBP value.\nHere it is inline:\n\nThe model predicts that the 25th percentile for SBP in women ages 30–44 in the U.S. and Canada is 104.5571435 mmHg.\n\nWhat if we asked about the highest 10% of women? All you have to do is remember that the top 10% is actually the 90th percentile.\n\nqdist(\"norm\", p = 0.9, mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n[1] 131.9417\n\n\n\nThe model predicts that the top 10% of SBP in women ages 30–44 in the U.S. and Canada have SBP higher than 131.9417219 mmHg.\n\nFinally, what if we want the middle 50%? This is trickier. The middle 50% lies between the 25th percentile and the 75th percentile. Observe the syntax below:\n\nqdist(\"norm\", p = c(0.25, 0.75), mean = 114, sd = 14)\n\n\n\n\n\n\n\n\n[1] 104.5571 123.4429\n\n\n\nTherefore, the model predicts that the middle 50% of SBP for women ages 30–44 in the U.S. and Canada lies between 104.5571435 mmHg and 123.4428565 mmHg.\n\nWe did something tricky in the inline code above. Because the qdist command produces two values (one at the 25th percentile and one at the 75th percentile), we can grab each value separately by appending [1] or [2] to the end of the command.\nFor the exercises below, we’ll continue to use IQ scores (mean of 100 and standard deviation of 16). Use the qdist command to draw the right picture and then state your answer in a contextually meaningful full sentence. Don’t forget to use the phrase “The model predicts…”\n\nExercise 2(a)\nWhat cutoff value bounds the highest 5% of IQ scores?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.\n\n\n\nExercise 2(b)\nWhat cutoff value bounds the lowest 30% of IQ scores?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.\n\n\n\nExercise 2(c)\nWhat cutoff values bound the middle 80% of IQ scores?\n\n\n# Add code here to draw the model.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#z-scores",
    "href": "13-normal_models-web.html#z-scores",
    "title": "13  Normal models",
    "section": "13.7 Z scores",
    "text": "13.7 Z scores\nSometimes it is easier to refer to a value in terms of how many standard deviations it lies from the mean. For example, a systolic blood pressure of 100 is 14 mmHg below the mean, but since the standard deviation is 14 mmHg, this means that 100 is one standard deviation below the mean. This distance from the mean in terms of standard deviations is called a z score.\nWe calculate z scores using the following formula:\n\\[\nz = \\frac{x - \\mu}{\\sigma}.\n\\]\nIn our example, if we wanted to know the z score for an SBP of 100, we just plug all the numbers into the formula above:\n\\[\nz = \\frac{100 - 114}{14} = -1.\n\\]\nWhat is the z score for an SBP of 132? Look at the graph of the normal model \\(N(114, 14)\\):\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(data.frame(x = c(58, 170)), aes(x)) +\n  stat_function(fun = dnorm, args = list(mean = 114, sd = 14)) +\n  scale_x_continuous(breaks = c(72, 86, 100, 114, 128, 142, 156)) +\n  geom_vline(xintercept = 132, color = \"blue\")\n\n\n\n\n\n\n\n\nWe can see that 132 lies between 128 and 142, which are 1 and 2 standard deviations above the mean, respectively. The exact z score is\n\\[\nz = \\frac{132 - 114}{14} = 1.285714.\n\\]\nThe scale function from R also computes z scores. Just note that the function takes arguments center and scale, not mean and sd.\n\nscale(x = 100, center = 114, scale = 14)\n\n     [,1]\n[1,]   -1\nattr(,\"scaled:center\")\n[1] 114\nattr(,\"scaled:scale\")\n[1] 14\n\n\n\nscale(x = 132, center = 114, scale = 14)\n\n         [,1]\n[1,] 1.285714\nattr(,\"scaled:center\")\n[1] 114\nattr(,\"scaled:scale\")\n[1] 14\n\n\nAlso note that the function spits about a bunch of extra crap we don’t care about. This goes away for inline code. Go ahead and render the HTML file now so you can see the effect in the following sentence:\n\nThe z score for 100 is -1 and the z score for 132 is 1.2857143.\n\n\nExercise 3\nIf IQ scores have a mean of 100 and a standard deviation of 16, what are the z scores for the following IQ scores? Write up your answers as full sentences using inline R code.\n\n80\n\n\nPlease write up your answer here.\n\n\n102\n\n\nPlease write up your answer here.\n\n\n130\n\n\nPlease write up your answer here.\n\n\nWorking with z scores also makes it easier to work with normal models. The default settings for pdist and qdist are mean = 0 and sd = 1. That saves you some typing. So, for example, we calculated above that an SBP of 100 has a z score of -1. What percentage of women are expected to have SBP lower than 100?\n\npdist(\"norm\", q = -1)\n\n\n\n\n\n\n\n\n[1] 0.1586553\n\n\n\nThe model predicts that 15.8655254% of women ages 30–44 in the U.S. and Canada will have SBP less than 100.\n\n\n\nExercise 4\nAlbert Einstein supposedly had an IQ of 160. Calculate the z score for his IQ and then use that z score to figure out what percentage of the population is predicted to have higher IQ than Einstein. Use full sentences and inline R code to express your answer.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#qq-plots",
    "href": "13-normal_models-web.html#qq-plots",
    "title": "13  Normal models",
    "section": "13.8 QQ plots",
    "text": "13.8 QQ plots\nAll of the work we do with normal models assumes that a normal model is appropriate. When we want to summarize data using a normal model, this means that the data distribution should be reasonably unimodal, symmetric, and with no serious outliers.\nWe can, of course, use a histogram to check this. But a histogram can be highly sensitive to the choice of bins. Furthermore, for small sample sizes, histograms look “chunky”, making it hard to test this assumption.\nAn easier way to check normality is to use a quantile-quantile plot, typically called a QQ plot or sometimes a normal probability plot. We won’t get into the technicalities of how this plot works. Suffice it to say that if data is normally distributed, the points of a QQ plot should lie along a diagonal line.\nHere is an example. The total snowfall in Grand Rapids, Michigan has been recorded every year since 1893. This data is included with the mosaic package in the data frame SnowGR. A histogram (with reasonable binning) shows that the data is nearly normal.\n\nggplot(SnowGR, aes(x = Total)) +\n  geom_histogram(binwidth = 10, boundary = 50)\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nHere is the QQ plot for the same data. Notice that the aesthetics are a little different; instead of x, we have to use sample.\n\nggplot(SnowGR, aes(sample = Total)) +\n  geom_qq() +\n  geom_qq_line()\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_qq()`).\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_qq_line()`).\n\n\n\n\n\n\n\n\n\n(The warning is because there is one missing value in the data.)\nThe geom_qq() layer plots the dots and the geom_qq_line() layer plots a diagonal line that the dots should more or less follow.\nOther than a few points here and there, the bulk of the data is lined up nicely. There’s a minor outlier, and that can be seen in both the histogram and the QQ plot.\nContrast that with skewed data. For example, the Alcohol data set contains per capita consumption (in liters) of alcohol for various countries over several years. The alcohol consumption variable is highly skewed, as one can see in the histogram.\n\nggplot(Alcohol, aes(x = alcohol)) +\n  geom_histogram(binwidth = 2, boundary = 0)\n\n\n\n\n\n\n\n\nIt is also apparent in the QQ plot that the data is not normally distributed.\n\nggplot(Alcohol, aes(sample = alcohol)) +\n  geom_qq() +\n  geom_qq_line()\n\n\n\n\n\n\n\n\nThe path of dots is sharply curved, indicating a lack of normality.\n\nExercise 5(a)\nFind a data set with a numerical variable that is nearly normal in its distribution. (It can be something we’ve already seen in a past chapter, or if you’re really ambitious, you’re welcome to find a new data set.) Plot both a histogram and a QQ plot to demonstrate that the data is nearly normal. No need for a written response. Just plot the graphs.\nBe aware that if you use a data set from a package, you may have to add library(PACKAGE) to your code. (You replace the word PACKAGE with whatever package you need.)\n\n\n# Add code here to plot a histogram.\n\n\n# Add code here to plot a QQ plot.\n\n\n\n\nExercise 5(b)\nNow find a data set with a numerical variable that is skewed in its distribution. Plot both a histogram and a QQ plot to demonstrate that the data is not normal. Again, no need for a written response. Just plot the graphs.\n\n\n# Add code here to plot a histogram.\n\n\n# Add code here to plot a QQ plot.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#conclusion",
    "href": "13-normal_models-web.html#conclusion",
    "title": "13  Normal models",
    "section": "13.9 Conclusion",
    "text": "13.9 Conclusion\nThe normal model is ubiquitous in statistics, so understanding how to use it to make predictions is critical. When certain assumptions are met (that will be discussed in a future chapter), we can use the normal model to make predictions. The use of z scores allows us to measure distances from the mean in terms of standard deviations, giving us a scale in which data from different contexts are comparable as long as such measurements are normally distributed. A QQ plot helps us check that assumption.\n\n13.9.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "13-normal_models-web.html#footnotes",
    "href": "13-normal_models-web.html#footnotes",
    "title": "13  Normal models",
    "section": "",
    "text": "Statistics from the World Health Organization: http://www.who.int/publications/cra/chapters/volume1/0281-0390.pdf↩︎\nSome folks call this the “Empirical Rule” but that name is much more boring.↩︎\nWhen you render this in HTML, you’ll see a ridiculous number of decimal places that R reports. It’s a bit of a hassle to try to change it, so we’ll just ignore the issue.↩︎",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Normal models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html",
    "href": "14-sampling_distribution_models-web.html",
    "title": "14  Sampling distribution models",
    "section": "",
    "text": "14.1 Introduction\nIn this chapter, we’ll revisit the idea of a sampling distribution model. We’ve already seen how useful it can be to simulate the process of simulating samples from a population and looking at the distribution of values that can occur by chance (i.e., sampling variability). We’ve also had some experience working with normal models. Under certain assumptions, we can use normal models to approximate our simulated sampling distributions.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#introduction",
    "href": "14-sampling_distribution_models-web.html#introduction",
    "title": "14  Sampling distribution models",
    "section": "",
    "text": "14.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n14.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/14-sampling_distribution_models.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n14.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#load-packages",
    "href": "14-sampling_distribution_models-web.html#load-packages",
    "title": "14  Sampling distribution models",
    "section": "14.2 Load packages",
    "text": "14.2 Load packages\nWe load the standard tidyvese package. The mosaic package will provide coin flips.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#sampling-variability-and-sample-size",
    "href": "14-sampling_distribution_models-web.html#sampling-variability-and-sample-size",
    "title": "14  Sampling distribution models",
    "section": "14.3 Sampling variability and sample size",
    "text": "14.3 Sampling variability and sample size\nWe know that when we sample from a population, our sample is “wrong”: even when the sample is representative of the population, we don’t actually expect our sample statistic to agree exactly with the population parameter of interest. Our prior simulations have demonstrated this. They are centered on the “true” value (for example, in a hypothesis test, the “true” value is the assumed null value), but there is some spread due to sampling variability.\nLet’s explore this idea a little further, this time considering how sample size plays a role in sampling variability.\nSuppose that a certain candidate in an election actually has 64% of the support of registered voters. We conduct a poll of 10 random people, gathering a representative (though not very large) sample of voters.\nWe can simulate this task in R by using the rflip command from the mosaic package. Remember that the default for a coin flip is a 50% probability of heads, so we have to change that if we want to model a candidate with 64% support.\n\nset.seed(13579)\nrflip(10, prob = 0.64)\n\n\nFlipping 10 coins [ Prob(Heads) = 0.64 ] ...\n\nH T H T H H H T T H\n\nNumber of Heads: 6 [Proportion Heads: 0.6]\n\n\nYou can think of the above command as taking one random sample of size 10 and getting a certain number of “successes”, where a “success” is a person who votes for our candidate—here encoded as “heads”. In other words, of the 10 people in this particular sample, we surveyed 6 people who said they were voting for our candidate and 4 people who were not.\nUsing the do command, we can simulate many samples, all of size 10. Let’s take 1000 samples and store them in a variable called sims_1000_10.\n\nset.seed(13579)\nsims_1000_10 &lt;- do(1000) * rflip(10, prob = 0.64)\nsims_1000_10\n\n\n  \n\n\n\nNote that with 10 people, it is impossible to get a 64% success rate in any given sample. (That would be 6.4 people!) Nevertheless, we can see that many of the samples gave us around 5–8 successes, as we’d expect when the true population rate is 64%. Also, the mean number of successes across all simulations is 6.414, which is very close to 6.4.\nInstead of focusing on the total number of successes, let’s use the proportion of successes in each sample. We can graph our simulated proportions, just as we’ve done in previous chapters. (The fancy stuff in scale_x_continuous is just making sure that the x-axis goes from 0 to 1 and that the tick marks appear as multiples of 0.1.)\n\nggplot(sims_1000_10, aes(x = prop)) +\n  geom_histogram(binwidth = 0.05) +\n  scale_x_continuous(limits = c(0, 1.1),\n                     breaks = seq(0, 1, 0.1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nBecause each sample has size 10, the proportion of successes can only be multiples of 0.1. Although the distribution is somewhat normally shaped, it is discrete (no values in between the bars) and there is an appreciable left skew.\nWhat happens if we increase the sample size to 20? (The binwidth has to change to see the discrete bars.)\n\nset.seed(13579)\nsims_1000_20 &lt;- do(1000) * rflip(20, prob = 0.64)\n\n\nggplot(sims_1000_20, aes(x = prop)) +\n  geom_histogram(binwidth = 0.025) +\n  scale_x_continuous(limits = c(0, 1.1),\n                     breaks = seq(0, 1, 0.1))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\nExercise 1\nExplain how the distribution of simulations has changed going from a sample size of 10 to a sample size of 20.\n\nPlease write up your answer here.\n\n\n\nExercise 2(a)\nRun a set of simulations yourself, this time with samples of size 50. Use the same number of simulations (1000) and the same ggplot code from above (especially the scale_x_continuous option) so that the x-axis is scaled identically to the previous cases, but change the binwidth to 0.01.\n\n\nset.seed(13579)\n# Add code here to simulate 1000 random samples of size 50.\n\n\n# Add code here to and plot the simulated values.\n\n\n\n\nExercise 2(b)\nExplain how the distribution of simulations has changed going from a sample size of 10 to 20 to 50.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#the-sampling-distribution-model-and-the-standard-error",
    "href": "14-sampling_distribution_models-web.html#the-sampling-distribution-model-and-the-standard-error",
    "title": "14  Sampling distribution models",
    "section": "14.4 The sampling distribution model and the standard error",
    "text": "14.4 The sampling distribution model and the standard error\nIn the last chapter on normal models, we mentioned briefly the Central Limit Theorem and the fact that under certain assumptions, our simulations would look normally distributed. More concretely, the Central Limit Theorem tells us that as our sample size increases, the distribution of sample proportions looks more and more like a normal model. This model is called the sampling distribution model because it describes how many different samples from a population should be distributed.\nWhich normal model do we use? In other words, what is the mean and standard deviation of a normal model that describes a simulation of repeated samples?\nThe simulations above are all centered at the same place, 0.64. This is no surprise. If the true population proportion is 0.64, then we expect most of our samples to be around 64% (even if, as above, it is actually impossible to get exactly 64% in any given sample).\nBut what about the standard deviation? It seems to be changing with each sample size.\n\nExercise 3\nLooking at your simulations above, how does the standard deviation appear to change as the sample size increases? Intuitively, why do you think this happens? (Hint: think about the relationship between larger sample sizes and accuracy.)\n\nPlease write up your answer here.\n\n\nThe standard deviation of a sampling distribution is usually called the standard error. The use of the word “error” in statistics does not mean that anyone made a mistake. A better word for error would be “uncertainty” or even just “variability”.\nThere is some complicated mathematics involved in figuring out the standard error, so we’ll just tell you what it is. If \\(p\\) is the true population proportion, then the standard error is\n\\[\n\\sqrt{\\frac{p(1 - p)}{n}}.\n\\]\nTherefore, if the sample size is large enough, the sampling distribution model is nearly normal, and the correct normal model is\n\\[\nN\\left(p, \\sqrt{\\frac{p(1 - p)}{n}}\\right).\n\\]\nIn our election example, we can calculate the standard error for a sample of size 10:\n\\[\n\\sqrt{\\frac{p(1 - p)}{n}} = \\sqrt{\\frac{0.64(1 - 0.64)}{10}} = 0.152.\n\\]\nWe can do this easily using inline R code. (Remember that R is nothing more than a glorified calculator.) If a candidate has 64% of the vote and we take a sample of size 10, the standard error is 0.1517893. In other words, the sampling distribution model is\n\\[\nN(0.64, 0.152).\n\\]\nFor a sample of size 20, the standard error is 0.1073313 and the sampling distribution model is\n\\[\nN(0.64, 0.107).\n\\]\n\n\nExercise 4\nCalculate the standard error for the example above, but this time using a sample size of 50. Give your answer as a contextually meaningful full sentence using inline R code.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#conditions",
    "href": "14-sampling_distribution_models-web.html#conditions",
    "title": "14  Sampling distribution models",
    "section": "14.5 Conditions",
    "text": "14.5 Conditions\nLike anything in statistics, there are assumptions that have to be met before applying any technique. We must check that certain conditions are true before we can reasonably make the necessary assumptions required by our model.\nWhen we want to use a normal model, we have to make sure the sampling distribution model is truly normal (or nearly normal).\nFirst, we need our samples to be random. Clearly, when samples are not random, there is a danger of bias, and then all bets are off. Of course, in real life hardly any sample will be truly random, so being representative is the most we can usually hope for.\nSecond, our sample size must be less than 10% of the population size. The reasons for this are somewhat technical, and 10% is a rough guideline. The idea is that if we are sampling, we need our sample not to be a significant chunk of the population.\nThese two conditions are always important when sampling. Together, they help ensure that the mathematical assumption of independence is met. In other words, when these two conditions are met, there is a better chance that the data from one member of our sample will not influence nor be influenced by the data from another member.\nFor applying normal models, there is one more condition. It is called the “success/failure” condition. We need for the total number of successes to be at least 10 and, similarly, for the total number of failures to be at least 10.\nGo back and consider our first simulated sample. The true rate of success in the population was presumed to be 64%. Given that we were sampling only 10 individuals, this implies that, on average, we would expect 6.4 people out of 10 to vote for the candidate. And likewise, that means that we would expect 3.6 people to vote against the candidate. (Clearly, it is impossible in any given sample to get 6.4 votes for, or 3.6 votes against. But on average, this is what we expect.) In fact, since the sample size was 10, there was no way that we could meet the success/failure condition. When we plotted the histogram of simulated proportions, we saw the problem: with such small numbers, the histogram was skewed, and not normal.\nWe check the success/failure condition by calculating \\(np\\) and \\(n(1 - p)\\): \\(n\\) is the sample size and \\(p\\) is the proportion of successes. Therefore, \\(np\\) is the total number of successes. Since \\(1 - p\\) is the proportion of failures, \\(n(1 - p)\\) is the total number of failures. Each of the numbers \\(np\\) and \\(n(1 - p)\\) needs to be bigger than 10.\nIn our example, \\(n = 10\\) (the sample size), and \\(p = 0.64\\) (the probability of success). So\n\\[\nnp = 10(0.64) = 6.4\n\\]\nand\n\\[\nn(1 - p) = 10(1 - 0.64) = 10(0.36) = 3.6.\n\\]\nNeither of these numbers is bigger than 10.\nNotice that when \\(n\\) is large, the quantities \\(np\\) and \\(n(1 - p)\\) will also tend to be large. This is the content of the Central Limit Theorem: when sample sizes grow, the sampling distribution model becomes more and more normal.\nThere is something else going on too. Suppose that \\(n = 100\\) but \\(p = 0.01\\). The sample seems quite large, but let’s look at the sampling distribution through a simulation.\n\nset.seed(13579)\nsims_1000_100 &lt;- do(1000) * rflip(100, prob = 0.01)\n\n\nggplot(sims_1000_100, aes(x = prop)) +\n  geom_histogram(binwidth = 0.005) +\n  scale_x_continuous(limits = c(-0.01, 0.1),\n                     breaks = seq(0, 0.1, 0.01))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n(Note that the x-axis scale is much smaller than it was before.)\n\nExercise 5\nWhat’s the problem here? Despite having a fairly large sample size, why is this distribution so skewed?\n\nPlease write up your answer here.\n\n\nIn this scenario, the success/failure condition fails because\n\\[\nnp = (100)(0.01) = 1 \\ngeq 10.\n\\]\nIn other words, in a typical sample, we expect 1 success and 99 failures. This does not satisfy the success/failure condition.\n\n\nExercise 6\nGoing back to the election example (in which the candidate has 64% of the vote), check that a sample size of 50 does satisfy the success/failure condition.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#using-the-model-to-make-predictions",
    "href": "14-sampling_distribution_models-web.html#using-the-model-to-make-predictions",
    "title": "14  Sampling distribution models",
    "section": "14.6 Using the model to make predictions",
    "text": "14.6 Using the model to make predictions\nOnce we know that a normal model is appropriate, we can employ all the tools we’ve previously developed to work with normal models, notably pdist and qdist.\nFor example, we know that samples can be “wrong” due to sampling variability. Even though we know the candidate has 64% support, most surveys are not going to give us back that exact number.\nCould a survey of 50 random voters accidentally predict defeat for the candidate even though the candidate will actually win with 64% support?\nLet’s simulate:\n\nset.seed(13579)\nsurvey_sim &lt;- do(1000) * rflip(50, prob = 0.64)\n\n\nggplot(survey_sim, aes(x = prop)) +\n  geom_histogram(binwidth = 0.01) +\n  geom_vline(xintercept = 0.5, color = \"blue\")\n\n\n\n\n\n\n\n\nIt looks like there are at least a few simulated samples that could come in less than 50% by chance.\nLet’s check the conditions to see if we can use a normal model:\n\nRandom\n\nWe are told that our 50 voters are a random sample.\n\n10%\n\nIt is safe to assume there are more than 500 voters for this election.\n\nSuccess/failure\n\nThe number of expected successes is 32 and the expected number of failures is 18. These are both greater than 10.\n\n\nSince the conditions are satisfied, our sampling distribution model can be approximated with a normal model. The standard error is 0.0678823. Therefore, our normal model is\n\\[\nN(0.64, 0.068).\n\\]\nBack to our original question. How likely is it that a random survey of 50 voters predicts defeat for the candidate? Well, any survey that comes in less than 50% will make it look like the candidate is going to lose. So we simply need to figure out how much of the sampling distribution lies below 50%. This is made simple with the pdist command. Note that we’ll get a more accurate answer if we include the formula for the standard error, rather than rounding it off as 0.068.\n\npdist(\"norm\", q = 0.5,\n      mean = 0.64, sd = sqrt(0.64 * (1 - 0.64) / 50))\n\n\n\n\n\n\n\n\n[1] 0.01958508\n\n\nFrom the picture, we can see that there is only about a 2% chance that one of our surveys of 50 voters could predict defeat. Using inline code, we calculate it as 1.9585083%. The vast majority of the time, then, when we go out and take such a survey, the results will show the candidate in the lead. It will likely not say exactly 64%; there is still a relatively wide range of values that seem to be possible outcomes of such surveys. Nevertheless, this range of values is mostly above 50%. Nevertheless, there is a small chance that the survey will give us the “wrong” answer and predict defeat for the candidate.1\n\nExercise 7(a)\nSuppose we are testing a new drug that is intended to reduce cholesterol levels in patients with high cholesterol. Also suppose that the drug works for 83% of such patients. When testing our drug, we use a suitably random sample of 143 individuals with high cholesterol.\nFirst, simulate the sampling distribution using 1000 samples, each of size 143. Plot the resulting sampling distribution.\n\n\nset.seed(13579)\n# Add code here to simulate 1000 samples of size 143.\n\n\n# Add code here to plot the resulting distribution.\n\n\n\n\nExercise 7(b)\nNext, check the conditions that would allow you to use a normal model as a sampling distribution model. We’ve given you an outline below:\n\n\nRandom\n\n[Check condition here.]\n\n10%\n\n[Check condition here.]\n\nSuccess/failure\n\n[Check condition here.]\n\n\n\n\n\nExercise 7(c)\nIf the conditions are met, we can use a normal model as the sampling distribution model. What are the mean and standard error of this model? (You should use inline R code to calculate and report the standard error.)\n\nPlease write up your answer here.\n\n\n\nExercise 7(d)\nMarket analysis shows that unless the drug is effective in more than 85% of patients, doctors won’t prescribe it. Secretly, we know that the true rate of effectiveness is 83%, but the manufacturer doesn’t know that yet. They only have access to their drug trial data in which they had 143 patients with high cholesterol.\nUsing the normal model you just developed, determine how likely the drug trial data will be to show the drug as “effective” according to the 85% standard. In other words, how often will our sample give us a result that is 85% or higher (even though secretly we know the true effectiveness is only 83%)? Report your answer in a contextually-meaningful full sentence using inline R code. (Hint: you’ll need to use the pdist command.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#conclusion",
    "href": "14-sampling_distribution_models-web.html#conclusion",
    "title": "14  Sampling distribution models",
    "section": "14.7 Conclusion",
    "text": "14.7 Conclusion\nIt is very easy to work with normal models. Therefore, when we want to study sampling variability, it is useful to have a normal model as a sampling distribution model. The standard error is a measure of how variable random samples can be. Such variability naturally decreases as our sample size grows. (This makes sense: larger samples give us more precise estimates of the true population, so they should be “closer” to the true population value.) Once conditions are checked, we can use normal models to make predictions about what we are likely to see when we sample from the population.\n\n14.7.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "14-sampling_distribution_models-web.html#footnotes",
    "href": "14-sampling_distribution_models-web.html#footnotes",
    "title": "14  Sampling distribution models",
    "section": "",
    "text": "Most polls in the 2016 presidential election predicted a win for Hillary Clinton, so they also gave the wrong answer. It’s possible that some of them were accidentally wrong due to sampling variability, but a much more likely explanation for their overall failure was bias.↩︎",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Sampling distribution models</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html",
    "href": "15-inference_for_one_proportion-web.html",
    "title": "15  Inference for one proportion",
    "section": "",
    "text": "15.1 Introduction\nOur earlier work with simulations showed us that when the number of successes and failures is large enough, we can use a normal model as our sampling distribution model.\nWe revisit hypothesis tests for a single proportion, but now, instead of running a simulation to compute the P-value, we take the shortcut of computing the P-value directly from a normal model.\nThere are no new concepts here. All we are doing is revisiting the rubric for inference and making the necessary changes.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#introduction",
    "href": "15-inference_for_one_proportion-web.html#introduction",
    "title": "15  Inference for one proportion",
    "section": "",
    "text": "15.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n15.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/15-inference_for_one_proportion.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n15.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#load-packages",
    "href": "15-inference_for_one_proportion-web.html#load-packages",
    "title": "15  Inference for one proportion",
    "section": "15.2 Load packages",
    "text": "15.2 Load packages\nWe load the standard tidyverse, janitor and infer packages as well as the openintro package to access data on heart transplant candidates. We’ll include mosaic for one spot below when we compare the results of infer to the results of graphing a normal distribution using qdist.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:openintro':\n\n    dotPlot\n\nThe following objects are masked from 'package:infer':\n\n    prop_test, t_test\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#revisiting-the-rubric-for-inference",
    "href": "15-inference_for_one_proportion-web.html#revisiting-the-rubric-for-inference",
    "title": "15  Inference for one proportion",
    "section": "15.3 Revisiting the rubric for inference",
    "text": "15.3 Revisiting the rubric for inference\nInstead of running a simulation, we are going to assume that the sampling distribution can be modeled with a normal model as long as the conditions for using a normal model are met.\nAlthough the rubric has not changed, the use of a normal model changes quite a bit about the way we go through the other steps. For example, we won’t have simulated values to give us a histogram of the null model. Instead, we’ll go straight to graphing a normal model. We won’t compute the percent of our simulated samples that are at least as extreme as our test statistic to get the P-value. The P-value from a normal model is found directly from shading the model.\nWhat follows is a fully-worked example of inference for one proportion. After the hypothesis test (sometimes called a one-proportion z-test for reasons that will become clear), we also follow up by computing a confidence interval. From now on, we will consider inference to consist of a hypothesis test and a confidence interval. Whenever you’re asked a question that requires statistical inference, you should follow both the rubric steps for a hypothesis test and for a confidence interval.\nThe example below will pause frequently for commentary on the steps, especially where their execution will be different from what you’ve seen before when you used simulation. When it’s your turn to work through another example on your own, you should follow the outline of the rubric, but you should not copy and paste the commentary that accompanies it.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#research-question",
    "href": "15-inference_for_one_proportion-web.html#research-question",
    "title": "15  Inference for one proportion",
    "section": "15.4 Research question",
    "text": "15.4 Research question\nData from the Stanford University Heart Transplant Study is located in the openintro package in a data frame called heart_transplant. From the help file we learn, “Each patient entering the program was designated officially a heart transplant candidate, meaning that he was gravely ill and would most likely benefit from a new heart.” Survival rates are not good for this population, although they are better for those who receive a heart transplant. Do heart transplant recipients still have less than a 50% chance of survival?",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#exploratory-data-analysis",
    "href": "15-inference_for_one_proportion-web.html#exploratory-data-analysis",
    "title": "15  Inference for one proportion",
    "section": "15.5 Exploratory data analysis",
    "text": "15.5 Exploratory data analysis\n\n15.5.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nStart by typing ?heart_transplant at the Console or searching for heart_transplant in the Help tab to read the help file.\n\nExercise 1\nAt the bottom of the help file, there is a URL listed for the “Source”. Click on this link. Is there any information about the provenance of the data at this link?\nNext, look at the paper listed under “References” (a 1974 article by authors Turnbull, Brown, and Hu). How can you tell that this “reference” is not, in fact, a direct reference to a medical research article reporting on the Stanford University Heart Transplant Study?\nFinally, do an internet search to find the original research article from 1974. Why is this search process also not likely to help you determine the provenance of the data?\n\nPlease write up your answer here.\n\n\nNow that we have learned everything we can reasonably learn about the data, we print it out and look at the variables.\n\nheart_transplant\n\n\n  \n\n\n\n\nglimpse(heart_transplant)\n\nRows: 103\nColumns: 8\n$ id         &lt;int&gt; 15, 43, 61, 75, 6, 42, 54, 38, 85, 2, 103, 12, 48, 102, 35,…\n$ acceptyear &lt;int&gt; 68, 70, 71, 72, 68, 70, 71, 70, 73, 68, 67, 68, 71, 74, 70,…\n$ age        &lt;int&gt; 53, 43, 52, 52, 54, 36, 47, 41, 47, 51, 39, 53, 56, 40, 43,…\n$ survived   &lt;fct&gt; dead, dead, dead, dead, dead, dead, dead, dead, dead, dead,…\n$ survtime   &lt;int&gt; 1, 2, 2, 2, 3, 3, 3, 5, 5, 6, 6, 8, 9, 11, 12, 16, 16, 16, …\n$ prior      &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no,…\n$ transplant &lt;fct&gt; control, control, control, control, control, control, contr…\n$ wait       &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, 5, NA, NA, NA, NA, NA, NA, NA, …\n\n\nCommentary: The variable of interest is survived, which is coded as a factor variable with two categories, “alive” and “dead”. Keep in mind that because we are interested in survival rates, the “alive” condition will be considered the “success” condition.\nThere are 103 patients, but we are not considering all these patients. Our sample should consist of only those patients who actually received the transplant. The following table shows that only 69 patients were in the “treatment” group (meaning that they received a heart transplant).\n\ntabyl(heart_transplant, transplant) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\n\n\n15.5.2 Prepare the data for analysis.\nFirst, we check for missing data:\n\nheart_transplant |&gt;\n  drop_na(transplant) |&gt;\n  NROW()\n\n[1] 103\n\n\nSince there are still 103 rows, we have no missing data in the variable of interest.\nCommentary: This is the same as we’ve done before, except that we added the NROW() command as a handy summary that just counts the number of rows.\nCAUTION: If you are copying and pasting from this example to use for another research question, the following code chunk is specific to this research question and not applicable in other contexts.\nWe need to use filter so we get only the patients who actually received the heart transplant.\n\n# Do not copy and paste this code for future work\nheart_transplant2 &lt;- heart_transplant |&gt;\n  filter(transplant == \"treatment\")\nheart_transplant2\n\n\n  \n\n\n\nCommentary: don’t forget the double equal sign (==) that checks whether the treatment variable is equal to the value “treatment”. (See the Chapter 5 if you’ve forgotten how to use filter.) Note that this reduces the sample size to 69 for the remainder of this hypothesis test.\nAgain, this step isn’t something you need to do for other research questions. This question is peculiar because it asks only about patients who received a heart transplant, and that only involves a subset of the data we have in the heart_transplant data frame.\n\n\n15.5.3 Make tables or plots to explore the data visually.\nMaking sure that we refer from now on to the heart_transplant2 data frame and not the original heart_transplant data frame:\n\ntabyl(heart_transplant2, survived) |&gt;\n  adorn_totals()",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#hypotheses",
    "href": "15-inference_for_one_proportion-web.html#hypotheses",
    "title": "15  Inference for one proportion",
    "section": "15.6 Hypotheses",
    "text": "15.6 Hypotheses\n\n15.6.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of 69 heart transplant recipients in a study at Stanford University. The population of interest is presumably all heart transplants recipients.\n\n\n15.6.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) Heart transplant recipients have a 50% chance of survival.\n\\(H_{A}:\\) Heart transplant recipients have less than a 50% chance of survival.\nCommentary: It is slightly unusual that we are conducting a one-sided test. The standard default is typically a two-sided test. However, it is not for us to choose: the proposed research question is unequivocal in hypothesizing “less than 50%” survival.\n\n\n15.6.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: p_{alive} = 0.5\\)\n\\(H_{A}: p_{alive} &lt; 0.5\\)",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#model",
    "href": "15-inference_for_one_proportion-web.html#model",
    "title": "15  Inference for one proportion",
    "section": "15.7 Model",
    "text": "15.7 Model\n\n15.7.1 Identify the sampling distribution model.\nWe will use a normal model.\nCommentary: In past chapters, we have simulated the sampling distribution or applied some kind of randomization to simulate the effect of the null hypothesis. The point of this chapter is that we can—when the conditions are met—substitute a normal model to replace the unimodal and symmetric histogram that resulted from randomization and simulation.\n\n\n15.7.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nSince the 69 patients are from a study at Stanford, we do not have a random sample of all heart transplant recipients. We hope that the patients recruited to this study were physiologically similar to other heart patients so that they are a representative sample. Without more information, we have no real way of knowing.\n\n10%\n\n69 patients are definitely less than 10% of all heart transplant recipients.\n\nSuccess/failure\n\n\\[\nnp_{alive} = 69(0.5) = 34.5 \\geq 10\n\\]\n\\[\nn(1 - p_{alive}) = 69(0.5) = 34.5 \\geq 10\n\\]\nCommentary: Notice something interesting here. Why did we not use the 24 patients who survived and the 45 who died as the successes and failures? In other words, why did we use \\(np_{alive}\\) and \\(n(1 - p_{alive})\\) instead of \\(n \\hat{p}_{alive}\\) and \\(n(1 - \\hat{p}_{alive})\\)?\nRemember the logic of inference and the philosophy of the null hypothesis. To convince the skeptics, we must assume the null hypothesis throughout the process. It’s only after we present sufficient evidence that can we reject the null and fall back on the alternative hypothesis that encapsulates our research question.\nTherefore, under the assumption of the null, the sampling distribution is the null distribution, meaning that it’s centered at 0.5. All work we do with the normal model, including checking conditions, must use the null model with \\(p_{alive}= 0.5\\).\nThat’s also why the numbers don’t have to be whole numbers. If the null states that of the 69 patients, 50% are expected to survive, then we expect 50% of 69, or 34.5, to survive. Of course, you can’t have half of a survivor. But these are not actual survivors. Rather, they are the expected number of survivors in a group of 69 patients on average under the assumption of the null.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#mechanics",
    "href": "15-inference_for_one_proportion-web.html#mechanics",
    "title": "15  Inference for one proportion",
    "section": "15.8 Mechanics",
    "text": "15.8 Mechanics\n\n15.8.1 Compute the test statistic.\n\nalive_prop &lt;- heart_transplant2 |&gt;\n  specify(response = survived, success = \"alive\") |&gt;\n  calculate(stat = \"prop\")\nalive_prop\n\n\n  \n\n\n\nWe’ll also compute the corresponding z score.\n\nalive_z &lt;- heart_transplant2 |&gt;\n  specify(response = survived, success = \"alive\") |&gt;\n  hypothesize(null = \"point\", p = 0.5) |&gt;\n  calculate(stat = \"z\")\nalive_z\n\n\n  \n\n\n\nCommentary: The sample proportion code is straightforward and we’ve seen it before. To get the z score, we also have to tell infer what the null hypothesis is so that it knows where the center of our normal distribution will be. In the hypothesize function, we tell infer to use a “point” null hypothesis with p = 0.5. All this means is that the null is a specific point: 0.5. (Contrast this to hypothesis tests with two variables when we had null = \"independence\".)\nWe can confirm the calculation of the z score manually. It’s easiest to compute the standard error first. Recall that the standard error is\n\\[\nSE = \\sqrt{\\frac{p_{alive}(1 - p_{alive})}{n}} = \\sqrt{\\frac{0.5(1 - 0.5)}{69}}\n\\]\nRemember that are working under the assumption of the null hypothesis. This means that we use \\(p_{alive} = 0.5\\) everywhere in the formula for the standard error.\nWe can do the math in R and store our result as SE.\n\nSE &lt;- sqrt(0.5*(1 - 0.5)/69)\nSE\n\n[1] 0.06019293\n\n\nThen our z score is\n\\[\nz = \\frac{(\\hat{p}_{alive} - p_{alive})}{SE} =  \\frac{(\\hat{p}_{alive} - p_{alive})}{\\sqrt{\\frac{p_{alive} (1 - p_{alive})}{n}}} = \\frac{(0.348 - 0.5)}{\\sqrt{\\frac{0.5 (1 - 0.5)}{69}}} =  -2.53.\n\\]\nUsing the values of alive_prop and SE:\n\nz &lt;- (alive_prop - 0.5)/SE\nz\n\n\n  \n\n\n\nBoth the sample proportion \\(\\hat{p}_{alive}\\) (stored above as alive_prop) and the corresponding z-score can be considered the “test statistic”. If we use \\(\\hat{p}_{alive}\\) as the test statistic, then we’re considering the null model to be\n\\[\nN\\left(0.5, \\sqrt{\\frac{0.5 (1 - 0.5)}{69}}\\right).\n\\]\nIf we use z as the test statistic, then we’re considering the null model to be the standard normal model:\n\\[\nN(0, 1).\n\\]\nThe standard normal model is more intuitive and easier to work with, both conceptually and in R. Generally, then, we will consider z as the test statistic so that we can consider our null model to be the standard normal model. For example, knowing that our test statistic is two and a half standard deviations to the left of the null value already tells us a lot. We can anticipate a small P-value leading to rejection of the null. Nevertheless, for this type of hypothesis test, we’ll compute both in this section of the rubric.\n\n\n15.8.2 Report the test statistic in context (when possible).\nThe test statistic is 0.3478261. In other words, 34.7826087% of heart transplant recipients were alive at the end of the study.\nThe z score is -2.5281029. The proportion of survivors is about 2.5 standard errors below the null value.\nCommentary: It’s useful to report both versions of the test statistic. One tells us the value from the data. The other tells us how many standard deviations that value lies from the null value. Both are contextually meaningful.\n\n\n15.8.3 Plot the null distribution.\n\nalive_test &lt;- heart_transplant2 |&gt;\n  specify(response = survived, success = \"alive\") |&gt;\n  hypothesize(null = \"point\", p = 0.5) |&gt;\n  assume(distribution = \"z\")\nalive_test\n\nA Z distribution.\n\n\n\nalive_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = alive_z, direction = \"less\")\n\n\n\n\n\n\n\n\nCommentary: be sure to use alive_z here (and not alive_prop). The infer package assumes a standard normal model, centered at 0 with standard deviation 1.\nIn past chapters, we have used the generate verb to get many repetitions (usually 1000) of some kind of random process to simulate the sampling distribution model. In this chapter, we have used the verb assume instead to assume that the sampling distribution is a normal model. As long as the conditions hold, this is a reasonable assumption. This also means that we don’t have to use set.seed as there is no random process to reproduce.\nCompare the graph above to what we would see if we simulated the sampling distribution. (Now we do need set.seed!)\n\nset.seed(6789)\nalive_test_draw &lt;- heart_transplant2 |&gt;\n  specify(response = survived, success = \"alive\") |&gt;\n  hypothesize(null = \"point\", p = 0.5) |&gt;\n  generate(reps = 1000, type = \"draw\") |&gt;\n  calculate(stat = \"prop\")\nalive_test_draw\n\n\n  \n\n\n\n\nalive_test_draw |&gt;\n  visualize() +\n  shade_p_value(obs_stat = alive_prop, direction = \"less\")\n\n\n\n\n\n\n\n\nThis is essentially the same picture, although the model above is centered on the null value 0.5 instead of the z score of 0. (This also means that the obs_stat had to be the sample proportion alive_prop and not the z score alive_z, but we’re only using alive_prop and simulations here to illustrate the point that the normal model and the simulation result in essentially the same model.)\n\n\n15.8.4 Calculate the P-value.\n\nalive_test_p &lt;- alive_test |&gt;\n  get_p_value(obs_stat = alive_z, direction = \"less\")\nalive_test_p\n\n\n  \n\n\n\nCommentary:\nAs before, there are two test statistics floating around: alive_prop and alive_z. Be sure to use alive_z here!\nWe can compare this to the P-value we get from simulating random draws:\n\nalive_test_draw |&gt;\n  get_p_value(obs_stat = alive_prop, direction = \"less\")\n\n\n  \n\n\n\nThe values are not exactly the same. And a new simulation with a different seed would likely give another slightly different P-value. The takeaway here is that the P-value itself has some uncertainty, so you should never take the value too seriously.\n\n\n15.8.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.005734. If there were truly a 50% chance of survival among heart transplant patients, there would only be a 0.5734037% chance of seeing data at least as extreme as we saw.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#conclusion",
    "href": "15-inference_for_one_proportion-web.html#conclusion",
    "title": "15  Inference for one proportion",
    "section": "15.9 Conclusion",
    "text": "15.9 Conclusion\n\n15.9.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n15.9.2 State (but do not overstate) a contextually meaningful conclusion.\nWe have sufficient evidence that heart transplant recipients have less than a 50% chance of survival.\n\n\n15.9.3 Express reservations or uncertainty about the generalizability of the conclusion.\nBecause we know nearly nothing about the provenance of the data, it’s hard to generalize the conclusion. We know the data is from 1974, so it’s also very likely that survival rates for heart transplant patients then are not the same as they are today. The most we could hope for is that the Stanford data was representative for heart transplant patients in 1974. Our sample size (69) is also quite small.\n\n\n15.9.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nAs we rejected the null, we run the risk of making a Type I error. It is possible that the null is true and that there is a 50% chance of survival for these patients, but we got an unusual sample that appears to have a much smaller chance of survival.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#confidence-interval",
    "href": "15-inference_for_one_proportion-web.html#confidence-interval",
    "title": "15  Inference for one proportion",
    "section": "15.10 Confidence interval",
    "text": "15.10 Confidence interval\n\n15.10.1 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nSame as above.\n\n10%\n\nSame as above.\n\nSuccess/failure\n\nThere were 24 patients who survived and 45 who died in our sample. Both are larger than 10.\n\n\nCommentary: In the “Confidence interval” section of the rubric, there is no need to recheck conditions that have already been checked. The sample has not changed; if it met the “Random” and “10%” conditions before, it will meet them now.\nSo why recheck the success/failure condition?\nKeep in mind that in a hypothesis test, we temporarily assume the null is true. The null states that \\(p = 0.5\\) and the resulting null distribution is, therefore, centered at \\(p = 0.5\\). The success/failure condition is a condition that applies to the normal model we’re using, and for a hypothesis test, that’s the null model.\nBy contrast, a confidence interval is making no assumption about the “true” value of \\(p\\). The inferential goal of a confidence interval is to try to capture the true value of \\(p\\), so we certainly cannot make any assumptions about it.\nSo what can we do to check the success/failure condition without a “true” value for \\(p\\)? Whenever we are lacking a true population parameter, the best we can do is substitute our best guess for the value of that parameter. And our best guess for the true population proportion \\(p\\) is our sample proportion \\(\\hat{p}\\).\nInstead of \\(np\\) and \\(n(1 - p)\\), then, we can calculate \\(n\\hat{p}\\) and \\(n(1 - \\hat{p})\\):\n\\[\nn\\hat{p} = 69 * 0.3478261 = 24\n\\]\n\\[\nn(1 - \\hat{p}) = 69 * (1 - 0.3478261) = 45\n\\]\nBut 24 and 45 are the actual number of successes and failures from the data! This makes sense: if you multiply the sample size (69) by the proportion of people who survived the heart transplant, you get the number of people who survived the heart transplant.\nSo, for confidence intervals, we simply report the number of successes and failures in the data and check that each is at least 10.\n\n\n15.10.2 Calculate and graph the confidence interval.\n\nalive_ci &lt;- alive_test |&gt;\n  get_confidence_interval(point_estimate = alive_prop, level = 0.95)\nalive_ci\n\n\n  \n\n\n\n\nalive_test |&gt;\n  visualize() +\n  shade_confidence_interval(endpoints = alive_ci)\n\n\n\n\n\n\n\n\nCommentary: when we use a theoretical normal distribution, we have to compute the confidence interval a different way.\nWhen we bootstrapped, we had many repetitions of a process that resulted in a sampling distribution. From all those, we could find the 2.5th percentile and the 97.5th percentile. Although we let the computer do it for us, the process is straightforward enough that we could do it by hand if we needed to. Just put all 1000 bootstrapped values in order, then go to the 25th and 975th position in the list.\nWe don’t have a list of 1000 values when we use an abstract curve to represent our sampling distribution. Nevertheless, we can find the 2.5th percentile and the 97.5th percentile using the area under the normal curve as we saw in the last two chapters. We can do this “manually” with the qdist command, but we need the standard error first.\nDidn’t we calculate this earlier?\n\\[\nSE = \\sqrt{\\frac{p_{alive}(1 - p_{alive})}{n}} = \\sqrt{\\frac{0.5(1 - 0.5)}{69}}\n\\]\nWell…sort of. The value of \\(p_{alive}\\) here is the value of the null hypothesis from the hypothesis test above. However, the hypothesis test is done. For a confidence interval, we have no information about any “null” value. There is no null anymore. It’s irrelevant.\nSo what is the standard error for a confidence interval? Since we don’t have \\(p_{alive}\\), the best we can do is replace it with \\(\\hat{p}_{alive}\\):\n\\[\nSE = \\sqrt{\\frac{\\hat{p}_{alive} (1 - \\hat{p}_{alive})}{n}} = \\sqrt{\\frac{0.3478261 (1 - 0.3478261 )}{69}}.\n\\]\nWe can let R do the heavy lifting here:\n\nSE2 &lt;- sqrt(alive_prop * (1 - alive_prop) / 69)\nSE2\n\n\n  \n\n\n\nAnd now this number can go into qdist as our standard deviation:\n\nqdist(\"norm\", p = c(0.025, 0.975), mean = 0.3478261, sd = 0.05733743, plot = FALSE)\n\n[1] 0.2354468 0.4602054\n\n\nThe numbers above are identical to the ones computed by the infer commands.\n\n\n15.10.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true percentage of heart transplant recipients who survive is captured in the interval (23.5446784%, 46.020539%).\nCommentary: Note that when we state our contextually meaningful conclusion, we also convert the decimal proportions to percentages. Humans like percentages a lot better.\n\n\n15.10.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nWe are not running a two-sided test, so this step is not applicable.\n\n\n15.10.5 Comment on the effect size and the practical significance of the result.\nWe estimate that between 24% and 46% of patients who received heart transplants survived. Even the most optimistic estimate is still below the null value of 50%. This is a significant difference and tells us that it’s not even close to a “coin flip.” Although we are told that survival rates are better when receiving a heart transplant versus not receiving one, there is a substantial risk of death, even with a heart transplant.\nCommentary: up to this point in the course, we had scenarios in which we had run hypothesis tests but not confidence intervals, or confidence intervals but not hypothesis tests. This is the first time we’ve run both, so we are now in a position to opine about effect size. The idea is to compare the range of values from the confidence interval to the null value. What is the worst-case scenario? What is the best-case scenario? In either event, is the magnitude of the difference clinically important to these patients? A 1% difference might not be, but a 10% difference might be.\nIt’s not enough just to reject the null hypothesis and calculate a confidence interval. We want to indicate whether the data makes a strong case about the research question. A statistically discernible result alone (a P-value less than 0.05) will tell us only that we can confidently reject the null. But that cannot tell us if the result in meaningful in a real-world setting.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#your-turn",
    "href": "15-inference_for_one_proportion-web.html#your-turn",
    "title": "15  Inference for one proportion",
    "section": "15.11 Your turn",
    "text": "15.11 Your turn\nFollow the rubric to answer the following research question:\nSome heart transplant candidates have already had a prior surgery. Use the variable prior in the heart_transplant data set to determine if fewer than 50% of patients have had a prior surgery. (To be clear, you are being asked to perform a one-sided test again.) Be sure to use the full heart_transplant data, not the modified heart_transplant2 from the previous example.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the tibbles and variables to adapt the worked examples to your own work. For example, if you run a two-sided test instead of a one-sided test, there are a few places that have to be adjusted accordingly. Understanding the sampling distribution model and the computation of the P-value goes a long way toward understanding the changes that must be made. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere. In particular, you should use prior_test(instead of alive_test) to store the results of your hypothesis test. Make other corresponding changes as necessary, like prior_test_p instead of alive_test_p, for example.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n[Remember that you are using the full heart_transplant data, so your sample size should be larger here than in the example above.]\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n[Remember that you are using the full heart_transplant data, so the number of successes and failures will be different here than in the example above.]\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n[Be sure to use heart_transplant everywhere and not heart_transplant2!]\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic as a proportion.\n\n\n# Add code here to compute the test statistic as a z score.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n[Be sure to use the z score here, not the sample proportion!]\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.\n\n\n\n\nConfidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nWhen comparing two groups, comment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "15-inference_for_one_proportion-web.html#conclusion-2",
    "href": "15-inference_for_one_proportion-web.html#conclusion-2",
    "title": "15  Inference for one proportion",
    "section": "15.12 Conclusion",
    "text": "15.12 Conclusion\nWhen certain conditions are met, we can use a theoretical normal model—a perfectly symmetric bell curve—as a sampling distribution model in hypothesis testing. Because this does not require drawing many samples, it is faster and cleaner than simulation. Of course, on modern computing devices, drawing even thousands of simulated samples is not very time consuming, and the code we write doesn’t really change much. Given the additional success/failure condition that has to met, it’s worth considering the pros and cons of using a normal model instead of simulating the sampling distribution. Similarly, confidence intervals can be obtained directly from the percentiles of the normal model without the need to obtain bootstrapped samples.\n\n15.12.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Inference for one proportion</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html",
    "href": "16-inference_for_two_proportions-web.html",
    "title": "16  Inference for two proportions",
    "section": "",
    "text": "16.1 Introduction\nIn this chapter, we revisit the idea of inference for two proportions, but this time using a normal model as the sampling distribution model.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#introduction",
    "href": "16-inference_for_two_proportions-web.html#introduction",
    "title": "16  Inference for two proportions",
    "section": "",
    "text": "16.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n16.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/16-inference_for_two_proportions.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n16.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#load-packages",
    "href": "16-inference_for_two_proportions-web.html#load-packages",
    "title": "16  Inference for two proportions",
    "section": "16.2 Load packages",
    "text": "16.2 Load packages\nWe load the standard tidyverse, janitor and infer packages as well as the MASS package for the Melanoma data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#research-question",
    "href": "16-inference_for_two_proportions-web.html#research-question",
    "title": "16  Inference for two proportions",
    "section": "16.3 Research question",
    "text": "16.3 Research question\nIn an earlier chapter, we used the data set Melanoma from the MASS package to explore the possibility of a sex bias among patients with melanoma. A related question is whether male or females are more likely to die from melanoma. In this case, we are thinking of status as the response variable and sex as the predictor variable.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#the-sampling-distribution-model-for-two-proportions",
    "href": "16-inference_for_two_proportions-web.html#the-sampling-distribution-model-for-two-proportions",
    "title": "16  Inference for two proportions",
    "section": "16.4 The sampling distribution model for two proportions",
    "text": "16.4 The sampling distribution model for two proportions\nWhen we simulated a sampling distribution using randomization (shuffling the values of the predictor variable), it looked like the simulated sampling distribution was roughly normal. Therefore, we should be able to use a normal model in place of randomization when we want to perform statistical inference.\nThe question is, “Which normal model?” In other words, what is the mean and standard deviation we should use?\nSince we have two groups, let’s call the true proportion of success \\(p_{1}\\) for group 1 and \\(p_{2}\\) for group 2. Therefore, the true difference between groups 1 and 2 in the population is \\(p_{1} - p_{2}\\). If we sample repeatedly from groups 1 and 2 and form many sample differences \\(\\hat{p}_{1} - \\hat{p}_{2}\\), we should expect most of the values \\(\\hat{p}_{1} - \\hat{p}_{2}\\) to be close to the true difference \\(p_{1} - p_{2}\\). In other words, the sampling distribution is centered at a mean of \\(p_{1} - p_{2}\\).\nWhat about the standard error? This is much more technical and complicated. Here is the formula, whose derivation is outside the scope of the course:\n\\[\n\\sqrt{\\frac{p_{1} (1 - p_{1})}{n_{1}} + \\frac{p_{2} (1 - p_{2})}{n_{2}}}.\n\\]\nSo the somewhat complicated normal model is\n\\[\nN\\left( p_{1} - p_{2}, \\sqrt{\\frac{p_{1} (1 - p_{1})}{n_{1}} + \\frac{p_{2} (1 - p_{2})}{n_{2}}} \\right).\n\\]\nWhen we ran hypothesis tests for one proportion, the true proportion \\(p\\) was assumed to be known, set equal to some null value. Therefore, we could calculate the standard error \\(\\sqrt{\\frac{p(1 - p)}{n}}\\) under the assumption of the null.\nWe also have a null hypothesis for two proportions. When comparing two groups, the default assumption is that the two groups are the same. This translates into the mathematical statement \\(p_{1} - p_{2} = 0\\) (i.e., there is no difference between \\(p_{1}\\) and \\(p_{2}\\)).\nBut there is a problem here. Although we are assuming something about the difference \\(p_{1} - p_{2}\\), we are not assuming anything about the actual values of \\(p_{1}\\) and \\(p_{2}\\). For example, both groups could be 0.3, or 0.6, or 0.92, or whatever, and the difference between the groups would still be zero.\nWithout values of \\(p_{1}\\) and \\(p_{2}\\), we cannot plug anything into the standard error formula above. One easy “cheat” is to just use the sample values \\(\\hat{p}_{1}\\) and \\(\\hat{p}_{2}\\):\n\\[\nSE = \\sqrt{\\frac{\\hat{p}_{1} (1 - \\hat{p}_{1})}{n_{1}} + \\frac{\\hat{p}_{2} (1 - \\hat{p}_{2})}{n_{2}}}.\n\\]\nThere is a more sophisticated way to address this called “pooling”. This more advanced concept is covered in an optional appendix to this chapter.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#inference-for-two-proportions",
    "href": "16-inference_for_two_proportions-web.html#inference-for-two-proportions",
    "title": "16  Inference for two proportions",
    "section": "16.5 Inference for two proportions",
    "text": "16.5 Inference for two proportions\nBelow is a fully-worked example of inference (hypothesis test and confidence interval) for two proportions. When you work your own example, you can thoughtfully copy and paste the R code, making changes as necessary.\nThe example below will pause frequently for commentary on the steps, especially where their execution will be different from what you’ve seen before when you used randomization. When it’s your turn to work through another example on your own, you should follow the outline of the rubric, but you should not copy and paste the commentary that accompanies it.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#exploratory-data-analysis",
    "href": "16-inference_for_two_proportions-web.html#exploratory-data-analysis",
    "title": "16  Inference for two proportions",
    "section": "16.6 Exploratory data analysis",
    "text": "16.6 Exploratory data analysis\n\n16.6.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nType ?Melanoma at the Console to read the help file. We discussed this data back in Chapter 11 and determined that it was difficult, if not impossible, to discover anything useful about the true provenance of the data. We can, at least, print the data out and examine the variables\n\nMelanoma\n\n\n  \n\n\n\n\nglimpse(Melanoma)\n\nRows: 205\nColumns: 7\n$ time      &lt;int&gt; 10, 30, 35, 99, 185, 204, 210, 232, 232, 279, 295, 355, 386,…\n$ status    &lt;int&gt; 3, 3, 2, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, …\n$ sex       &lt;int&gt; 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, …\n$ age       &lt;int&gt; 76, 56, 41, 71, 52, 28, 77, 60, 49, 68, 53, 64, 68, 63, 14, …\n$ year      &lt;int&gt; 1972, 1968, 1977, 1968, 1965, 1971, 1972, 1974, 1968, 1971, …\n$ thickness &lt;dbl&gt; 6.76, 0.65, 1.34, 2.90, 12.08, 4.84, 5.16, 3.22, 12.88, 7.41…\n$ ulcer     &lt;int&gt; 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n\n\n\n\n16.6.2 Prepare the data for analysis.\nCheck for missing data:\n\nMelanoma |&gt;\n  drop_na(sex, status) |&gt;\n  NROW()\n\n[1] 205\n\n\nThere are still 205 rows, so no missing data here.\nThe two variables of interest are status and sex. We are considering them as categorical variables, but they are recorded numerically in the data frame. We convert them to proper factor variables using the help file to identify the levels and labels we need.\nThere is a minor hitch with status. The help file shows three categories: 1. died from melanoma, 2. alive, 3. dead from other causes. For two-proportion inference, it would be better to have two categories only, a success category and a failure category. Since our research question asks about deaths due to melanoma, the “success” condition is the one numbered 1 in the help file, “died from melanoma”. That means we need to combine the other two categories into a single failure category. Perhaps we should call it “other”. You can accomplish this by simply repeating the “other” label more than once in the factor command:\n\nMelanoma &lt;- Melanoma |&gt;\n  mutate(sex_fct = factor(sex,\n                          levels = c(0, 1),\n                          labels = c(\"female\", \"male\")),\n         status_fct = factor(status,\n                             levels = c(1, 2, 3),\n                             labels = c(\"died from melanoma\",\n                                        \"other\",\n                                        \"other\")))\nglimpse(Melanoma)\n\nRows: 205\nColumns: 9\n$ time       &lt;int&gt; 10, 30, 35, 99, 185, 204, 210, 232, 232, 279, 295, 355, 386…\n$ status     &lt;int&gt; 3, 3, 2, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1,…\n$ sex        &lt;int&gt; 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,…\n$ age        &lt;int&gt; 76, 56, 41, 71, 52, 28, 77, 60, 49, 68, 53, 64, 68, 63, 14,…\n$ year       &lt;int&gt; 1972, 1968, 1977, 1968, 1965, 1971, 1972, 1974, 1968, 1971,…\n$ thickness  &lt;dbl&gt; 6.76, 0.65, 1.34, 2.90, 12.08, 4.84, 5.16, 3.22, 12.88, 7.4…\n$ ulcer      &lt;int&gt; 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ sex_fct    &lt;fct&gt; male, male, male, female, male, male, male, female, male, f…\n$ status_fct &lt;fct&gt; other, other, other, other, died from melanoma, died from m…\n\n\n\nExercise 1\nObserve the new variables sex_fct and status_fct in the glimpse output above. How can we check that the categories got assigned correctly and match the original sex and status variables?\n\nPlease write up your answer here.\n\n\n\n\n16.6.3 Make tables or plots to explore the data visually.\nAs these are two categorical variables, we should look at contingency tables (both counts and percentages). The variable status is the response and sex is the predictor.\n\ntabyl(Melanoma, status_fct, sex_fct) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\ntabyl(Melanoma, status_fct, sex_fct) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\") |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nCommentary: You can see why column percentages are necessary in a contingency table. There are 28 females and 29 males who died from melanoma, almost a tie. However, there are more females (126) than there are males (79) who have melanoma in this data set. So the proportion of males who died from melanoma is quite a bit larger.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#hypotheses",
    "href": "16-inference_for_two_proportions-web.html#hypotheses",
    "title": "16  Inference for two proportions",
    "section": "16.7 Hypotheses",
    "text": "16.7 Hypotheses\n\n16.7.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThere are two samples: 126 female patients and 79 male patients in Denmark with malignant melanoma. In order for these samples to be representative of their respective populations, we should probably restrict our conclusions to the population of all females and males in Denmark with malignant melanoma, although we might be able to make the case that these females and males could be representative of people in other countries who have malignant melanoma.\n\n\n16.7.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) There is no difference between the rate at which women and men in Denmark die from malignant melanoma.\n\\(H_{A}:\\) There is a difference between the rate at which women and men in Denmark die from malignant melanoma.\nOR\n\\(H_{0}:\\) In Denmark, death from malignant melanoma is independent of sex.\n\\(H_{A}:\\) In Denmark, death from malignant melanoma is associated with sex.\nCommentary: Either of these forms is correct. The former makes it a little easier to figure out how to express the hypotheses mathematically in the next step. The latter reminds us that the hypothesize step of the infer pipeline will require a null of independence.\n\n\n16.7.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: p_{died, F} - p_{died, M} = 0\\)\n\\(H_{A}: p_{died, F} - p_{died, M} \\neq 0\\)\nCommentary: The order in which you subtract is irrelevant to the inferential process. However, you should be sure that any future steps respect the order you choose here. To be on the safe side, it’s always best to subtract in the order in which the factor was created. So in the contingency tables above, females are listed first, and that’s because “female” was the first label we used when we created the sex_fct variable. So we’ll subtract females minus males throughout the remaining steps.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#model",
    "href": "16-inference_for_two_proportions-web.html#model",
    "title": "16  Inference for two proportions",
    "section": "16.8 Model",
    "text": "16.8 Model\n\n16.8.1 Identify the sampling distribution model.\nWe will use a normal model.\n\n\n16.8.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nAs observed in a previous chapter when we used this data set before, We have no information about how these samples were obtained. We hope the 126 female patients and 79 male patients are representative of other Danish patients with malignant melanoma.\n\n10%\n\nWe don’t know exactly how many people in Denmark suffer from malignant melanoma, but we could imagine over time it’s more than 1260 females and 790 males.\n\nSuccess/Failure\n\nChecking the contingency table above (the one with counts), we see the numbers 28 and 98 (the successes and failures among females), and 29 and 50 (the successes and failures among males). These are all larger than 10.\n\n\nCommentary: Ideally, for the success/failure condition we would like to check \\(n_{1} p_{1}\\), \\(n_{1} (1 - p_{1})\\), \\(n_{2} p_{2}\\), and \\(n_{2} (1 - p_{2})\\); however, the null makes no claim about the values of \\(p_{1}\\) and \\(p_{2}\\). We do the next best thing and estimate these by substituting the sample proportions \\(\\hat{p}_{1}\\) and \\(\\hat{p}_{2}\\). But \\(n_{1} \\hat{p}_{1}\\) and \\(n_{2} \\hat{p}_{2}\\) are just the raw counts of successes in each group. Likewise, \\(n_{1} (1 - \\hat{p}_{1})\\) and \\(n_{2} (1 - \\hat{p}_{2})\\) are just the raw counts of failures in each group. That’s why we can just read them off the contingency table.\nFor a more sophisticated approach, one could also use “pooled proportions”. See the optional appendix to this chapter for more information.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#mechanics",
    "href": "16-inference_for_two_proportions-web.html#mechanics",
    "title": "16  Inference for two proportions",
    "section": "16.9 Mechanics",
    "text": "16.9 Mechanics\n\n16.9.1 Compute the test statistic.\n\nobs_diff &lt;- Melanoma |&gt;\n  observe(status_fct ~ sex_fct, success = \"died from melanoma\",\n          stat = \"diff in props\", order = c(\"female\", \"male\"))\nobs_diff\n\n\n  \n\n\n\nThe test statistic is the difference of proportions in the sample, \\(\\hat{p}_{died, F} - \\hat{p}_{died, M}\\):\n\\[\n\\hat{p}_{died, F} - \\hat{p}_{died, M} = 0.222 - 0.367 = -0.145\n\\]\nAs a z-score:\n\nobs_diff_z &lt;- Melanoma |&gt;\n  observe(status_fct ~ sex_fct, success = \"died from melanoma\",\n          stat = \"z\", order = c(\"female\", \"male\"))\nobs_diff_z\n\n\n  \n\n\n\nCommentary: We can confirm the value of the z-score manually just to make sure we understand where it comes from.\nThe standard error looks like the following:\n\\[\nSE = \\sqrt{\\frac{\\hat{p}_{died, F} (1 - \\hat{p}_{died, F})}{n_{F}} + \\frac{\\hat{p}_{died, M} (1 - \\hat{p}_{died, M})}{n_M}}\n\\]\nPlugging in the numbers from the exploratory data analysis output:\n\\[\nSE = \\sqrt{\\frac{0.222 (1 - 0.222)}{126} + \\frac{0.367 (1 - 0.367)}{79}}\n\\]\nIn R,\n\nsqrt(0.222 * (1 - 0.222) / 126 + 0.367 * (1 - 0.367) / 79)\n\n[1] 0.06566131\n\n\nNow our z-score formula is\n\\[\nz = \\frac{(\\hat{p}_{died, F} - \\hat{p}_{died, M}) - (p_{died, F} - p_{died, M})}{SE}\n\\]\nThe first term in the numerator \\((\\hat{p}_{died, F} - \\hat{p}_{died, M})\\) is our test statistic, -0.145. The second term in the numerator \\((p_{died, F} - p_{died, M})\\) is zero according to the null hypothesis. Plugging all that in, along with the value of SE, gives\n\\[\nz = \\frac{-0.145 - 0}{0.066} \\approx -2.2\n\\]\nOther than a little rounding error (since we rounded everything in sight to three decimal places instead of keeping more precision), this is what the infer output also reported.\n\n\n16.9.2 Report the test statistic in context (when possible).\nIn our sample, there is a -14.4866385% difference between the rate at which women and men in Denmark die from malignant melanoma (meaning that males died at a higher rate).\nThe test statistic has a z score of -2.2530721. The difference in proportions between the rate at which women and men in Denmark die from malignant melanoma lies a bit more than 2 standard errors to the left of the null value.\nCommentary: Note the phrase “meaning that males died at a higher rate”. If you are looking at a difference, you must indicate the direction of the difference. Without that, we would know that there was a difference, but we would have no idea whether women or men die more from malignant melanoma. Once we know that we are subtracting female minus male, then given the values are negative, we can infer that males die from malignant melanoma more often than females in these samples.\n\n\n16.9.3 Plot the null distribution.\n\nstatus_sex_test &lt;- Melanoma |&gt;\n  specify(status_fct ~ sex_fct, success = \"died from melanoma\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  assume(distribution = \"z\")\nstatus_sex_test\n\nA Z distribution.\n\n\n\nstatus_sex_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = obs_diff_z, direction = \"two-sided\")\n\n\n\n\n\n\n\n\nCommentary: be sure to use the z score here (not the difference in proportions), stored as obs_diff_z!\nRemember that this is a two-sided test.The red line above is the location of the test statistic, but both tails are shaded and count toward the P-value.\n\n\n16.9.4 Calculate the P-value.\n\nstatus_sex_test_p &lt;- status_sex_test |&gt;\n  get_p_value(obs_stat = obs_diff_z, direction = \"two-sided\")\nstatus_sex_test_p\n\n\n  \n\n\n\nCommentary: again, be sure to use the z score obs_diff_z.\n\n\n16.9.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.0242546. If there were truly no difference between the rate at which women and men in Denmark die from malignant melanoma, there is only a 2.4254604% chance of seeing a difference in our data at least as extreme as what we saw.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#conclusion",
    "href": "16-inference_for_two_proportions-web.html#conclusion",
    "title": "16  Inference for two proportions",
    "section": "16.10 Conclusion",
    "text": "16.10 Conclusion\n\n16.10.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n16.10.2 State (but do not overstate) a contextually meaningful conclusion.\nWe have sufficient evidence to suggest that there is a difference between the rate at which women and men in Denmark die from malignant melanoma.\n\n\n16.10.3 Express reservations or uncertainty about the generalizability of the conclusion.\nWe echo the same concerns we had back in Chapter 11 when we first saw this data. We have no idea how these patients were sampled. Are these all the patients in Denmark with malignant melanoma over a certain period of time? Were they part of a convenience sample? As a result of our uncertainly about the sampling process, we can’t be sure if the results generalize to a larger population, either in Denmark or especially outside of Denmark.\n\n\n16.10.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we have made a Type I error, then there would actually be no difference between the rate at which women and men in Denmark die from malignant melanoma, but our samples showed a significant difference.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#confidence-interval",
    "href": "16-inference_for_two_proportions-web.html#confidence-interval",
    "title": "16  Inference for two proportions",
    "section": "16.11 Confidence interval",
    "text": "16.11 Confidence interval\n\n16.11.1 Check the relevant conditions to ensure that model assumptions are met.\nNone of the conditions have changed, so they don’t need to be rechecked.\nCommentary: in the last chapter, we discussed how the success/failure condition changed between the hypothesis test and the confidence interval. That was because for a single proportion, we used the null value for checking expected successes and failures under the assumption of the null. Then, for a confidence interval, there was no more null value to use, so we fell back on the sample successes and failures.\nFor two proportions, though, there are not null values for \\(p_{1}\\) and \\(p_{2}\\) posited; we only expressed a null about the difference of these values. So in checking the success/failure condition above, we already had to fall back on the sample successes and failures for both groups. That’s the same thing we would do here for the confidence interval, so there is nothing new to do here.\n\n\n16.11.2 Calculate and graph the confidence interval.\n\nstatus_sex_ci &lt;- status_sex_test |&gt;\n  get_confidence_interval(point_estimate = obs_diff, level = 0.95)\nstatus_sex_ci\n\n\n  \n\n\n\n\nstatus_sex_test |&gt;\n  visualize() +\n  shade_confidence_interval(endpoints = status_sex_ci)\n\n\n\n\n\n\n\n\n\n\n16.11.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true difference between the rate at which women and men die from malignant melanoma is captured in the interval (-27.3579265%, -1.6153506%). (This difference is measured by calculating female minus male.)\nCommentary: Note the addition of that last sentence. As we mentioned before, if you are looking at a difference, you must indicate the direction of the difference. We know that we are subtracting female minus male, So given that the values are negative, we can infer that males die from malignant melanoma more often than females—at least according to this confidence interval.\n\n\n16.11.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nThe confidence interval does not contain the null value of zero. Since zero is not a plausible value for the true difference between the rate at which women and men die from malignant melanoma, it makes sense that we rejected the null hypothesis.\n\n\n16.11.5 Comment on the effect size and the practical significance of the result.\nAt the most extreme end of the confidence interval, -27.3579265% is a very large difference between females and males. If this outer value is close to the truth, males are at much more risk of melanoma than females (at least in Denmark at the time of the study). The other end of the confidence interval, -1.6153506%, is a negligible difference. If that number were close to the truth, it’s not clear that the true difference would have practical significance in the real world.\nCommentary: The P-value for the hypothesis test indicated that the results are statistically discernible. But what does that really mean? It means that if the null were true, the probability of getting samples of females and males whose melanoma rates differed by -14.4866385%—or something more extreme in either direction—would be quite small. Our conclusion to reject the null follows as a logical consequence.\nSo we can be somewhat confident that there is a difference between females and males. But how much of a difference? A small difference can be statistically significant, and yet be completely irrelevant in the real world. A 1% difference in melanoma rates might not be enough to enact extra preventative measures for men, for example. On the other hand, a 27% difference is huge, and might result in a campaign targeted at men specifically due to the extra risk.\nIn other words, we cannot just rest on a conclusion of statistical discernibility. A difference might exist, but so what? We also need to know if that difference is practically significant? Are there any practical, real-world consequences due to the magnitude of the difference? There is no cutoff for practical significance. This is determined in the context of the problem, preferably using expert guidance. There are policy considerations, cost-benefit analyses, risk assessments, and a host of other considerations that are made when determining if a result is practically significant.\nA big part of this process that is often neglected is the role of uncertainty. Our point estimate was -14.4866385%. But that number, by itself, is not that meaningful. That is but one estimate coming from one set of samples. The range of plausible values, according to the confidence interval, is -27.3579265% to -1.6153506% . This is a huge range, and there are very different consequences to society is the difference is -27.3579265% versus -1.6153506%.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#your-turn",
    "href": "16-inference_for_two_proportions-web.html#your-turn",
    "title": "16  Inference for two proportions",
    "section": "16.12 Your turn",
    "text": "16.12 Your turn\nGo through the rubric to determine if females and males in Denmark who are diagnosed with malignant melanoma suffer from ulcerated tumors at different rates.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere. In particular, you should use ulcer_sex everywhere instead of status_sex\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic as a difference of \n# proportions.\n\n\n# Add code here to compute the test statistic as a z score.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to plot the generate distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.\n\n\n\n\nConfidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nComment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#conclusion-2",
    "href": "16-inference_for_two_proportions-web.html#conclusion-2",
    "title": "16  Inference for two proportions",
    "section": "16.13 Conclusion",
    "text": "16.13 Conclusion\nJust like with one proportion, when certain conditions are met, the difference between two proportions follows a normal model. Rather than simulating a bunch of different sample differences under the assumption of independent variables, we can just replace all that with a relatively simple normal model with mean zero and a standard error based on the sample proportions of successes and failures in the two samples. From that normal model, we obtain P-values and confidence intervals as before.\n\n16.13.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "16-inference_for_two_proportions-web.html#optional-appendix-pooling",
    "href": "16-inference_for_two_proportions-web.html#optional-appendix-pooling",
    "title": "16  Inference for two proportions",
    "section": "16.14 Optional appendix: Pooling",
    "text": "16.14 Optional appendix: Pooling\nEarlier, we mentioned that that we cannot calculate the “true” standard error directly because the null hypothesis does not give us \\(p_{1}\\) and \\(p_{2}\\). (The null only addresses the value of the difference \\(p_{1} - p_{2}\\).) We dealt with this by simply substituting \\(\\hat{p}_{1}\\) for \\(p_{1}\\) and \\(\\hat{p}_{2}\\) for \\(p_{2}\\).\nThere is, however, one assumption from the null we can still salvage that will improve our test. Since the null hypothesis assumes that the two groups are the same, let’s compute a single overall success rate for both samples together. In other words, if the two groups aren’t different, let’s just pool them into one single group and calculate the successes for the whole group.\nThis is called a pooled proportion. It’s straightforward to compute: just take the total number of successes in both groups and divide by the total size of both groups. Here is the formula:\n\\[\n\\hat{p}_{pooled} = \\frac{successes_{1} + successes_{2}}{n_{1} + n_{2}}\n\\]\nOccasionally, we are not given the raw number of successes in each group, but rather, the proportion of successes in each group, \\(\\hat{p}_{1}\\) and \\(\\hat{p}_{2}\\). The simple fix is to recompute the raw count of successes as \\(n_{1} \\hat{p}_{1}\\) and \\(n_{2} \\hat{p}_{2}\\). Here is what it looks like in the formula:\n\\[\n\\hat{p}_{pooled} = \\frac{n_{1} \\hat{p}_{1} + n_{2} \\hat{p}_{2}}{n_{1} + n_{2}}\n\\]\nThe normal model can still have a mean of \\(p_{1} - p_{2}\\). (We usually assume this is 0 in the null hypothesis.) But its standard error will use the pooled proportion:\n\\[\nN\\left( p_{1} - p_{2}, \\sqrt{\\frac{\\hat{p}_{pooled} (1 - \\hat{p}_{pooled})}{n_{1}} + \\frac{\\hat{p}_{pooled} (1 - \\hat{p}_{pooled})}{n_{2}}} \\right)\n\\]\nNot only can we use the pooled proportion in the standard error, but in fact we can use it anywhere we assume the null. For example, the success/failure condition is also subject to the assumption of the null, so we could use the pooled proportion there too.\nFor a confidence interval, things are different. There is no null hypothesis in effect while computing a confidence interval, so there is no assumption that would justify pooling.\nThe standard error in the one-proportion interval is\n\\[\n\\sqrt{\\frac{\\hat{p}(1 - \\hat{p})}{n}}\n\\]\nwhich just substitutes \\(\\hat{p}\\) for \\(p\\). We do the same for the standard error in the two-proportion case:\n\\[\nSE = \\sqrt{\\frac{\\hat{p}_{1} (1 - \\hat{p}_{1})}{n_{1}} + \\frac{\\hat{p}_{2} (1 - \\hat{p}_{2})}{n_{2}}}.\n\\]",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Inference for two proportions</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html",
    "href": "17-chi_square_goodness_of_fit-web.html",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "",
    "text": "17.1 Introduction\nIn this assignment we will learn how to run the chi-square goodness-of-fit test. A chi-square goodness-of-fit test is similar to a test for a single proportion except, instead of two categories (success/failure), we now try to understand the distribution among three or more categories.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#introduction",
    "href": "17-chi_square_goodness_of_fit-web.html#introduction",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "",
    "text": "17.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n17.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/17-chi_square_goodness_of_fit.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n17.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#load-packages",
    "href": "17-chi_square_goodness_of_fit-web.html#load-packages",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.2 Load packages",
    "text": "17.2 Load packages\nWe load the standard tidyverse, janitor, and infer packages and the openintro package for the hsb2 data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#research-question",
    "href": "17-chi_square_goodness_of_fit-web.html#research-question",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.3 Research question",
    "text": "17.3 Research question\nWe use a classic data set mtcars from a 1974 Motor Trend magazine to examine the distribution of the number of engine cylinders (with values 4, 6, or 8). We’ll assume that this data set is representative of all cars from 1974.\nIn recent years, 4-cylinder vehicles and 6-cylinder vehicles have comprised about 38% of the market each, with nearly all the rest (24%) being 8-cylinder cars. (This ignores a very small number of cars manufactured with 3- or 5-cylinder engines.) Were car engines in 1974 manufactured according to the same distribution?\nHere is the structure of the data:\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n\n\nNote that the variable of interest cyl is not coded as a factor variable. Let’s convert cyl to a factor variable first. (Since the levels are already called 4, 6, and 8, we do not need to specify levels or labels.)\n\nmtcars &lt;- mtcars |&gt;\n  mutate(cyl_fct = factor(cyl))\nmtcars\n\n\n  \n\n\n\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 12\n$ mpg     &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17…\n$ cyl     &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…\n$ disp    &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8,…\n$ hp      &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, …\n$ drat    &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.…\n$ wt      &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150,…\n$ qsec    &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90,…\n$ vs      &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,…\n$ am      &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,…\n$ gear    &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3,…\n$ carb    &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1,…\n$ cyl_fct &lt;fct&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#chi-squared",
    "href": "17-chi_square_goodness_of_fit-web.html#chi-squared",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.4 Chi-squared",
    "text": "17.4 Chi-squared\nWhen we have three or more categories in a categorical variable, it is natural to ask how the observed counts in each category compare to the counts that we expect to see under the assumption of some null hypothesis. In other words, we’re assuming that there is some “true” distribution to which we are going to compare our data. Sometimes, this null comes from substantive expert knowledge. (For example, we will be comparing the 1974 distribution to a known distribution from recent years.) Sometimes we’re interested to see if our data deviates from a null distribution that predicts an equal number of observations in each category.\nFirst of all, what is the actual distribution of cylinders in our data? Here’s a frequency table.\n\ntabyl(mtcars, cyl_fct) |&gt;\n  adorn_totals() |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nThe counts of our frequency table (11, 7, and 14) are the “observed” values, usually denoted by the letter \\(O\\) (uppercase “O”, which is a little unfortunate, because it also looks like a zero).\nWhat are the expected counts? Well, since there are 32 cars, we need to multiply 32 by the percentages listed in the research question. For 4-cylinder and 6-cylinder cars, if the distribution of engines in 1974 were the same as today, there would be \\(32 * 0.38\\) or about 12.2 cars we would expect to see in our sample that have 4-cylinder engines, and the same for 6-cylinder cars. For 8-cylinder cars, we expect \\(32 * 0.24\\) or about 7.7 cars in our sample to have 8-cylinder engines. These “expected” counts are usually denoted by the letter \\(E\\).\nWhy aren’t the expected counts whole numbers? In any given data set, of course, we will see a whole number of cars with 4, 6, or 8 cylinders. However, since we’re looking only at expected counts, they are the average over lots of possible sets of 32 cars under the assumption of the null. We don’t need for these averages to be whole numbers.\nHow should the deviation between the data and the null distribution be measured? We could simply look at the difference between the observed counts and the expected counts \\(O - E\\). However, there will be some positive values (cells where we have more than the expected number of cars) and some negative values (cells where we have fewer than the expected number of cars). These will all cancel out.\nIf this sounds vaguely familiar, it is because we encountered the same problem with the formula for the standard deviation. The differences \\(y - \\bar{y}\\) had the same issue. Do you recall the solution in that case? It was to square these values, making them all positive.\nSo instead of \\(O - E\\), we will consider \\((O - E)^{2}\\). Finally, to make sure that cells with large expected values don’t dominate, we divide by \\(E\\):\n\\[\n\\frac{(O - E)^{2}}{E}.\n\\]\nThis puts each cell on equal footing. Now that we have a reasonable measure of the deviation between observed and expected counts for each cell, we can define the number \\(\\chi^{2}\\) as the sum of all these fractions, one for each cell.\n\\[\n\\chi^{2} = \\sum \\frac{(O - E)^{2}}{E}.\n\\]\nNote: “Chi-squared” is pronounced “kye-squared.” The “ch” is a hard “k” sound, like “Chris” or “cholera” and not like “chai.” The vowel is a long “i”, so “Chi-squared” rhymes with “die-scared”, or if that’s too dark, how about “pie-shared.”1\nA \\(\\chi^{2}\\) value of zero would indicate perfect agreement between observed and expected values. As the \\(\\chi^{2}\\) value gets larger and larger, this indicates more and more deviation between observed and expected values.\nAs an example, for our data, we calculate chi-squared as follows:\n\\[\n\\chi^{2} = \\frac{(11 - 12.2)^{2}}{12.2} + \\frac{(7 - 12.2)^{2}}{12.2} + \\frac{(14 - 7.7)^{2}}{7.7} \\approx 7.5.\n\\]\nOr we could just do it in R with the infer package. To do so, we have to state explicitly the proportions that correspond to the null hypothesis. In this case, since the order of entries in the frequency table is 4-cylinder, 6-cylinder, then 8-cylinder, we need to give infer a vector of entries c(\"4\" = 0.38, \"6\" = 0.38, \"8\" = 0.24) that represents the 38%, 38%, and 24% expected for 4, 6, and 8 cylinders respectively.\n\nobs_chisq &lt;- mtcars |&gt;\n  specify(response = cyl_fct) |&gt;\n  hypothesize(null = \"point\",\n              p = c(\"4\" = 0.38,\n                    \"6\" = 0.38,\n                    \"8\" = 0.24)) |&gt;\n  calculate(stat = \"chisq\")\nobs_chisq",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#the-chi-square-distribution",
    "href": "17-chi_square_goodness_of_fit-web.html#the-chi-square-distribution",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.5 The chi-square distribution",
    "text": "17.5 The chi-square distribution\nWe know that even if the true distribution were 38%, 38%, 24%, we would not see exactly 12.2, 12.2, 7.7 in a sample of 32 cars. (In fact, the “true” distribution is physically impossible because these are not whole numbers!) So what kinds of numbers could we get?\nLet’s do a quick simulation to find out.\nUnder the assumption of the null, there should be a 38%, 38%, and 24% chance of seeing 4, 6, or 8 cylinders, respectively. To get a sense of the extent of sampling variability, we could use the sample command to see what happens in a sample of size 32 taken from a population where the true percentages are 38%, 38%, and 24%.\n\nset.seed(99999)\nsample1 &lt;- sample(c(4, 6, 8), size = 32, replace = TRUE,\n                  prob = c(0.38, 0.38, 0.24))\nsample1\n\n [1] 6 8 4 8 6 6 8 4 8 6 8 6 6 4 6 8 4 6 6 8 8 6 6 8 4 8 6 4 4 4 6 4\n\n\n\nsample1 |&gt;\n  table()\n\nsample1\n 4  6  8 \n 9 13 10 \n\n\n\nsample2 &lt;- sample(c(4, 6, 8), size = 32, replace = TRUE,\n                  prob = c(0.38, 0.38, 0.24))\nsample2\n\n [1] 6 8 8 8 4 4 8 4 8 6 8 4 4 6 6 6 6 4 4 4 6 4 4 4 8 4 4 8 4 4 4 8\n\n\n\nsample2 |&gt;\n  table()\n\nsample2\n 4  6  8 \n16  7  9 \n\n\n\nsample3 &lt;- sample(c(4, 6, 8), size = 32, replace = TRUE,\n                  prob = c(0.38, 0.38, 0.24))\nsample3\n\n [1] 8 6 4 6 6 6 6 4 6 6 6 4 6 4 8 8 6 8 8 8 4 6 8 4 8 6 6 6 6 8 4 6\n\n\n\nsample3 |&gt;\n  table()\n\nsample3\n 4  6  8 \n 7 16  9 \n\n\nWe can calculate the chi-squared value for each of these samples to get a sense of the possibilities. The chisq.test command from base R is a little unusual because it requires a frequency table (generated from the table command) as input. For purposes of hypothesis testing, we won’t need to use the chisq.test command directly because we will always use infer to do this work. But just to see some examples:\n\nsample1 |&gt;\n  table() |&gt;\n  chisq.test()\n\n\n    Chi-squared test for given probabilities\n\ndata:  table(sample1)\nX-squared = 0.8125, df = 2, p-value = 0.6661\n\n\n\nsample2 |&gt;\n  table() |&gt;\n  chisq.test()\n\n\n    Chi-squared test for given probabilities\n\ndata:  table(sample2)\nX-squared = 4.1875, df = 2, p-value = 0.1232\n\n\n\nsample3 |&gt;\n  table() |&gt;\n  chisq.test()\n\n\n    Chi-squared test for given probabilities\n\ndata:  table(sample3)\nX-squared = 4.1875, df = 2, p-value = 0.1232\n\n\n\nExercise 1\nLook more carefully at the three random samples above. Why does sample 1 have a chi-squared closer to 0 while samples 2 and 3 have a chi-squared values that are a little larger? (Hint: look at the counts of 4s, 6s, and 8s in those samples. How do those counts compare to the expected number of 4s, 6s, and 8s?)\n\nPlease write up your answer here.\n\n\nThe infer pipeline below (the generate command specifically) takes the values “4”, “6”, or “8” and grabs them at random according to the probabilities specified until it has 32 values. In other words, it will randomly select “4” about 38% of the time, “6” about 38% of the time, and “8” about 24% of the time, until it gets a list of 32 total cars. Then it will calculate the chi-squared value for that simulated set of 32 cars. But because randomness is involved, the simulated samples are subject to sampling variability and the chi-square values obtained will differ from each other. This is exactly what we did above with the sample command and the chisq command, but the benefit now is that we get 1000 random samples very quickly.\n\nset.seed(99999)\ncyl_test_sim &lt;- mtcars |&gt;\n  specify(response = cyl_fct) |&gt;\n  hypothesize(null = \"point\",\n              p = c(\"4\" = 0.38,\n                    \"6\" = 0.38,\n                    \"8\" = 0.24)) |&gt;\n  generate(reps = 1000, type = \"draw\") |&gt;\n  calculate(stat = \"chisq\")\ncyl_test_sim\n\n\n  \n\n\n\nThe “stat” column above contains 1000 random values of \\(\\chi^{2}\\). Let’s graph these values and include the chi-squared value for our actual data in the same graph.\n\ncyl_test_sim |&gt;\n  visualize() +\n  shade_p_value(obs_chisq, direction = \"greater\")\n\n\n\n\n\n\n\n\nA few things are apparent:\n\nThe values are all positive. (The leftmost bar is sitting at 0, but it represents values greater than zero.) This makes sense when you remember that each piece of the \\(\\chi^{2}\\) calculation was positive. This is different from our earlier simulations that looked like normal models. (Z scores can be positive or negative, but not \\(\\chi^{2}\\).)\nThis is a severely right-skewed graph. Although most values are near zero, the occasional unusual sample can have a large value of \\(\\chi^{2}\\).\nYou can see that our sample (the red line) is pretty far to the right. It is an unusual value given the assumption of the null hypothesis. In fact, we can count the proportion of sampled values that are to the right of the red line:\n\n\ncyl_test_sim |&gt;\n  get_p_value(obs_chisq, direction = \"greater\")\n\n\n  \n\n\n\nThis is the simulated P-value. Keep this number in mind when we calculate the P-value using a sampling distribution model below.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#chi-square-as-a-sampling-distribution-model",
    "href": "17-chi_square_goodness_of_fit-web.html#chi-square-as-a-sampling-distribution-model",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.6 Chi-square as a sampling distribution model",
    "text": "17.6 Chi-square as a sampling distribution model\nJust like there was a mathematical model for our simulated data before (the normal model back then), there is also a mathematical model for this type of simulated data. It’s called (not surprisingly) the chi-square distribution.\nThere is one new idea, though. Although all normal models have the same bell shape, there are many different chi-square models. This is because the number of cells can change the sampling distribution. Our engine cylinder example has three cells (corresponding to the categories “4”, “6”, and “8”). But what if there were 10 categories? The shape of the chi-square model would be different.\nThe terminology used by statisticians to distinguish these models is degrees of freedom, abbreviated \\(df\\). The reason for this name and the mathematics behind it are somewhat technical. Suffice it to say for now that if there are \\(c\\) cells, you use \\(c - 1\\) degrees of freedom. For our car example, there are 3 cylinder categories, so \\(df = 2\\).\nLook at the graph below that shows the theoretical chi-square models for varying degrees of freedom.\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(data.frame(x = c(0, 20)), aes(x)) +\n  stat_function(fun = dchisq, args = list(df = 2),\n                aes(color = \"2\")) +\n  stat_function(fun = dchisq, args = list(df = 5),\n                aes(color = \"5\" )) +\n  stat_function(fun = dchisq, args = list(df = 10),\n                aes(color = \"10\")) +\n  scale_color_manual(name = \"df\",\n                     values = c(\"2\" = \"red\",\n                                \"5\" = \"blue\",\n                                \"10\" = \"green\"),\n                     breaks =  c(\"2\", \"5\", \"10\"))\n\n\n\n\n\n\n\n\nThe red curve (corresponding to \\(df = 2\\)) looks a lot like our simulation above. But as the degrees of freedom increase, the mode shifts further to the right.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#chi-square-goodness-of-fit-test",
    "href": "17-chi_square_goodness_of_fit-web.html#chi-square-goodness-of-fit-test",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.7 Chi-square goodness-of-fit test",
    "text": "17.7 Chi-square goodness-of-fit test\nThe formal inferential procedure for examining whether data from a categorical variable fits a proposed distribution in the population is called a chi-square goodness-of-fit test.\nWe can use the chi-square model as the sampling distribution as long as the sample size is large enough. This is checked by calculating that the expected cell counts (not the observed cell counts!) are at least 5 in each cell.\nThe following infer pipeline will run a hypothesis test using the theoretical chi-squared distribution with 2 degrees of freedom.\n\ncyl_test &lt;- mtcars |&gt;\n  specify(response = cyl_fct) |&gt;\n  assume(distribution = \"chisq\")\ncyl_test\n\nA Chi-squared distribution with 2 degrees of freedom.\n\n\nHere is the theoretical distribution:\n\ncyl_test |&gt;\n  visualize()\n\n\n\n\n\n\n\n\nAnd here it is with our test statistic (the chi-squared value for our observed data) marked:\n\ncyl_test |&gt;\n  visualize() +\n  shade_p_value(obs_chisq, direction = \"greater\")\n\n\n\n\n\n\n\n\nFinally, here is the P-value associated with the shaded area to the right of the test statistic:\n\ncyl_test |&gt;\n  get_p_value(obs_chisq, direction = \"greater\")\n\n\n  \n\n\n\nNote that this P-value is quite similar to the P-value derived from the simulation earlier.\nWe’ll walk through the engine cylinder example from top to bottom using the rubric. Most of this is just repeating work we’ve already done, but showing this work in the context of the rubric will help you as you take over in the “Your Turn” section later.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#exploratory-data-analysis",
    "href": "17-chi_square_goodness_of_fit-web.html#exploratory-data-analysis",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.8 Exploratory data analysis",
    "text": "17.8 Exploratory data analysis\n\n17.8.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nType ?mtcars at the Console to read the help file. Motor Trend is a reputable publication and, therefore, we do not doubt the accuracy of the data. It’s not clear, however, why these specific 32 cars were chosen and if they reflect a representative sample of cars on the road in 1974.\n\nmtcars\n\n\n  \n\n\n\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 12\n$ mpg     &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17…\n$ cyl     &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…\n$ disp    &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8,…\n$ hp      &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, …\n$ drat    &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.…\n$ wt      &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150,…\n$ qsec    &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90,…\n$ vs      &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,…\n$ am      &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,…\n$ gear    &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3,…\n$ carb    &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1,…\n$ cyl_fct &lt;fct&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…\n\n\n\n\n17.8.2 Prepare the data for analysis.\nCheck for missing data:\n\nmtcars |&gt;\n  drop_na(cyl) |&gt;\n  NROW()\n\n[1] 32\n\n\n\n# Although we've already done this above, \n# we include it here again for completeness.\nmtcars &lt;- mtcars |&gt;\n  mutate(cyl_fct = factor(cyl))\nmtcars\n\n\n  \n\n\n\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 12\n$ mpg     &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17…\n$ cyl     &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…\n$ disp    &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8,…\n$ hp      &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, …\n$ drat    &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.…\n$ wt      &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150,…\n$ qsec    &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90,…\n$ vs      &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,…\n$ am      &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,…\n$ gear    &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3,…\n$ carb    &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1,…\n$ cyl_fct &lt;fct&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4,…\n\n\n\n\n17.8.3 Make tables or plots to explore the data visually.\n\ntabyl(mtcars, cyl_fct) |&gt;\n  adorn_totals() |&gt;\n  adorn_pct_formatting()",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#hypotheses",
    "href": "17-chi_square_goodness_of_fit-web.html#hypotheses",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.9 Hypotheses",
    "text": "17.9 Hypotheses\n\n17.9.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample is a set of 32 cars from a 1974 Motor Trends magazine. The population is all cars from 1974.\n\n\n17.9.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) In 1974, the proportion of cars with 4, 6, and 8 cylinders was 38%, 38%, and 24%, respectively.\n\\(H_{A}:\\) In 1974, the proportion of cars with 4, 6, and 8 cylinders was not 38%, 38%, and 24%.\n\n\n17.9.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: p_{4} = 0.38, p_{6} = 0.38, p_{8} = 0.24\\)\nThere is no easy way to express the alternate hypothesis in symbols because any deviation in any of the categories can lead to rejection of the null. You can’t just say \\(p_{4} \\neq 0.38, p_{6} \\neq 0.38, p_{8} \\neq 0.24\\) because one of these categories might have the correct proportion with the other two different and that would still be consistent with the alternative hypothesis.\nSo the only requirement here is to express the null in symbols.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#model",
    "href": "17-chi_square_goodness_of_fit-web.html#model",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.10 Model",
    "text": "17.10 Model\n\n17.10.1 Identify the sampling distribution model.\nWe use a \\(\\chi^{2}\\) model with 2 degrees of freedom.\nCommentary: Unlike the normal model, there are infinitely many different \\(\\chi^{2}\\) models, so you have to specify the degrees of freedom when you identify it as the sampling distribution model.\n\n\n17.10.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nWe do not know how Motor Trends magazine sampled these 32 cars, so we’re not sure if this list is random or representative of all cars from 1974. We should be cautious in our conclusions.\n\n10%\n\nAs long as there are at least 320 different car models, we are okay. This sounds like a lot, so this condition might not quite be met. Again, we need to be careful. (Also note that the population is not all automobiles manufactured in 1974. It is all types of automobile manufactured in 1974. There’s a big difference.)\n\nExpected cell counts\n\nThis condition says that under the null, we should see at least 5 cars in each category. The expected counts are \\(32(0.38) = 12.2\\), \\(32(0.38) = 12.2\\), and \\(32(0.24) = 7.7\\). So this condition is met.\n\n\nCommentary: The expected counts condition is necessary for using the theoretical chi-squared distribution. If we were using simulation instead, we would not need this condition.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#mechanics",
    "href": "17-chi_square_goodness_of_fit-web.html#mechanics",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.11 Mechanics",
    "text": "17.11 Mechanics\n\n17.11.1 Compute the test statistic.\n\nobs_chisq &lt;- mtcars |&gt;\n  specify(response = cyl_fct) |&gt;\n  hypothesize(null = \"point\",\n              p = c(\"4\" = 0.38,\n                    \"6\" = 0.38,\n                    \"8\" = 0.24)) |&gt;\n  calculate(stat = \"chisq\")\nobs_chisq\n\n\n  \n\n\n\n\n\n17.11.2 Report the test statistic in context (when possible).\nThe value of \\(\\chi^{2}\\) is 7.5010965.\nCommentary: The \\(\\chi^{2}\\) test statistic is, of course, the same value we computed manually by hand earlier. Also, the formula for \\(\\chi^{2}\\) is a complicated function of observed and expected values, making it difficult to say anything about this number in the context of cars and engine cylinders. So even though the requirement is to “report the test statistic in context,” there’s not much one can say here other than just to report the test statistic.\n\n\n17.11.3 Plot the null distribution.\n\ncyl_test &lt;- mtcars |&gt;\n  specify(response = cyl_fct) |&gt;\n  assume(distribution = \"chisq\")\ncyl_test\n\nA Chi-squared distribution with 2 degrees of freedom.\n\n\n\ncyl_test |&gt;\n  visualize() +\n  shade_p_value(obs_chisq, direction = \"greater\")\n\n\n\n\n\n\n\n\nCommentary: We will use the theoretical distribution instead of the simulated distribution here. As long as the conditions are met, the use of the theoretical chi-squared sampling distribution is warranted.\n\n\n17.11.4 Calculate the P-value.\n\ncyl_test_p &lt;- cyl_test |&gt;\n  get_p_value(obs_chisq, direction = \"greater\")\ncyl_test_p\n\n\n  \n\n\n\n\n\n17.11.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.0235049. If the true distribution of cars in 1974 were 38% 4-cylinder, 38% 6-cylinder, and 24% 8-cylinder, there would be a 2.3504856% chance of seeing data at least as extreme as what we saw.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#conclusion",
    "href": "17-chi_square_goodness_of_fit-web.html#conclusion",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.12 Conclusion",
    "text": "17.12 Conclusion\n\n17.12.1 State the statistical conclusion.\nWe reject the null.\n\n\n17.12.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is sufficient evidence that in 1974, the distribution of cars was not 38% 4-cylinder, 38% 6-cylinder, and 24% 8-cylinder.\n\n\n17.12.3 Express reservations or uncertainty about the generalizability of the conclusion.\nAs long as we restrict our attention to cars in 1974, we are pretty safe, although we are still uncertain if the sample we had was representative of all cars in 1974.\n\n\n17.12.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we made a Type I error, that would mean the true distribution of cars in 1974 was 38% 4-cylinder, 38% 6-cylinder, and 24% 8-cylinder, but our sample showed otherwise.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#confidence-interval",
    "href": "17-chi_square_goodness_of_fit-web.html#confidence-interval",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.13 Confidence interval",
    "text": "17.13 Confidence interval\nThere is no confidence interval for a chi-square test. Since our test is not about measuring some parameter of interest (like \\(p\\) or \\(p_{1} - p_{2}\\)), there is no interval to produce.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#your-turn",
    "href": "17-chi_square_goodness_of_fit-web.html#your-turn",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.14 Your turn",
    "text": "17.14 Your turn\nUse the hsb2 data and determine if the proportion of high school students who attend general programs, academic programs, and vocational programs is 15%, 60%, and 25% respectively.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#residuals",
    "href": "17-chi_square_goodness_of_fit-web.html#residuals",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.15 Residuals",
    "text": "17.15 Residuals\nThe chi-square test can tell us if there is some difference from the expected distribution of counts across the categories, but it doesn’t tell us which category has a higher or lower count than expected. For that, we’ll need to turn to another tool: residuals. For technical reasons, the infer package doesn’t provide residuals, so we’ll have to turn to slightly different tools. Here’s how this works; we’ll return to the example of distribution of cars across the different categories of number of cylinders.\nThe function we’ll use is chisq.test as we saw before. It requires us to give it input in the form of a table of counts, together with the proportions we wish to compare to:\n\ntable(mtcars$cyl_fct) |&gt;\n  chisq.test(p = c(.38, .38, .24)) -&gt; cyl_chisq.test\ncyl_chisq.test\n\n\n    Chi-squared test for given probabilities\n\ndata:  table(mtcars$cyl_fct)\nX-squared = 7.5011, df = 2, p-value = 0.0235\n\n\nNotice that the chi-squared value 7.5011 and the p-value 0.0235 are the same as those we calculated using infer tools above.\nHere’s how to obtain the table of residuals:\n\ncyl_chisq.test$residuals\n\n\n         4          6          8 \n-0.3326528 -1.4797315  2.2805336 \n\n\nWhat do these numbers mean in the real world? Not much. (Essentially, they are the values that were squared to become the individual cell contributions to the overall chi-squared score of the table.)\nWhat we’ll do with them is look for the most positive and most negative values.\n\nWe see that the 8-cylinder column has the most positive value: this means that the number of 8-cylinder cars in 1974 was substantially higher than we expected.\nWe see that the 6-cylinder column has the most negative value: this means that the number of 6-cylinder cars in 1974 was substantially lower than we expected.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#your-turn-1",
    "href": "17-chi_square_goodness_of_fit-web.html#your-turn-1",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.16 Your turn",
    "text": "17.16 Your turn\nDetermine which of the high school program types is the most substantially overrepresented and the most substantially underrepresented, according to our hypothesized distribution.\n\n\n# Add code here to produce the chisq.test result.\n\n\n# Add code here to examine the residuals.\n\nPlease write your answer here.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#conclusion-2",
    "href": "17-chi_square_goodness_of_fit-web.html#conclusion-2",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "17.17 Conclusion",
    "text": "17.17 Conclusion\nWhen a categorical variable has three or more categories, we can run a chi-square goodness-of-fit test to determine if the distribution of counts across those categories matches some pre-specified null hypothesis. The key new mathematical tool we need is the chi-square distribution, a way of measuring the deviation between observed counts and expected counts according to the null.\n\n17.17.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "17-chi_square_goodness_of_fit-web.html#footnotes",
    "href": "17-chi_square_goodness_of_fit-web.html#footnotes",
    "title": "17  Chi-square goodness-of-fit test",
    "section": "",
    "text": "Rhyming is fun!↩︎",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Chi-square goodness-of-fit test</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html",
    "href": "18-chi_square_test_for_independence-web.html",
    "title": "18  Chi-square test for independence",
    "section": "",
    "text": "18.1 Introduction\nIn this chapter we will learn how to run the chi-square test for independence.\nA chi-square test for independence tests the relationship between two categorical variables. This is an extension of the test for two proportions, except now applied in situations where either the predictor or response variables (or both) have three or more categories.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#introduction",
    "href": "18-chi_square_test_for_independence-web.html#introduction",
    "title": "18  Chi-square test for independence",
    "section": "",
    "text": "18.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n18.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/18-chi_square_test_for_independence.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n18.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#load-packages",
    "href": "18-chi_square_test_for_independence-web.html#load-packages",
    "title": "18  Chi-square test for independence",
    "section": "18.2 Load packages",
    "text": "18.2 Load packages\nWe load the standard tideverse, janitor, and infer packages. We also use the MASS package for the birthwt data, and the openintro package for the smoking data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following objects are masked from 'package:MASS':\n\n    housing, mammals",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#research-question",
    "href": "18-chi_square_test_for_independence-web.html#research-question",
    "title": "18  Chi-square test for independence",
    "section": "18.3 Research question",
    "text": "18.3 Research question\nAre mothers from certain racial groups more or less likely to have low birth weight babies? In other words, are low birth weight and race associated?\nLet’s look at the data. The birthwt data was collected at Baystate Medical Center, Springfield, Mass during 1986. In terms of addressing the research question, we are, of course, limited to conclusions about women in that area of the country in the mid-1980s.\n\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 10\n$ low   &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ age   &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, 18, …\n$ lwt   &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 95, 1…\n$ race  &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, 3, 1…\n$ smoke &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0…\n$ ptl   &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ht    &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ui    &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1…\n$ ftv   &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, 2, 3…\n$ bwt   &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, 2722…\n\n\nThe low variable is an indicator of birth weight less than 2.5 kg. So even though birth weight is numerical, we have a convenient categorical variable that serves as a marker of low birth weight, gathering all low birth weight babies into a single group. The race variable is categorical, coded as 1 = white, 2 = black, 3 = other.\nNeither variable appears in the data frame as a factor variable, so we will need to change that.\n\nbirthwt &lt;- birthwt |&gt;\n  mutate(low_fct = factor(low, levels = c(0, 1),\n                          labels = c(\"no\", \"yes\")),\n         race_fct = factor(race, levels = c(1, 2, 3),\n                           labels = c(\"white\", \"black\", \"other\")))\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 12\n$ low      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ age      &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, 1…\n$ lwt      &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 95…\n$ race     &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, 3…\n$ smoke    &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0…\n$ ptl      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0…\n$ ht       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ui       &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0…\n$ ftv      &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, 2…\n$ bwt      &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, 2…\n$ low_fct  &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ race_fct &lt;fct&gt; black, other, white, white, white, other, white, other, white…",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#chi-square-test-for-independence",
    "href": "18-chi_square_test_for_independence-web.html#chi-square-test-for-independence",
    "title": "18  Chi-square test for independence",
    "section": "18.4 Chi-square test for independence",
    "text": "18.4 Chi-square test for independence\nIn a previous chapter, we learned about the chi-square goodness-of-fit test. With a single categorical variable, we summarized data in a frequency table. Each cell of the table had an observed count from the data that we compared to an expected count from the assumption of a null hypothesis. The chi-square statistic measured the discrepancy between observed and expected.\nWith two categorical variables, we use a contingency table instead of a frequency table. But the principle of the chi-square statistic is the same: each cell in the contingency table has an observed count and an expected count. This forms the basis of a chi-square test for independence.\nBelow is the contingency table for these two variables. Normally, we only care about column totals because we care how the response variable (here, low_fct) is distributed in each group of the predictor variable (i.e., each racial group). But for the calculation of chi-squared, we will need both row and column totals.\n\ntabyl(birthwt, low_fct, race_fct) |&gt;\n  adorn_totals(where = c(\"row\", \"col\"))\n\n\n  \n\n\n\nA test for independence has a simple null hypothesis: the two variables are independent. This gives us a way to compute expected counts. To see how, look at the sum of all the normal weight babies (\\(73 + 15 + 42 = 130\\)) and all the low birth weight babies (\\(23 + 11 + 25 = 59\\)). In other words, if race is ignored, there were 130 normal weight babies and 59 low birth weight babies out of 189 total babies. 59 of 189 is 0.31217 or 31.217%, and 130 of 189 is 0.68783 or 68.783%.\nNow, if low birth weight and race are truly independent, it shouldn’t matter if the mothers were white, black, or some other race. In other words, of 96 white mothers, we should still expect 68.783% of them to have normal weight babies and 31.217% of them to have low birth weight babies. 68.783% of 96 is 66.032. This is the expected cell count for normal birth weight babies of white women. 31.217% of 96 is 29.968. This is the expected cell count for low birth weight babies of white women. The same analysis can be done for the next two columns as well.\n\nExercise 1\nComplete the list of expected cell counts in the table above. In other words, apply the percentages 68.783% and 31.217% to the totals of the “black” and “other” columns. Put them in the table below:\n\n\n\n\n\nwhite\nblack\nother\n\n\n\n\nno\n66.032\n?\n?\n\n\nyes\n29.968\n?\n?\n\n\n\n\n\nUnlike the goodness-of-fit test that requires one to specify expected counts for each cell, the test for independence uses only the data to determine the expected counts. For any given cell, if \\(R\\) is the row total, \\(C\\) is the column total, and \\(n\\) is the grand total (the sample size), the expected count in any cell is simply\n\\[\nE = \\frac{R C}{n}.\n\\]\nThis is equivalent to the explanation in the previous paragraph. Using low birth weight babies among white mothers as an example, \\(R/n\\) is \\(59/189\\) which is 0.31217. Then we multiply this by the column total \\(C = 96\\) to get\n\\[\n\\left(\\frac{R}{n}\\right) C = \\frac{R C}{n} = \\frac{59 \\times 96}{189} =  29.96825.\n\\]\nEverything else works almost the same as it did for a chi-square goodness-of-fit test. We still compute \\(\\chi^{2}\\) by adding up deviations across all cells:\n\\[\n\\chi^{2} = \\sum \\frac{(O - E)^{2}}{E}.\n\\]\nEven under the assumption of the null, there will still be some sampling variability. Like any hypothesis test, our job is to determine whether the deviations we see are possible due to pure chance alone. The random values of \\(\\chi^{2}\\) that result from sampling variability will follow a chi-square model. But how many degrees of freedom are there? This is a little different from the goodness-of-fit test. Instead of the number of cells minus one, we use the following formula:\n\\[\ndf = (\\#rows - 1)(\\#columns - 1).\n\\]\nIn our example we have 2 rows (“yes”, “no”) and 3 columns (“white”, “black”, “other”); therefore,\n\\[\ndf = (2 - 1)(3 - 1) = 1 \\times 2 = 2\n\\]\nand we have 2 degrees of freedom (even though there are 6 cells).\nLet’s run through the rubric in its entirety.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#exploratory-data-analysis",
    "href": "18-chi_square_test_for_independence-web.html#exploratory-data-analysis",
    "title": "18  Chi-square test for independence",
    "section": "18.5 Exploratory data analysis",
    "text": "18.5 Exploratory data analysis\n\n18.5.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou should type ?birthwt at the Console to read the help file. We don’t have any information about how these mothers were selected. The “Source” at the end of the help file is a statistics textbook, so we’d have to track down that book to see where they got the data and if traced back to a primary source.\n\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 12\n$ low      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ age      &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, 1…\n$ lwt      &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 95…\n$ race     &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, 3…\n$ smoke    &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0…\n$ ptl      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0…\n$ ht       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ui       &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0…\n$ ftv      &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, 2…\n$ bwt      &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, 2…\n$ low_fct  &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ race_fct &lt;fct&gt; black, other, white, white, white, other, white, other, white…\n\n\n\n\n18.5.2 Prepare the data for analysis.\nCheck for missing data:\n\nbirthwt |&gt;\n  drop_na(low, race) |&gt;\n  NROW()\n\n[1] 189\n\n\nCreate factor variables:\n\n# Although we've already done this above, \n# we include it here again for completeness.\nbirthwt &lt;- birthwt |&gt;\n  mutate(low_fct = factor(low, levels = c(0, 1),\n                          labels = c(\"no\", \"yes\")),\n         race_fct = factor(race, levels = c(1, 2, 3),\n                           labels = c(\"white\", \"black\", \"other\")))\nbirthwt\n\n\n  \n\n\n\n\n\n18.5.3 Make tables or plots to explore the data visually.\n\ntabyl(birthwt, low_fct, race_fct) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\ntabyl(birthwt, low_fct, race_fct) |&gt;\n  adorn_totals() |&gt;\n  adorn_percentages(\"col\") |&gt;\n  adorn_pct_formatting()\n\n\n  \n\n\n\nCommentary: Earlier we used row and column total to explain how expected cell counts arise. Here, however, we will revert back to our previous standard practice of generating one contingency table with counts and another with column percentages.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#hypotheses",
    "href": "18-chi_square_test_for_independence-web.html#hypotheses",
    "title": "18  Chi-square test for independence",
    "section": "18.6 Hypotheses",
    "text": "18.6 Hypotheses\n\n18.6.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of 189 mothers who gave birth at the Baystate Medical Center in Springfield, Massachusetts in 1986. The population is presumably all mothers, although it’s safest to conclude only about mothers who gave birth at this hospital.\n\n\n18.6.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) Low birth weight and race are independent.\n\\(H_{A}:\\) Low birth weight and race are associated.\n\n\n18.6.3 Express the null and alternative hypotheses in symbols (when possible).\nFor a chi-square test for independence, this section is not applicable. With multiple categories in the response and predictor variables, there are no specific parameters of interest to express symbolically.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#model",
    "href": "18-chi_square_test_for_independence-web.html#model",
    "title": "18  Chi-square test for independence",
    "section": "18.7 Model",
    "text": "18.7 Model\n\n18.7.1 Identify the sampling distribution model.\nWe will use a chi-square model with 2 degrees of freedom.\n\n\n18.7.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nWe hope that these 189 women are representative of all women who gave birth in this hospital (or, at best, in that region) around that time.\n\n10%\n\nWe don’t know how many women gave birth at this hospital, but perhaps over many years we might have more than 1890 women.\n\nExpected cell counts\n\nYou checked the cell counts as a part of Exercise 1. Note that all expected cell counts are larger than 5, so the condition is met.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#mechanics",
    "href": "18-chi_square_test_for_independence-web.html#mechanics",
    "title": "18  Chi-square test for independence",
    "section": "18.8 Mechanics",
    "text": "18.8 Mechanics\n\n18.8.1 Compute the test statistic.\n\nobs_chisq &lt;- birthwt |&gt;\n  specify(response = low_fct, explanatory = race_fct) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  calculate(stat = \"chisq\")\nobs_chisq\n\n\n  \n\n\n\n\n\n18.8.2 Report the test statistic in context (when possible).\nThe value of \\(\\chi^{2}\\) is 5.004813.\nCommentary: As in the last chapter, there’s not much context to report with a value of \\(\\chi^{2}\\), so the most we can do here is just report it in a full sentence.\n\n\n18.8.3 Plot the null distribution.\n\nlow_race_test &lt;- birthwt |&gt;\n  specify(response = low_fct, explanatory = race_fct) |&gt;\n  assume(distribution = \"chisq\")\nlow_race_test\n\nA Chi-squared distribution with 2 degrees of freedom.\n\n\n\nlow_race_test |&gt;\n  visualize() +\n  shade_p_value(obs_chisq, direction = \"greater\")\n\n\n\n\n\n\n\n\n\n\n18.8.4 Calculate the P-value.\n\nlow_race_test_p &lt;- low_race_test |&gt;\n  get_p_value(obs_chisq, direction = \"greater\")\nlow_race_test_p\n\n\n  \n\n\n\n\n\n18.8.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.0818877. If low birth weight and race were independent, there would be a 8.1887698% chance of seeing results at least as extreme as we saw in the data.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#conclusion",
    "href": "18-chi_square_test_for_independence-web.html#conclusion",
    "title": "18  Chi-square test for independence",
    "section": "18.9 Conclusion",
    "text": "18.9 Conclusion\n\n18.9.1 State the statistical conclusion.\nWe fail to reject the null hypothesis.\n\n\n18.9.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is insufficient evidence that low birth weight and race are associated.\n\n\n18.9.3 Express reservations or uncertainty about the generalizability of the conclusion.\nGiven our uncertainly about how the data was collected, it’s not clear what our conclusion means. Also, failing to reject the null is really a “non-conclusion” in that it leaves us basically knowing nothing. We don’t have evidence of such an association (and there are good reasons to believe there may not be one), but failing to reject the null does not prove anything.\n\n\n18.9.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIt’s possible that we have made a Type II error. It may be that low birth weight and race are associated, but our sample has not given enough evidence of such an association.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#confidence-interval",
    "href": "18-chi_square_test_for_independence-web.html#confidence-interval",
    "title": "18  Chi-square test for independence",
    "section": "18.10 Confidence interval",
    "text": "18.10 Confidence interval\nThere are no parameters of interest in a chi-square test, so there is no confidence interval to report.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#your-turn",
    "href": "18-chi_square_test_for_independence-web.html#your-turn",
    "title": "18  Chi-square test for independence",
    "section": "18.11 Your turn",
    "text": "18.11 Your turn\nUse the smoking data set from the openintro package. Run a chi-square test for independence to determine if smoking status is associated with marital status.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#residuals",
    "href": "18-chi_square_test_for_independence-web.html#residuals",
    "title": "18  Chi-square test for independence",
    "section": "18.12 Residuals",
    "text": "18.12 Residuals\nJust like with the chi-square test for goodness of fit, rejecting the null hypothesis using the chi-square test for independence informs us that two variables are associated, but it doesn’t tell us the useful information about which combinations of variables have higher and lower counts than expected. And just like the chi-square test for goodness of fit, we can examine the residuals table to find that information.\nA word of caution: You should only examine the residuals if your test was statistically discernible! The residuals table for tests in which we fail to reject the null hypothesis can be misleading.\nBecause we failed to reject the null hypothesis in the low_race_test, it would be unwise for us to examine the residuals table in that test. Instead, we’ll use a different example.\nThe diabetes2 data set in the openintro package contains information about an experiment evaluating three treatments for Type 2 diabetes in patients aged 10-17 who were being treated with metformin. The three treatments summarized in the treatment variable were: continued treatment with metformin (met), treatment with metformin combined with rosiglitazone (rosi), or a lifestyle intervention program (lifestyle). Each patient had a primary outcome, which was either “lacked glycemic control” (failure) or did not lack that control (success). Here is the summary of the results of the experiment:\n\ntabyl(diabetes2, treatment, outcome) \n\n\n  \n\n\n\nFor the sake of a streamlined presentation, we’ll omit the usual details of condition-checking, hypothesis-writing, etc., and skip right to the conclusion.\n\ntabyl(diabetes2, treatment, outcome) |&gt;\n  chisq.test() -&gt; outcome_treatment_chisq.test\noutcome_treatment_chisq.test\n\n\n    Pearson's Chi-squared test\n\ndata:  tabyl(diabetes2, treatment, outcome)\nX-squared = 8.1645, df = 2, p-value = 0.01687\n\n\nNotice that the p-value obtained from the test is below our usual significance level \\(\\alpha = 0.05\\), so it makes sense for us to examine the residuals.\n\noutcome_treatment_chisq.test$residuals\n\n\n  \n\n\n\nAgain, these values don’t mean much in the real world; our job is to look at the most positive and most negative values.\n\nSince the rosi and failure cell has the most negative value, the count of people who failed to achieve glycemic control with rosiglitazone is the most below expected. (That’s a good result!)\nSince the rosi and success cell has the most positive value, the count of people who succeeded in achieving glycemic control with rosiglitazone is the most above expected. (That’s also a good result!)\n\nOverall, we can conclude that the rosiglitazone treatment was quite successful in helping people achieve their glycemic control goals.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#your-turn-1",
    "href": "18-chi_square_test_for_independence-web.html#your-turn-1",
    "title": "18  Chi-square test for independence",
    "section": "18.13 Your turn",
    "text": "18.13 Your turn\nExamine the residuals table to determine which marital statuses are most associated with smoking or not smoking.\n\n\n# Add code here to produce the chisq.test result.\n\n\n# Add code here to examine the residuals table.\n\nPlease write your answer here.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "18-chi_square_test_for_independence-web.html#conclusion-2",
    "href": "18-chi_square_test_for_independence-web.html#conclusion-2",
    "title": "18  Chi-square test for independence",
    "section": "18.14 Conclusion",
    "text": "18.14 Conclusion\nWith two categorical variables, we can run a chi-square test for independence to test the null hypothesis that the two variables are independent. While technically we can run this test for any two categorical variables, if both variables have only two levels, we would usually choose to run a test for two proportions. The chi-square test for independence is useful when one or both of the response and predictor variables have three or more levels. The expected cell counts are derived from the data and then the chi-squared statistic is computed as usual. Using the correct degrees of freedom, we can test how much the observed cell counts deviate from the expected cell counts and derive a P-value.\n\n18.14.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Chi-square test for independence</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html",
    "href": "19-inference_for_one_mean-web.html",
    "title": "19  Inference for one mean",
    "section": "",
    "text": "19.1 Introduction\nIn this chapter, we’ll learn about the Student t distribution and use it to perform a t test for a single mean.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#introduction",
    "href": "19-inference_for_one_mean-web.html#introduction",
    "title": "19  Inference for one mean",
    "section": "",
    "text": "19.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n19.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/19-inference_for_one_mean.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n19.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#load-packages",
    "href": "19-inference_for_one_mean-web.html#load-packages",
    "title": "19  Inference for one mean",
    "section": "19.2 Load packages",
    "text": "19.2 Load packages\nWe load the standard tidyverse and infer packages as well as the mosaic package to run some simulation. The openintro package contains the teacher data and the hsb2 data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(infer)\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:infer':\n\n    prop_test, t_test\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#simulating-means",
    "href": "19-inference_for_one_mean-web.html#simulating-means",
    "title": "19  Inference for one mean",
    "section": "19.3 Simulating means",
    "text": "19.3 Simulating means\nSystolic blood pressure (SBP) for women in the U.S. and Canada follows a normal distribution with a mean of 114 and a standard deviation of 14.\nSuppose we gather a random sample of 4 women and measure their SBP. We can simulate doing that with the rnorm command:\n\nset.seed(5151977)\nSBP_sample &lt;- rnorm(4, mean = 114, sd = 14)\nSBP_sample\n\n[1]  99.75130 126.47739  99.53632 115.05247\n\n\nWe summarize our sample by taking the mean and standard deviation:\n\nmean(SBP_sample)\n\n[1] 110.2044\n\n\n\nsd(SBP_sample)\n\n[1] 13.05615\n\n\nThe sample mean \\(\\bar{y}\\) = 110.2043696 is somewhat close to the true population mean \\(\\mu = 114\\) and the sample standard deviation \\(s\\) = 13.0561519 is somewhat close to the true population standard deviation \\(\\sigma = 14\\). (\\(\\mu\\) is the Greek letter “mu” and \\(\\sigma\\) is the Greek letter “sigma”.)\nLet’s simulate lots of samples of size 4. For each sample, we calculate the sample mean.\n\nset.seed(5151977)\nsims &lt;- do(2000) * mean(rnorm(4, mean = 114, sd = 14))\nsims\n\n\n  \n\n\n\nAgain, we see that the sample means are close to 114, but there is some variability. Naturally, not every sample is going to have an average of exactly 114. So how much variability do we expect? Let’s graph and find out. We’re going to set the x-axis manually so that we can do some comparisons later.\n\nggplot(sims, aes(x = mean)) +\n  geom_histogram(binwidth = 1) +\n  scale_x_continuous(limits = c(86, 142),\n                     breaks = c(93, 100, 107, 114, 121, 128, 135))\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nMost sample means are around 114, but there is a good range of possibilities from around 93 to 135. The population standard deviation \\(\\sigma\\) is 14, but the standard deviation in this graph is clearly much smaller than that. (A large majority of the samples are within 14 of the mean!)\nWith some fancy mathematics, one can show that the standard deviation of this sampling distribution is not \\(\\sigma\\), but rather \\(\\sigma/\\sqrt{n}\\). In other words, this sampling distribution of the mean has a standard error of\n\\[\n\\frac{\\sigma}{\\sqrt{n}} = \\frac{14}{\\sqrt{4}} = 7.\n\\]\nThis makes sense: as the sample size increases, we expect the sample mean to be more and more accurate, so the standard error should shrink with large sample sizes.\nLet’s re-scale the y-axis to use percentages instead of counts. Then we should be able to superimpose the normal model \\(N(114, 7)\\) to check visually that it’s the right fit.\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(sims, aes(x = mean)) +\n  geom_histogram(aes(y = after_stat(density)), binwidth = 1) +\n  scale_x_continuous(limits = c(86, 142),\n                     breaks = c(93, 100, 107, 114, 121, 128, 135)) +\n  stat_function(fun = dnorm, args = list(mean = 114, sd = 7),\n                color = \"red\", size = 1.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nLooks pretty good!\nAll we do now is convert everything to z scores. In other words, suppose we sample 4 individuals from a population distributed according to the normal model \\(N(0, 1)\\). Now the standard error of the sampling distribution is\n\\[\n\\frac{\\sigma}{\\sqrt{n}} = \\frac{1}{\\sqrt{4}} = 0.5.\n\\]\nThe following code will accomplish all of this. (Don’t worry about the messy syntax. All I’m doing here is making sure that this graph looks exactly the same as the previous graph, except now centered at \\(\\mu = 0\\) instead of \\(\\mu = 114\\).)\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nsims_z &lt;- data.frame(mean = scale(sims$mean,\n                                  center = 114, scale = 14))\nggplot(sims_z, aes(x = mean)) +\n  geom_histogram(aes(y = after_stat(density)), binwidth = 1/14) +\n  scale_x_continuous(limits = c(-2, 2),\n                     breaks = c(-1.5, -1, -0.5, 0, 0.5, 1, 1.5)) +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 0.5),\n                color = \"red\",  size = 1.5)\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nRemember that this is not the standard normal model \\(N(0, 1)\\). The standard deviation in the graph above is not 1, but 0.5 because that is the standard error when using samples of size 4. (\\(1/\\sqrt{4} = 0.5\\).)",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#unknown-standard-errors",
    "href": "19-inference_for_one_mean-web.html#unknown-standard-errors",
    "title": "19  Inference for one mean",
    "section": "19.4 Unknown standard errors",
    "text": "19.4 Unknown standard errors\nIf we want to run a hypothesis test, we will have a null hypothesis about the true value of the population mean \\(\\mu\\). For example,\n\\[\nH_{0}: \\mu = 114\n\\]\nNow we gather a sample and compute the sample mean, say 110.2043696. We would like to be able to compare the sample mean \\(\\bar{y}\\) to the hypothesized value 114 using a z score:\n\\[\nz = \\frac{(\\bar{y} - \\mu)}{\\sigma/\\sqrt{n}} = \\frac{(110.2 - 114)}{\\sigma/\\sqrt{4}}.\n\\]\nHowever, we have a problem: we usually don’t know the true value of \\(\\sigma\\). In our SBP example, we do happen to know it’s 14, but we won’t know this for a general research question.\nThe best we can do with a sample is calculate this z score replacing the unknown \\(\\sigma\\) with the sample standard deviation \\(s\\), 13.0561519. We’ll call this a “t score” instead of a “z score”:\n\\[\nt = \\frac{(\\bar{y} - \\mu)}{s/\\sqrt{n}} = \\frac{(110.2 - 114)}{13.06/\\sqrt{4}} = -0.58.\n\\]\nThe problem is that \\(s\\) is not a perfect estimate of \\(\\sigma\\). We saw earlier that \\(s\\) is usually close to \\(\\sigma\\), but \\(s\\) has its own sampling variability. That means that our earlier simulation in which we assumed that \\(\\sigma\\) was known and equal to 14 was wrong for the type of situation that will arise when we run a hypothesis test. How wrong was it?",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#simulating-t-scores",
    "href": "19-inference_for_one_mean-web.html#simulating-t-scores",
    "title": "19  Inference for one mean",
    "section": "19.5 Simulating t scores",
    "text": "19.5 Simulating t scores\nLet’s run the simulation again, but this time with the added uncertainty of using \\(s\\) to estimate \\(\\sigma\\).\nThe first step is to write a little function of our own to compute simulated t scores. This function will take a sample of size \\(n\\) from the true population \\(N(\\mu, \\sigma)\\), calculate the sample mean and sample standard deviation, then compute the t score. Don’t worry: you won’t be required to do anything like this on your own.\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nsim_t &lt;- function(n, mu, sigma) {\n  sample_values &lt;- rnorm(n, mean = mu, sd = sigma)\n  y_bar &lt;- mean(sample_values)\n  s &lt;- sd(sample_values)\n  t &lt;- (y_bar - mu)/(s / sqrt(n))\n}\n\nNow we can simulate doing this 2000 times.\n\nset.seed(5151977)\nsims_t &lt;- do(2000) * sim_t(4, mu = 114, sigma = 14) \nsims_t\n\n\n  \n\n\n\nLet’s plot our simulated t scores alongside a normal distribution.\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(sims_t, aes(x = sim_t)) +\n  geom_histogram(aes(y = after_stat(density)), binwidth = 0.25) +\n  scale_x_continuous(limits = c(-5, 5),\n                     breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4)) +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\n                color = \"red\", size = 1.5)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nThese t scores are somewhat close to the normal model we had when we knew \\(\\sigma\\), but the fit doesn’t look quite right. The peak of the simulated values isn’t quite high enough, and the tails seem to spill out over the much thinner tails of the normal model.\nWilliam Gosset figured this all out in the early 20th century. While working for the Guinness brewery in Dublin, Ireland, he started noticing that his quality control tests (using very small sample sizes) didn’t yield statistical results consistent with the normal models that were universally used at the time. At the encouragement of the company, which saw his work as a potential source of cost savings, he took some time off to study and consult with other statisticians. As a result, he found a new function that is similar to a normal distribution but is more spread out. This new function accounts for the extra variability one gets when using the sample standard deviation \\(s\\) as an estimate for the true population standard deviation \\(\\sigma\\). Guinness considered the result a “trade secret”, so they wouldn’t allow Gosset to publish under his own name. But they did permit him to publish his findings under the pseudonym “Student.” He used data sets unrelated to brewing and submitted his work to the top statistical journal of the time.\nThe new function Gosset discovered became known as the Student t distribution. He realized that the spread of the t distribution depends on the sample size. This makes sense: the accuracy of \\(s\\) will be greater when we have a larger sample. In fact, for large enough samples, the t distribution is very close to a normal model.\nGosset used the term degrees of freedom to describe how the sample size influences the spread of the t distribution. It’s somewhat mathematical and technical, so suffice it to say here that the number of degrees of freedom is simply the sample size minus 1:\n\\[\ndf = n - 1.\n\\]\nSo, is the t model correct for our simulated t scores? Our sample size was 4, so we should use a t model with 3 degrees of freedom. Let’s plot it in green on top of our previous graph and see:\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(sims_t, aes(x = sim_t)) +\n  geom_histogram(aes(y = after_stat(density)), binwidth = 0.25) +\n  scale_x_continuous(limits = c(-5, 5),\n                     breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4)) +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\n                color = \"red\", size = 1.5) +\n  stat_function(fun = dt, args = list(df = 3),\n                color = \"green\", size = 1.5)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nThe green curve fits the simulated values much better.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#inference-for-one-mean",
    "href": "19-inference_for_one_mean-web.html#inference-for-one-mean",
    "title": "19  Inference for one mean",
    "section": "19.6 Inference for one mean",
    "text": "19.6 Inference for one mean\nWhen we have a single numerical variable, we can ask if the sample mean is consistent or not with a null hypothesis. We will use a t model for our sampling distribution model as long as certain conditions are met.\nOne of the assumptions we made in the simulation above was that the true population was normally distributed. In general, we have no way of knowing if this is true. So instead we check the nearly normal condition: if a histogram or QQ plot of our data shows that the data is nearly normal, then there is a reasonable assumption that the whole population is shaped the same way.\nIf our sample size is large enough, the central limit theorem tells us that the sampling distribution gets closer and closer to a normal model. Therefore, we’ll use a rule of thumb that says that if the sample size is greater than 30, we won’t worry too much about any deviations from normality in the data.\nThe number 30 is somewhat arbitrary. If the sample size is 25 and a histogram shows only a little skewness, we’re probably okay. But if the sample size is 10, we need for the data to be very normal to justify using the t model. The irony, of course, is that small sample sizes are the hardest to check for normality. We’ll have to use our best judgment.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#outliers",
    "href": "19-inference_for_one_mean-web.html#outliers",
    "title": "19  Inference for one mean",
    "section": "19.7 Outliers",
    "text": "19.7 Outliers\nWe also need to be on the lookout for outliers. We’ve seen before that outliers can have a huge effect on means and standard deviations, especially when sample sizes are small. Whenever we find an outlier, we need to investigate.\nSome outliers are mistakes. Perhaps someone entered data incorrectly into the computer. When it’s clear that outliers are data entry errors, we are free to either correct them (if we know what error was made) or delete them from our data completely.\nSome outliers are not necessarily mistakes, but should be excluded for other reasons. For example, if we are studying the weight of birds and we have sampled a bunch of hummingbirds and one emu, the emu’s weight will appear as an outlier. It’s not that its weight is “wrong,” but it clearly doesn’t belong in the analysis.\nIn general, though, outliers are real data that just happen to be unusual. It’s not ethical simply to throw away such data points because they are inconvenient. (We only do so in very narrow and well-justified circumstances like the emu.) The best policy to follow when faced with such outliers is to run inference twice—once with the outlier included, and once with the outlier excluded. If, when running a hypothesis test, the conclusion is the same either way, then the outlier wasn’t all that influential, so we leave it in. If, when computing a confidence interval, the endpoints don’t change a lot either way, then we leave the outlier in. However, when conclusions or intervals are dramatically different depending on whether the outlier was in or out, then we have no choice but to state that honestly.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#research-question",
    "href": "19-inference_for_one_mean-web.html#research-question",
    "title": "19  Inference for one mean",
    "section": "19.8 Research question",
    "text": "19.8 Research question\nThe teacher data from the openintro package contains information on 71 teachers employed by the St. Louis Public School in Michigan. According to Google, the average teacher salary in Michigan was $63,024 in 2010. So does this data suggest that the teachers in the St. Louis region of Michigan are paid differently than teachers in other parts of Michigan?\nLet’s walk through the rubric.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#exploratory-data-analysis",
    "href": "19-inference_for_one_mean-web.html#exploratory-data-analysis",
    "title": "19  Inference for one mean",
    "section": "19.9 Exploratory data analysis",
    "text": "19.9 Exploratory data analysis\n\n19.9.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou should type ?teacher at the Console to read the help file. Unfortunately, the help file does not give us a lot of information about how the data was collected. The only source listed is a website that no longer contains this data set. Besides, that website is just an open repository for data, so it’s not clear that the site would have contained any additional information about the provenance of the data. We will have to assume that the data was collected accurately.\nHere is the data set:\n\nteacher\n\n\n  \n\n\n\n\nglimpse(teacher)\n\nRows: 71\nColumns: 8\n$ id         &lt;fct&gt; 01, 02, 03, 04, 05, 06, 07, 08, 09, 11, 12, 13, 14, 15, 16,…\n$ degree     &lt;fct&gt; BA, MA, MA, BA, BA, BA, BA, MA, BA, BA, BA, BA, BA, BA, MA,…\n$ fte        &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ years      &lt;dbl&gt; 5.0, 15.0, 16.0, 10.0, 26.0, 28.5, 12.0, 32.0, 25.0, 12.0, …\n$ base       &lt;int&gt; 45388, 60649, 60649, 54466, 65360, 65360, 58097, 68230, 653…\n$ fica       &lt;dbl&gt; 3472.18, 4639.65, 4639.65, 4166.65, 5000.04, 5000.04, 4444.…\n$ retirement &lt;dbl&gt; 7688.73, 10273.94, 10273.94, 9226.54, 11071.98, 11071.98, 9…\n$ total      &lt;dbl&gt; 56548.91, 75562.59, 75562.59, 67859.19, 81432.02, 81432.02,…\n\n\nSince total is a numerical variable, we can use the summary function to produce the five-number summary. (The function also reports the mean.)\n\nsummary(teacher$total)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24793   63758   74647   70289   81432   85008 \n\n\n\n\n19.9.2 Prepare the data for analysis.\nCheck for missing data:\n\nteacher |&gt;\n  drop_na(total) |&gt;\n  NROW()\n\n[1] 71\n\n\nThere is no missing data.\nSee the next section to find out what we do when we discover an outlier.\n\n\n19.9.3 Make tables or plots to explore the data visually.\nHere is a histogram.\n\nggplot(teacher, aes(x = total)) +\n  geom_histogram(binwidth = 5000, boundary = 60000)\n\n\n\n\n\n\n\n\nAnd here is a QQ plot.\n\nggplot(teacher, aes(sample = total)) +\n  geom_qq() +\n  geom_qq_line()\n\n\n\n\n\n\n\n\nThis distribution is quite skewed to the left. Of even more concern is the extreme outlier on the left.\nWith any outlier, we need to investigate.\n\nExercise 1\nLet’s sort the data by total (ascending) using the arrange command.\n\nteacher %&gt;%\n  arrange(total)\n\n\n  \n\n\n\nCan you figure out why the person with the lowest total salary is different from all the other teachers?\n\nPlease write up your answer here.\n\n\nBased on your answer to the above exercise, hopefully it’s clear that this is an outlier for which we can easily justify exclusion. We can use the filter command to get only the rows we want. There are lots of ways to do this, but it’s easy enough to grab only salaries above $30,000. (There’s only one salary below $30,000, so that outlier will be excluded.)\nCAUTION: If you are copying and pasting from this example to use for another research question, the following code chuck is specific to this research question and not applicable in other contexts.\n\nteacher2 &lt;- teacher %&gt;%\n  filter(total &gt; 30000)\n\nCheck to make sure this had the desired effect:\n\nsummary(teacher2$total)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  44138   63758   74647   70939   81432   85008 \n\n\nNotice how the min is no longer $24,793.41.\nHere are the new plots:\n\nggplot(teacher2, aes(x = total)) +\n  geom_histogram(binwidth = 5000, boundary = 60000)\n\n\n\n\n\n\n\n\n\nggplot(teacher2, aes(sample = total)) +\n  geom_qq() +\n  geom_qq_line()\n\n\n\n\n\n\n\n\nThe left skew is still present, but we have removed the outlier.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#hypotheses",
    "href": "19-inference_for_one_mean-web.html#hypotheses",
    "title": "19  Inference for one mean",
    "section": "19.10 Hypotheses",
    "text": "19.10 Hypotheses\n\n19.10.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of 70 teachers employed by the St. Louis Public School in Michigan. We are using these 70 teachers as a hopefully representative sample of all teachers in that region of Michigan.\n\n\n19.10.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) Teachers in the St. Louis region earn $63,024 on average. (In other words, these teachers are the same as the teachers anywhere else in Michigan.)\n\\(H_{A}:\\) Teachers in the St. Louis region do not earn $63,024 on average. (In other words, these teachers are not the same as the teachers anywhere else in Michigan.)\n\n\n19.10.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_0: \\mu = 63024\\)\n\\(H_A: \\mu \\neq 63024\\)",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#model",
    "href": "19-inference_for_one_mean-web.html#model",
    "title": "19  Inference for one mean",
    "section": "19.11 Model",
    "text": "19.11 Model\n\n19.11.1 Identify the sampling distribution model.\nWe will use a t model with 69 degrees of freedom.\nCommentary: The original teacher data had 71 observations. The teacher2 data has only 70 observations because we removed an outlier. Therefore \\(n = 70\\) and thus \\(df = n - 1 = 69\\).\n\n\n19.11.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nWe know this isn’t a random sample. We’re not sure if this school is representative of other schools in the region, so we’ll proceed with caution.\n\n10%\n\nThis is also suspect, as it’s not clear that there are 700 teachers in the region. One way to look at it is this: if there are 10 or more schools in the region, and all the school are about the size of the St. Louis Public School under consideration, then we should be okay.\n\nNearly Normal\n\nFor this, we note that the sample size is much larger than 30, so we should be okay, even with the skewness in the data.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#mechanics",
    "href": "19-inference_for_one_mean-web.html#mechanics",
    "title": "19  Inference for one mean",
    "section": "19.12 Mechanics",
    "text": "19.12 Mechanics\n\n19.12.1 Compute the test statistic.\n\ntotal_mean &lt;- teacher2 %&gt;%\n  specify(response = total) %&gt;%\n  calculate(stat = \"mean\")\ntotal_mean\n\n\n  \n\n\n\n\ntotal_t &lt;- teacher2 %&gt;%\n  specify(response = total) %&gt;%\n  hypothesize(null = \"point\", mu = 63024) %&gt;%\n  calculate(stat = \"t\")\ntotal_t\n\n\n  \n\n\n\n\n\n19.12.2 Report the test statistic in context (when possible).\nThe sample mean is $7.0938573^{4}.\nThe t score is 5.886253. The mean teacher salary in our sample is almost 6 standard errors to the right of the null value.\n\n\n19.12.3 Plot the null distribution.\n\ntotal_test &lt;- teacher2 %&gt;%\n  specify(response = total) %&gt;%\n  assume(\"t\")\ntotal_test\n\nA T distribution with 69 degrees of freedom.\n\n\n\ntotal_test %&gt;%\n  visualize() +\n  shade_p_value(obs_stat = total_t, direction = \"two-sided\")\n\n\n\n\n\n\n\n\nCommentary: Although we are conducting a two-sided test, the area in the tails is so small that it can’t really be seen in the picture above.\n\n\n19.12.4 Calculate the P-value.\n\ntotal_test_p &lt;- total_test %&gt;%\n  get_p_value(obs_stat = total_t, direction = \"two-sided\")\ntotal_test_p\n\n\n  \n\n\n\n\n\n19.12.5 Interpret the P-value as a probability given the null.\n\\(P &lt; 0.001\\). If teachers in the St. Louis region truly earned $63,024 on average, there would be less than a 0.1% chance of seeing data at least as extreme as what we saw.\nCommentary: When the P-value is this small, remember that it is traditional to report simply \\(P &lt; 0.001\\).",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#conclusion",
    "href": "19-inference_for_one_mean-web.html#conclusion",
    "title": "19  Inference for one mean",
    "section": "19.13 Conclusion",
    "text": "19.13 Conclusion\n\n19.13.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n19.13.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is sufficient evidence that teachers in the St. Louis region do not earn $63,024 on average.\n\n\n19.13.3 Express reservations or uncertainty about the generalizability of the conclusion.\nBecause we do not know how this data was collected (was it every teacher in this region? was it a sample of some of the teachers? was it a representative sample?), we do not know if we can generalize it to all teachers in the region. Also, the data set was from 2010, so we know that this data cannot be applied to teachers in St. Louis, Michigan now.\n\n\n19.13.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we’ve made a Type I error, then the truth is that teachers in this region do make around $63,024 on average, but our sample was way off.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#confidence-interval",
    "href": "19-inference_for_one_mean-web.html#confidence-interval",
    "title": "19  Inference for one mean",
    "section": "19.14 Confidence interval",
    "text": "19.14 Confidence interval\n\n19.14.1 Check the relevant conditions to ensure that model assumptions are met.\nAll the conditions have been checked already.\n\n\n19.14.2 Calculate and graph the confidence interval.\n\ntotal_ci &lt;- total_test %&gt;%\n  get_confidence_interval(point_estimate = total_mean, level = 0.95)\ntotal_ci\n\n\n  \n\n\n\n\ntotal_test %&gt;%\n  visualize() +\n  shade_confidence_interval(endpoints = total_ci)\n\n\n\n\n\n\n\n\n\n\n19.14.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true mean salary for teachers in the St. Louis region is captured in the interval (6.82562^{4}, 7.362095^{4}).\nCommentary: As these are dollar amounts, it makes sense to round them to two decimal places. Even then, R is finicky and sometimes it will not respect your wishes.)\n\n\n19.14.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nSince $63,024 is not contained in the confidence interval, it is not a plausible value for the mean teacher salary in the St Louis region of Michigan.\n\n\n19.14.5 Comment on the effect size and the practical significance of the result.\nEven at the low end of 6.82562^{4}, this is pretty big difference above our null value of $63,024. It’s more than $5000 per year over the average salary in the rest of Michigan. And the high end of our confidence interval is more than $10,000 above the average salary for teachers elsewhere in the state. Not only do we have a strongly statistically discernible result (the P-value was very small, leading to strong evidence rejecting the null hypothesis), the effect size is large in real world terms as well.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#your-turn",
    "href": "19-inference_for_one_mean-web.html#your-turn",
    "title": "19  Inference for one mean",
    "section": "19.15 Your turn",
    "text": "19.15 Your turn\nIn the High School and Beyond survey (the hsb2 data set from the openintro package), among the many scores that are recorded are standardized math scores. Suppose that these scores are normalized so that a score of 50 represents some kind of international average. (This is not really true. I had to make something up here to give you a baseline number with which to work.) The question is, then, are American students different from this international baseline?\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here. {-}\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.\n\n\n\n\nConfidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nComment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#additional-exercises",
    "href": "19-inference_for_one_mean-web.html#additional-exercises",
    "title": "19  Inference for one mean",
    "section": "19.16 Additional exercises",
    "text": "19.16 Additional exercises\nAfter running inference above, answer the following questions:\n\nExercise 2\nEven though the result was statistically discernible , do you think the result is practically significant? By this, I mean, are scores for American students so vastly different than 50? Do we have a lot of reason to brag about American scores based on your analysis?\n\nPlease write up your answer here.\n\n\n\nExercise 3\nWhat makes it possible for a small effect like this to be statistically significant even if it’s not practically very different from 50? In other words, what has to be true of data to detect small but statistically discernible effects?\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "19-inference_for_one_mean-web.html#conclusion-2",
    "href": "19-inference_for_one_mean-web.html#conclusion-2",
    "title": "19  Inference for one mean",
    "section": "19.17 Conclusion",
    "text": "19.17 Conclusion\nWhen working with numerical data, we have to estimate a mean and a standard deviation. The extra variability in estimating both gives rise to a sampling distribution model with thicker tails called the Student t distribution. Using this distribution gives us a way to calculate P-values and confidence intervals that take this variation into account.\n\n19.17.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Inference for one mean</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html",
    "href": "20-inference_for_paired_data-web.html",
    "title": "20  Inference for paired data",
    "section": "",
    "text": "20.1 Introduction\nIn this chapter we will learn how to run inference for two paired numerical variables.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#introduction",
    "href": "20-inference_for_paired_data-web.html#introduction",
    "title": "20  Inference for paired data",
    "section": "",
    "text": "20.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n20.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/20-inference_for_paired_data.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n20.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#load-packages",
    "href": "20-inference_for_paired_data-web.html#load-packages",
    "title": "20  Inference for paired data",
    "section": "20.2 Load packages",
    "text": "20.2 Load packages\nWe load the standard tidyverse and infer packages. The openintro package will give access to the textbooks data and the hsb2 data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(infer)\nlibrary(openintro)\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#paired-data",
    "href": "20-inference_for_paired_data-web.html#paired-data",
    "title": "20  Inference for paired data",
    "section": "20.3 Paired data",
    "text": "20.3 Paired data\nSometimes data sets have two numerical variables that are related to each other. For example, a diet study might include a pre-weight and a post-weight. The research question is not about either of these variables directly, but rather the difference between the variables, for example how much weight was lost during the diet.\nWhen this is the case, we run inference for paired data. The procedure involves calculating a new variable d that represents the difference of the two paired variables. The null hypothesis is almost always that there is no difference between the paired variables, and that translates into the statement that the average value of d is zero.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#research-question",
    "href": "20-inference_for_paired_data-web.html#research-question",
    "title": "20  Inference for paired data",
    "section": "20.4 Research question",
    "text": "20.4 Research question\nThe textbooks data frame (from the openintro package) has data on the price of books at the UCLA bookstore versus Amazon.com. The question of interest here is whether the campus bookstore charges more than Amazon.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#inference-for-paired-data",
    "href": "20-inference_for_paired_data-web.html#inference-for-paired-data",
    "title": "20  Inference for paired data",
    "section": "20.5 Inference for paired data",
    "text": "20.5 Inference for paired data\nThe key idea is that we don’t actually care about the book prices themselves. All we care about is if there is a difference between the prices for each book. These are not two independent variables because each row represents a single book. Therefore, the two measurements are “paired” and should be treated as a single numerical variable of interest, representing the difference between ucla_new and amaz_new.\nSince we’re only interested in analyzing the one numerical variable d, this process is nothing more than a one-sample t test. Therefore, there is really nothing new in this chapter.\nLet’s go through the rubric.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#exploratory-data-analysis",
    "href": "20-inference_for_paired_data-web.html#exploratory-data-analysis",
    "title": "20  Inference for paired data",
    "section": "20.6 Exploratory data analysis",
    "text": "20.6 Exploratory data analysis\n\n20.6.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou should type textbooks at the Console to read the help file. The data was collected by a person, David Diez. A quick Google search reveals that he is a statistician who graduated from UCLA. We presume he had access to accurate information about the prices of books at the UCLA bookstore and from Amazon.com at the time the data was collected.\nHere is the data set:\n\ntextbooks\n\n\n  \n\n\n\n\nglimpse(textbooks)\n\nRows: 73\nColumns: 7\n$ dept_abbr &lt;fct&gt; Am Ind, Anthro, Anthro, Anthro, Art His, Art His, Asia Am, A…\n$ course    &lt;fct&gt;  C170, 9, 135T, 191HB, M102K, 118E, 187B, 191E, C125, M145B,…\n$ isbn      &lt;fct&gt; 978-0803272620, 978-0030119194, 978-0300080643, 978-02262068…\n$ ucla_new  &lt;dbl&gt; 27.67, 40.59, 31.68, 16.00, 18.95, 14.95, 24.70, 19.50, 123.…\n$ amaz_new  &lt;dbl&gt; 27.95, 31.14, 32.00, 11.52, 14.21, 10.17, 20.06, 16.66, 106.…\n$ more      &lt;fct&gt; Y, Y, Y, Y, Y, Y, Y, N, N, Y, Y, N, Y, Y, N, N, N, N, N, N, …\n$ diff      &lt;dbl&gt; -0.28, 9.45, -0.32, 4.48, 4.74, 4.78, 4.64, 2.84, 17.59, 3.7…\n\n\nThe two paired variables are ucla_new and amaz_new.\n\n\n20.6.2 Prepare the data for analysis.\nFirst, a quick check for missing data:\n\ntextbooks |&gt;\n  drop_na(ucla_new, amaz_new) |&gt;\n  NROW()\n\n[1] 73\n\n\nGenerally, we will need to create a new variable d that represents the difference between the two paired variables of interest. This uses the mutate command that adds an extra column to our data frame. The order of subtraction usually does not matter, but we will want to keep track of that order so that we can interpret our test statistic correctly. In the case of a one-sided test (which this is), it is especially important to keep track of the order of subtraction. Since we suspect the bookstore will charge more than Amazon, let’s subtract in that order. Our hunch is that it will be a positive number, on average.\n\ntextbooks &lt;- textbooks |&gt;\n  mutate(d = ucla_new - amaz_new)\ntextbooks\n\n\n  \n\n\n\n\nglimpse(textbooks)\n\nRows: 73\nColumns: 8\n$ dept_abbr &lt;fct&gt; Am Ind, Anthro, Anthro, Anthro, Art His, Art His, Asia Am, A…\n$ course    &lt;fct&gt;  C170, 9, 135T, 191HB, M102K, 118E, 187B, 191E, C125, M145B,…\n$ isbn      &lt;fct&gt; 978-0803272620, 978-0030119194, 978-0300080643, 978-02262068…\n$ ucla_new  &lt;dbl&gt; 27.67, 40.59, 31.68, 16.00, 18.95, 14.95, 24.70, 19.50, 123.…\n$ amaz_new  &lt;dbl&gt; 27.95, 31.14, 32.00, 11.52, 14.21, 10.17, 20.06, 16.66, 106.…\n$ more      &lt;fct&gt; Y, Y, Y, Y, Y, Y, Y, N, N, Y, Y, N, Y, Y, N, N, N, N, N, N, …\n$ diff      &lt;dbl&gt; -0.28, 9.45, -0.32, 4.48, 4.74, 4.78, 4.64, 2.84, 17.59, 3.7…\n$ d         &lt;dbl&gt; -0.28, 9.45, -0.32, 4.48, 4.74, 4.78, 4.64, 2.84, 17.59, 3.7…\n\n\nIf you look closely at the tibble above, you will see that there is a column already in our data called diff. It is the same as the column d we just created. So in this case, we didn’t really need to create a new difference variable. However, since most data sets do not come pre-prepared with such a difference variable, it is good to know how to make one if needed.\n\n\n20.6.3 Make tables or plots to explore the data visually.\nHere are summary statistics, a histogram, and a QQ plot for d.\n\nsummary(textbooks$d)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  -9.53    3.80    8.23   12.76   17.59   66.00 \n\n\n\nggplot(textbooks, aes(x = d)) +\n  geom_histogram(binwidth = 10, boundary = 0)\n\n\n\n\n\n\n\n\n\nggplot(textbooks, aes(sample = d)) +\n  geom_qq() +\n  geom_qq_line()\n\n\n\n\n\n\n\n\nThe data is somewhat skewed to the right with one observation that might be a bit of an outlier. If the sample size were much smaller, we might be concerned about this point However, it’s not much higher than other points in that right tail, and it doesn’t appear that its inclusion or exclusion will change the overall conclusion much. If you are concerned that the point might alter the conclusion, run the hypothesis test twice, once with and once without the outlier present to see if the main conclusion changes.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#hypotheses",
    "href": "20-inference_for_paired_data-web.html#hypotheses",
    "title": "20  Inference for paired data",
    "section": "20.7 Hypotheses",
    "text": "20.7 Hypotheses\n\n20.7.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of 73 textbooks. The population is all textbooks that might be sold both at the UCLA bookstore and on Amazon.\n\n\n20.7.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) There is no difference in textbooks prices between the UCLA bookstore and Amazon.\n\\(H_{A}:\\) Textbook prices at the UCLA bookstore are higher on average than on Amazon.\nCommentary: Note we are performing a one-sided test. If we are conducting our own research with our own data, we can decide whether we want to run a two-sided or one-sided test. Remember that we only do the latter when we have a strong hypothesis in advance that the difference should be clearly in one direction and not the other. In this case, it’s not up to us. We have to respect the research question as it was given to us: “The question of interest here is whether the campus bookstore charges more than Amazon.”\n\nExercise 1\nWhat would the research question say if we were supposed to run a two-sided test instead? In other words, write down a slightly different research question about textbook prices that would prompt us to run a two-sided test.\n\nPlease write up your answer here.\n\n\n\n\n20.7.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: \\mu_{d} = 0\\)\n\\(H_{A}: \\mu_{d} &gt; 0\\)\nCommentary: Since we’re really just doing a one-sample t test, we could just call this parameter \\(\\mu\\), but the subscript \\(d\\) is a good reminder that it’s the mean of the difference variable we care about (as opposed to the mean price of all the books at the UCLA bookstore or the mean price of all the same books on Amazon).",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#model",
    "href": "20-inference_for_paired_data-web.html#model",
    "title": "20  Inference for paired data",
    "section": "20.8 Model",
    "text": "20.8 Model\n\n20.8.1 Identify the sampling distribution model.\nWe use a t model with 72 degrees of freedom.\n\nExercise 2\nExplain how we got 72 degrees of freedom.\n\nPlease write up your answer here.\n\n\n\n\n20.8.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nWe do not know how exactly how David Diez obtained this sample, but the help file claims it is a random sample.\n\n10%\n\nWe do not know how many total textbooks were available at the UCLA bookstore at the time the sample was taken, so we do not know if this condition is met. As long as there were at least 730 books, we are okay. We suspect that, based on the size of UCLA and the number of course offerings there, this is a reasonable assumption.\n\nNearly normal\n\nAlthough the sample distribution is skewed (with a possible mild outlier), the sample size is more than 30.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#mechanics",
    "href": "20-inference_for_paired_data-web.html#mechanics",
    "title": "20  Inference for paired data",
    "section": "20.9 Mechanics",
    "text": "20.9 Mechanics\n\n20.9.1 Compute the test statistic.\n\nd_mean &lt;- textbooks |&gt;\n  specify(response = d) |&gt;\n  calculate(stat = \"mean\")\nd_mean\n\n\n  \n\n\n\n\nd_t &lt;- textbooks |&gt;\n  specify(response = d) |&gt;\n  hypothesize(null = \"point\", mu = 0) |&gt;\n  calculate(stat = \"t\")\nd_t\n\n\n  \n\n\n\n\n\n20.9.2 Report the test statistic in context (when possible).\nThe mean difference in textbook prices is 12.7616438.\nThe value of t is 7.6487711. The mean difference in textbook prices is more than 7 standard errors above a difference of zero.\n\n\n20.9.3 Plot the null distribution.\n\nprice_test &lt;- textbooks |&gt;\n  specify(response = d) |&gt;\n  assume(\"t\")\nprice_test\n\nA T distribution with 72 degrees of freedom.\n\n\n\nprice_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = d_t, direction = \"greater\")\n\n\n\n\n\n\n\n\n\n\n20.9.4 Calculate the P-value.\n\nprice_test_p &lt;- price_test |&gt;\n  get_p_value(obs_stat = d_t, direction = \"greater\")\nprice_test_p\n\n\n  \n\n\n\n\n\n20.9.5 Interpret the P-value as a probability given the null.\n\\(P &lt; 0.001\\). If there were no difference in textbook prices between the UCLA bookstore and Amazon, there would be less than a 0.1% chance of seeing data at least as extreme as what we saw. (Remember that a P-value can never be zero. That’s why we state \\(P &lt; 0.001\\).)",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#conclusion",
    "href": "20-inference_for_paired_data-web.html#conclusion",
    "title": "20  Inference for paired data",
    "section": "20.10 Conclusion",
    "text": "20.10 Conclusion\n\n20.10.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n20.10.2 State (but do not overstate) a contextually meaningful conclusion.\nWe have sufficient evidence that UCLA prices are higher than Amazon prices.\nCommentary: Note that because we performed a one-sided test, our conclusion is also one-sided in the hypothesized direction.\n\n\n20.10.3 Express reservations or uncertainty about the generalizability of the conclusion.\nWe can be confident about the validity of this data, and therefore the conclusion drawn. We should be careful to limit our conclusion to the UCLA bookstore (and not extrapolate the findings, say, to other campus bookstores). Depending on when this data was collected, we may not be able to say anything about current prices at the UCLA bookstore either.\n\n\n20.10.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we made a Type I error, that would mean there was actually no difference in textbook prices, but that we got an unusual sample that detected a difference.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#confidence-interval",
    "href": "20-inference_for_paired_data-web.html#confidence-interval",
    "title": "20  Inference for paired data",
    "section": "20.11 Confidence interval",
    "text": "20.11 Confidence interval\n\n20.11.1 Check the relevant conditions to ensure that model assumptions are met.\nAll necessary conditions have already been checked.\n\n\n20.11.2 Calculate and graph the confidence interval.\n\nprice_ci &lt;- price_test |&gt;\n  get_confidence_interval(point_estimate = d_mean, level = 0.95)\nprice_ci\n\n\n  \n\n\n\n\nprice_test |&gt;\n  visualize() +\n  shade_confidence_interval(endpoints = price_ci)\n\n\n\n\n\n\n\n\n\n\n20.11.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true difference in textbook prices between the UCLA bookstore and Amazon is captured in the interval (9.44, 16.09). This was obtained by subtracting the Amazon price minus the UCLA bookstore. In other words, since all differences in the confidence interval are positive, all plausible differences indicate that the UCLA prices are higher than the Amazon prices.\nCommentary: Don’t forget that any time we find a number that represents a difference, we have to be clear in the conclusion about the direction of subtraction. Otherwise, we have no idea how to interpret positive and negative values.\nAlso note the use of the round function here since we are working with dollar values. Keep in mind, however, that R sometimes doesn’t respect your wishes and will not always display a number with two decimal points.\n\n\n20.11.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nThe confidence interval does not contain zero, which means that zero is not a plausible value for the difference textbook prices.\n\n\n20.11.5 When comparing two groups, comment on the effect size and the practical significance of the result.\nTo think about the practical significance, imagine that you were a student at UCLA and that every textbook you needed was (on average) $10 to $15 more expensive in the bookstore than purchasing on Amazon. Multiplied across the number of textbooks you need, that could amount to a significant increase in expenses. In other words, that dollar figure is not likely a trivial amount of money for many students who require multiple textbooks each semester.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#your-turn",
    "href": "20-inference_for_paired_data-web.html#your-turn",
    "title": "20  Inference for paired data",
    "section": "20.12 Your turn",
    "text": "20.12 Your turn\nThe hsb2 data set contains data from a random sample of 200 high school seniors from the “High School and Beyond” survey conducted by the National Center of Education Statistics. It contains, among other things, students’ scores on standardized tests in math, reading, writing, science, and social studies. We want to know if students do better on the math test or on the reading test.\nRun inference to determine if there is a difference between math scores and reading scores.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.\n\n\n\n\nConfidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nComment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "20-inference_for_paired_data-web.html#conclusion-2",
    "href": "20-inference_for_paired_data-web.html#conclusion-2",
    "title": "20  Inference for paired data",
    "section": "20.13 Conclusion",
    "text": "20.13 Conclusion\nPaired data occurs whenever we have two numerical measurements that are related to each other, whether because they come from the same observational units or from closely related ones. When our data is structured as pairs of measurements in this way, we can subtract the two columns and obtain a difference. That difference variable is the object of our study, and now that it is represented as a single numerical variable, we can apply the one-sample t test from the last chapter.\n\n20.13.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Inference for paired data</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html",
    "href": "21-inference_for_two_independent_means-web.html",
    "title": "21  Inference for two independent means",
    "section": "",
    "text": "21.1 Introduction\nIf we have a numerical variable and a categorical variable with two categories, we can think of the numerical variable as response and the categorical variable as predictor. The idea is that the two categories sort your numerical data into two groups which can be compared. Assuming the two groups are independent of each other, we can use them as samples of two larger populations. This leads to inference to decide if the difference between the means of the two groups is statistically significant and then estimate the difference between the means of the two populations represented. The relevant hypothesis test is called a two-sample t test (or Welch’s t test, to be specific).",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#introduction",
    "href": "21-inference_for_two_independent_means-web.html#introduction",
    "title": "21  Inference for two independent means",
    "section": "",
    "text": "21.1.1 Install new packages\nThere are no new packages used in this chapter.\n\n\n21.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/21-inference_for_two_independent_means.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n21.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#load-packages",
    "href": "21-inference_for_two_independent_means-web.html#load-packages",
    "title": "21  Inference for two independent means",
    "section": "21.2 Load packages",
    "text": "21.2 Load packages\nWe load the standard tidyverse, janitor, and infer packages. We also use the MASS package for the birthwt data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#research-question",
    "href": "21-inference_for_two_independent_means-web.html#research-question",
    "title": "21  Inference for two independent means",
    "section": "21.3 Research question",
    "text": "21.3 Research question\nRecall the birthwt data that was collected at Baystate Medical Center, Springfield, Mass during 1986. In a previous chapter, we measured low birth weight babies using a categorical variable that served as an indicator for low birth weight.\n\nExercise 1\nHow was it determined if a baby was considered “low birth weight” for purposes of constructing the variable low? Use the help file to find out.\n\nPlease write up your answer here.\n\n\nWe have the actual birth weight of the babies in this data. So, rather than using a coarse classification into a binary “yes or no” variable, why not use the full precision of the birth weight measured in grams? This is a very precisely measured numerical variable.\nWe’d like to compare mean birth weights among two groups: women who smoked during pregnancy, and women who didn’t.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#data-preparation",
    "href": "21-inference_for_two_independent_means-web.html#data-preparation",
    "title": "21  Inference for two independent means",
    "section": "21.4 Data preparation",
    "text": "21.4 Data preparation\nThe actual mean weights in each sample (the smoking women and the nonsmoking women) can be found using a group_by and summarise pipeline:\n\nbirthwt |&gt;\n  group_by(smoke) |&gt;\n  summarise(mean(bwt))\n\n\n  \n\n\n\nNote that 0 means “nonsmoker” and 1 means “smoker”. Looks like We need to address the fact the smoke variable is recorded as a numerical variable instead of a categorical variable:\n\nbirthwt &lt;- birthwt |&gt;\n  mutate(smoke_fct = factor(smoke,\n                            levels = c(0, 1),\n                            labels = c(\"Nonsmoker\", \"Smoker\")))\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 11\n$ low       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ age       &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, …\n$ lwt       &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 9…\n$ race      &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, …\n$ smoke     &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, …\n$ ptl       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ ht        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ ui        &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, …\n$ ftv       &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, …\n$ bwt       &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, …\n$ smoke_fct &lt;fct&gt; Nonsmoker, Nonsmoker, Smoker, Smoker, Smoker, Nonsmoker, Non…\n\n\nThe difference between the means is now calculated using infer tools. We will store the result as obs_diff for “observed difference.”\n\nobs_diff &lt;- birthwt |&gt;\n  specify(response = bwt, explanatory = smoke_fct) |&gt; \n  calculate(stat = \"diff in means\",\n            order = c(\"Nonsmoker\", \"Smoker\"))\nobs_diff\n\n\n  \n\n\n\n\nExercise 2\nWhat would happen if we used order = c(\"Smoker\", \"Nonsmoker\") instead? Why might we have a slight preference for order = c(\"Nonsmoker\", \"Smoker\")?\n\nPlease write up your answer here.\n\n\nNote that it will not actually make a difference to the inferential process in which order we subtract. However, we do have to be consistent to use the same order throughout. When interpreting the test statistic, confidence interval, and effect size, we will need to pay attention to the order of subtraction to make sure we are interpreting our results correctly.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#every-day-im-shuffling",
    "href": "21-inference_for_two_independent_means-web.html#every-day-im-shuffling",
    "title": "21  Inference for two independent means",
    "section": "21.5 Every day I’m shuffling",
    "text": "21.5 Every day I’m shuffling\nWhenever there are two groups, the obvious null hypothesis is that there is no difference between them.\nConsider the smoke variable. If there were truly no difference in mean birth weights between women who smoked and women who didn’t, then it shouldn’t matter if we know the smoking status or not. It becomes irrelevant under the assumption of the null.\nWe can simulate this assumption by shuffling the list of smoking status. More concretely, we can randomly assign a smoking status label to each mother and then calculate the average birth weight in each group. Since the smoking labels are random, there’s no reason to expect a difference between the two average weights other than random fluctuations due to sampling variability.\nFor example, here is the actual smoking status of the women:\n\nbirthwt$smoke_fct\n\n  [1] Nonsmoker Nonsmoker Smoker    Smoker    Smoker    Nonsmoker Nonsmoker\n  [8] Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n [15] Smoker    Smoker    Nonsmoker Smoker    Nonsmoker Smoker    Nonsmoker\n [22] Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Smoker    Nonsmoker\n [29] Smoker    Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker\n [36] Smoker    Smoker    Smoker    Smoker    Smoker    Smoker    Nonsmoker\n [43] Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker\n [50] Smoker    Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker\n [57] Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n [64] Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker\n [71] Smoker    Smoker    Smoker    Nonsmoker Smoker    Nonsmoker Nonsmoker\n [78] Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n [85] Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n [92] Nonsmoker Smoker    Smoker    Smoker    Nonsmoker Nonsmoker Smoker   \n [99] Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker\n[106] Nonsmoker Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker\n[113] Smoker    Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n[120] Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n[127] Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker   \n[134] Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Smoker   \n[141] Smoker    Smoker    Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker\n[148] Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker   \n[155] Nonsmoker Smoker    Smoker    Smoker    Nonsmoker Smoker    Smoker   \n[162] Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker\n[169] Smoker    Nonsmoker Smoker    Smoker    Smoker    Nonsmoker Nonsmoker\n[176] Smoker    Smoker    Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker\n[183] Smoker    Smoker    Smoker    Nonsmoker Smoker    Nonsmoker Smoker   \nLevels: Nonsmoker Smoker\n\n\nBut we’re going to use values that have been randomly shuffled, like this one, for example:\n\nset.seed(1729)\nsample(birthwt$smoke_fct)\n\n  [1] Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker   \n  [8] Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker\n [15] Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker\n [22] Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker Smoker   \n [29] Nonsmoker Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker\n [36] Smoker    Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n [43] Nonsmoker Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker\n [50] Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker    Nonsmoker\n [57] Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Smoker   \n [64] Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker\n [71] Nonsmoker Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker   \n [78] Smoker    Smoker    Smoker    Smoker    Smoker    Smoker    Nonsmoker\n [85] Smoker    Nonsmoker Smoker    Smoker    Smoker    Nonsmoker Nonsmoker\n [92] Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker Smoker   \n [99] Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker    Nonsmoker\n[106] Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker    Smoker    Smoker   \n[113] Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker\n[120] Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Smoker    Smoker   \n[127] Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Smoker    Nonsmoker\n[134] Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Nonsmoker Smoker   \n[141] Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker\n[148] Smoker    Nonsmoker Nonsmoker Smoker    Nonsmoker Smoker    Smoker   \n[155] Smoker    Nonsmoker Nonsmoker Nonsmoker Smoker    Smoker    Nonsmoker\n[162] Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n[169] Nonsmoker Smoker    Smoker    Nonsmoker Smoker    Nonsmoker Nonsmoker\n[176] Nonsmoker Smoker    Smoker    Nonsmoker Nonsmoker Nonsmoker Nonsmoker\n[183] Smoker    Nonsmoker Nonsmoker Nonsmoker Smoker    Nonsmoker Nonsmoker\nLevels: Nonsmoker Smoker\n\n\nThe infer package will perform this random shuffling over and over again. Given the now arbitrary labels of “Nonsmoker” and “Smoker” (which are meaningless because each women was assigned to one of these labels randomly with no regard to her actual smoking status), infer will calculate the mean birth weights among the first group of women (labeled “Nonsmokers” but not really consisting of all nonsmokers) and the second group of women (labeled “Smokers” but not really consisting of all smokers). Finally infer will compute the difference between those two means. And it will do this process 1000 times.\n\nset.seed(1729)\nbwt_smoke_test &lt;- birthwt |&gt;\n  specify(response = bwt, explanatory = smoke_fct) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in means\",\n            order = c(\"Nonsmoker\", \"Smoker\"))\nbwt_smoke_test\n\n\n  \n\n\n\n\nExercise 3\nBefore we graph these simulated values, what do you guess will be the mean value? Keep in mind that we have computed differences in the mean birth weights between two groups of women. But because we have shuffled the smoking labels randomly, we aren’t really calculating the difference in mean birth weights of nonsmokers vs smokers. We’re just computing the difference in mean birth weights of randomly assigned groups of women.\n\nPlease write up your answer here.\n\n\nHere’s the visualization:\n\nbwt_smoke_test |&gt;\n  visualize()\n\n\n\n\n\n\n\n\nNo surprise that this histogram looks nearly normal, centered at zero: the simulation is working under the assumption of the null hypothesis of no difference between the groups.\nHere is the same plot but including our sample difference:\n\nbwt_smoke_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = obs_diff, direction = \"two_sided\")\n\n\n\n\n\n\n\n\nOur observed difference (from the sampled data) is quite far out into the tail of this simulated sampling distribution, so it appears that our actual data would be somewhat unlikely due to pure chance alone if the null hypothesis were true.\nWe can even find a P-value by calculating how many of our sampled values are as extreme or more extreme than the observed data difference.\n\nbwt_smoke_test |&gt;\n  get_p_value(obs_stat = obs_diff, direction = \"two-sided\")\n\n\n  \n\n\n\nIndeed, this is a small P-value.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#the-sampling-distribution-model",
    "href": "21-inference_for_two_independent_means-web.html#the-sampling-distribution-model",
    "title": "21  Inference for two independent means",
    "section": "21.6 The sampling distribution model",
    "text": "21.6 The sampling distribution model\nIn the previous section, we simulated the sampling distribution under the assumption of a null hypothesis of no difference between the groups. It certainly looked like a normal model, but which normal model? The center is obviously zero, but what about the standard deviation?\nLet’s assume that both groups come from populations that are normally distributed with normal models \\(N(\\mu_{1}, \\sigma_{1})\\) and \\(N(\\mu_{2}, \\sigma_{2})\\). If we take samples of size \\(n_{1}\\) from group 1 and \\(n_{2}\\) from group 2, some fancy math shows that the distribution of the differences between sample means is\n\\[\nN\\left(\\mu_{1} - \\mu_{2}, \\sqrt{\\frac{\\sigma_{1}^{2}}{n_{1}} + \\frac{\\sigma_{2}^{2}}{n_{2}}}\\right).\n\\]\nUnder the assumption of the null, the difference of the means is zero (\\(\\mu_{1} - \\mu_{2} =  0\\)). Unfortunately, though, we make no assumption on the standard deviations. It should be clear that the only solution is to substitute the sample standard deviations \\(s_{1}\\) and \\(s_{2}\\) for the population standard deviations \\(\\sigma_{1}\\) and \\(\\sigma_{2}\\).1\n\\[\nSE = \\sqrt{\\frac{s_{1}^{2}}{n_{1}} + \\frac{s_{2}^{2}}{n_{2}}}.\n\\]\nHowever, \\(s_{1}\\) and \\(s_{2}\\) are not perfect estimates of \\(\\sigma_{1}\\) and \\(\\sigma_{2}\\); they are subject to sampling variability too. This extra variability means that a normal model is no longer appropriate as the sampling distribution model.\nIn the one-sample case, a Student t model with \\(df = n - 1\\) was the right choice. In the two-sample case, we don’t know the right answer. And I don’t mean that we haven’t learned it yet in our stats class. I mean, statisticians have not found a formula for the correct sampling distribution. It is a famous unsolved problem, called the Behrens-Fisher problem.\nSeveral researchers have proposed solutions that are “close” though. One compelling one is called “Welch’s t test.” Welch showed that, even though it’s not quite right, a Student t model is very close as long as you pick the degrees of freedom carefully. Unfortunately, the way to compute the right degrees of freedom is crazy complicated. (You can see the formula here if you’re really dying to know.) Fortunately, R is good at crazy complicated computations.\nLet’s go through the full rubric.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#exploratory-data-analysis",
    "href": "21-inference_for_two_independent_means-web.html#exploratory-data-analysis",
    "title": "21  Inference for two independent means",
    "section": "21.7 Exploratory data analysis",
    "text": "21.7 Exploratory data analysis\n\n21.7.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nType birthwt at the Console to read the help file. We have the same concerns about the lack of details as we did in Chapter 16.\n\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 11\n$ low       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ age       &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, …\n$ lwt       &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 9…\n$ race      &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, …\n$ smoke     &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, …\n$ ptl       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ ht        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ ui        &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, …\n$ ftv       &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, …\n$ bwt       &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, …\n$ smoke_fct &lt;fct&gt; Nonsmoker, Nonsmoker, Smoker, Smoker, Smoker, Nonsmoker, Non…\n\n\n\n\n21.7.2 Prepare the data for analysis.\nCheck for missing data:\n\nbirthwt |&gt;\n  drop_na(bwt, smoke) |&gt;\n  NROW()\n\n[1] 189\n\n\nWe need to be sure smoke is a factor variable, so we create the new mutated variable smoke_fct. (We did this above, but we’ll include in here again for completeness.)\n\nbirthwt &lt;- birthwt |&gt;\n  mutate(smoke_fct = factor(smoke,\n                            levels = c(0, 1),\n                            labels = c(\"Nonsmoker\", \"Smoker\")))\nbirthwt\n\n\n  \n\n\n\n\nglimpse(birthwt)\n\nRows: 189\nColumns: 11\n$ low       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ age       &lt;int&gt; 19, 33, 20, 21, 18, 21, 22, 17, 29, 26, 19, 19, 22, 30, 18, …\n$ lwt       &lt;int&gt; 182, 155, 105, 108, 107, 124, 118, 103, 123, 113, 95, 150, 9…\n$ race      &lt;int&gt; 2, 3, 1, 1, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 3, 1, …\n$ smoke     &lt;int&gt; 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, …\n$ ptl       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ ht        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ ui        &lt;int&gt; 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, …\n$ ftv       &lt;int&gt; 0, 3, 1, 2, 0, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 1, …\n$ bwt       &lt;int&gt; 2523, 2551, 2557, 2594, 2600, 2622, 2637, 2637, 2663, 2665, …\n$ smoke_fct &lt;fct&gt; Nonsmoker, Nonsmoker, Smoker, Smoker, Smoker, Nonsmoker, Non…\n\n\n\n\n21.7.3 Make tables or plots to explore the data visually.\nHow many women are in each group?\n\nbirthwt |&gt;\n  tabyl(smoke_fct) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\nWith a numerical response variable and a categorical predictor variable, there are two useful plots: a side-by-side boxplot and a stacked histogram.\n\nggplot(birthwt, aes(y = bwt, x = smoke_fct)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(birthwt, aes(x = bwt)) +\n  geom_histogram(binwidth = 250, boundary = 0) +\n  facet_grid(smoke_fct ~ .)\n\n\n\n\n\n\n\n\nThe histograms for both groups look sort of normal, but the nonsmoker group may be a little left skewed and the smoker group may have some low outliers. Here are the QQ plots to give us another way to ascertain normality of the data.\n\nggplot(birthwt, aes(sample = bwt)) +\n  geom_qq() +\n  geom_qq_line() +\n  facet_grid(smoke_fct ~ .)\n\n\n\n\n\n\n\n\nThere’s a little deviation from normality, but nothing too crazy.\nCommentary: The boxplots and histograms show why statistical inference is so important. It’s clear that there is some difference between the two groups, but it’s not obvious if that difference will turn out to be statistically discernible. There appears to be a lot of variability in both groups, and both groups have a fair number of lighter and heavier babies.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#hypotheses",
    "href": "21-inference_for_two_independent_means-web.html#hypotheses",
    "title": "21  Inference for two independent means",
    "section": "21.8 Hypotheses",
    "text": "21.8 Hypotheses\n\n21.8.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe samples consist of 115 nonsmoking mothers and 74 smoking mothers. The populations are those women who do not smoke during pregnancy and those women who do smoke during pregnancy.\n\n\n21.8.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) There is no difference in the birth weight of babies born to mothers who do not smoke versus mothers who do smoke.\n\\(H_{A}:\\) There is a difference in the birth weight of babies born to mothers who do not smoke versus mothers who do smoke.\n\n\n21.8.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: \\mu_{Nonsmoker} - \\mu_{Smoker} = 0\\)\n\\(H_{A}: \\mu_{Nonsmoker} - \\mu_{Smoker} \\neq 0\\)\nCommentary: As mentioned before, the order in which you subtract will not change the inference, but it will affect your interpretation of the results. Also, once you’ve chosen a direction to subtract, be consistent about that choice throughout the rubric.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#model",
    "href": "21-inference_for_two_independent_means-web.html#model",
    "title": "21  Inference for two independent means",
    "section": "21.9 Model",
    "text": "21.9 Model\n\n21.9.1 Identify the sampling distribution model.\nWe use a t model with the number of degrees of freedom to be determined.\nCommentary: For Welch’s t test, the degrees of freedom won’t usually be a whole number. Be sure you understand that the formula is no longer \\(df = n - 1\\). That doesn’t even make any sense as there isn’t a single \\(n\\) in a two-sample test. The infer package will tell us how many degrees of freedom to use later in the Mechanics section.\n\n\n21.9.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom (for both groups)\n\nWe have very little information about these women. We hope that the 115 nonsmoking mothers at this hospital are representative of other nonsmoking mothers, at least in that region at that time. And same for the 74 smoking mothers.\n\n10% (for both groups)\n\n115 is less than 10% of all nonsmoking mothers and 74 is less than 10% of all smoking mothers.\n\nNearly normal (for both groups)\n\nSince the sample sizes are more than 30 in each group, we meet the condition.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#mechanics",
    "href": "21-inference_for_two_independent_means-web.html#mechanics",
    "title": "21  Inference for two independent means",
    "section": "21.10 Mechanics",
    "text": "21.10 Mechanics\n\n21.10.1 Compute the test statistic.\n\nobs_diff &lt;- birthwt |&gt;\n  specify(response = bwt, explanatory = smoke_fct) |&gt;\n  calculate(stat = \"diff in means\",\n            order = c(\"Nonsmoker\", \"Smoker\"))\nobs_diff\n\n\n  \n\n\n\n\nobs_diff_t &lt;- birthwt |&gt;\n  specify(response = bwt, explanatory = smoke_fct) |&gt;\n  calculate(stat = \"t\", order = c(\"Nonsmoker\", \"Smoker\"))\nobs_diff_t\n\n\n  \n\n\n\n\n\n21.10.2 Report the test statistic in context (when possible).\nThe difference in the mean birth weight of babies born to nonsmoking mothers and smoking mothers is 283.7767333 grams. This was obtained by subtracting nonsmoking mothers minus smoking mothers. In other words, the fact that this is positive indicates that nonsmoking mothers had heavier babies, on average, than smoking mothers.\nThe t score is 2.7298857. The sample difference in birth weights is about 2.7 standard errors higher than the null value of zero.\nCommentary: Remember that whenever you are computing the difference between two quantities, you must indicate the direction of that difference you so your reader knows how to interpret the value, whether it is positive or negative.\n\n\n21.10.3 Plot the null distribution.\n\nbwt_smoke_test_t &lt;- birthwt |&gt;\n  specify(response = bwt, explanatory = smoke_fct) |&gt;\n  hypothesise(null = \"independence\") |&gt;\n  assume(\"t\")\nbwt_smoke_test_t\n\nA T distribution with 170 degrees of freedom.\n\n\n\nbwt_smoke_test_t |&gt;\n  visualize() +\n  shade_p_value(obs_stat = obs_diff_t, direction = \"two-sided\")\n\n\n\n\n\n\n\n\nCommentary: We use the name bwt_smoke_test_t (using the assumption of a Student t model) as a new variable name so that it doesn’t overwrite the variable bwt_smoke_test we performed earlier as a permutation test (the one with the shuffling). This results of using bwt_smoke_test versus bwt_smoke_test_t will be very similar.\nAlso be sure to use the t score obs_diff_t as the test statistic.\nNote that the infer output tells us there are 170 degrees of freedom. (It turns out to be 170.1.) Note that this number is the result of a complicated formula, and it’s not just a simple function of the sample sizes 115 and 74.\nFinally, note that the alternative hypothesis indicated a two-sided test, so we need to specify a “two-sided” P-value in the shade_p_value command.\n\n\n21.10.4 Calculate the P-value.\n\nbwt_smoke_p &lt;- bwt_smoke_test_t |&gt;\n  get_p_value(obs_stat = obs_diff_t, direction = \"two-sided\")\nbwt_smoke_p\n\n\n  \n\n\n\n\n\n21.10.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.0070025. If there were no difference in the mean birth weights between nonsmoking and smoking women, there would be a 0.7002548% chance of seeing data at least as extreme as what we saw.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#conclusion",
    "href": "21-inference_for_two_independent_means-web.html#conclusion",
    "title": "21  Inference for two independent means",
    "section": "21.11 Conclusion",
    "text": "21.11 Conclusion\n\n21.11.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n21.11.2 State (but do not overstate) a contextually meaningful conclusion.\nWe have sufficient evidence that there is a difference in the mean birth weight of babies born to mothers who do not smoke versus mothers who do smoke.\n\n\n21.11.3 Express reservations or uncertainty about the generalizability of the conclusion.\nAs when we looked at this data before, our uncertainly about the data provenance means that we don’t know if the difference observed in these samples at this one hospital at this one time are generalizable to larger populations. Also keep in mind that this data is observational, so we cannot draw any causal conclusion about the “effect” of smoking on birth weight.\n\n\n21.11.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we’ve made a Type I error, then that means that there might be no difference in the birth weights of babies from nonsmoking versus smoking mothers, but we got some unusual samples that showed a difference.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#confidence-interval",
    "href": "21-inference_for_two_independent_means-web.html#confidence-interval",
    "title": "21  Inference for two independent means",
    "section": "21.12 Confidence interval",
    "text": "21.12 Confidence interval\n\n21.12.1 Check the relevant conditions to ensure that model assumptions are met.\nThere are no additional conditions to check.\n\n\n21.12.2 Calculate the confidence interval.\n\nbwt_smoke_ci &lt;- bwt_smoke_test_t |&gt;\n  get_confidence_interval(point_estimate = obs_diff, level = 0.95)\nbwt_smoke_ci\n\n\n  \n\n\n\nCommentary: Pay close attention to when we use obs_diff and obs_diff_t. In the hypothesis test, we assumed a t distribution for the null and so we have to use the t score obs_diff_t to shade the P-value. However, for a confidence interval, we are building the interval centered on our sample difference obs_diff.\n\n\n21.12.3 State (but do not overstate) a contextually meaningful interpretation.\nWe are 95% confident that the true difference in birth weight between nonsmoking and smoking mothers is captured in the interval (78.5748631 g, 488.9786034 g). We obtained this by subtracting nonsmokers minus smokers.\nCommentary: Again, remember to indicate the direction of the difference by indicating the order of subtraction.\n\n\n21.12.4 If running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test.\nSince zero is not contained in the confidence interval, zero is not a plausible value for the true difference in birth weights between the two groups of mothers.\n\n\n21.12.5 Comment on the effect size and the practical significance of the result.\nIn order to know if smoking is a risk factor for low birth weight, we would need to know what a difference of 80 g or 490 grams means for babies. Although most of us presumably don’t have any special training in obstetrics, we could do a quick internet search to see that even half a kilogram is not a large amount of weight difference between two babies. Having said that, though, any difference in birth weight that might be attributable to smoking could be a concern to doctors. In any event, our data is observational, so we cannot make causal claims here.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#your-turn",
    "href": "21-inference_for_two_independent_means-web.html#your-turn",
    "title": "21  Inference for two independent means",
    "section": "21.13 Your turn",
    "text": "21.13 Your turn\nContinue to use the birthwt data set. This time, see if a history of hypertension is associated with a difference in the mean birth weight of babies. In the “Prepare the data for analysis” section, you will need to create a new variable converting ht to a factor variable.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.\n\n\n\n\nConfidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nComment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#conclusion-2",
    "href": "21-inference_for_two_independent_means-web.html#conclusion-2",
    "title": "21  Inference for two independent means",
    "section": "21.14 Conclusion",
    "text": "21.14 Conclusion\nA numerical variable can be split into two groups using a categorical variable. As long as the groups are independent of each other, we can use inference to determine if there is a statistically discernible difference between the mean values of the response variable for each group. Such a test can be run by simulation (using a permutation test) or by meeting the conditions for and assuming a t distribution (with a complicated formula for the degrees of freedom).\n\n21.14.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "21-inference_for_two_independent_means-web.html#footnotes",
    "href": "21-inference_for_two_independent_means-web.html#footnotes",
    "title": "21  Inference for two independent means",
    "section": "",
    "text": "When we were testing two proportions with categorical data, one option (described in an optional appendix in that chapter) was to pool the data. With numerical data, we can calculate a pooled mean, but that doesn’t help with the unknown standard deviations. Nothing in the null hypothesis suggests that the standard deviations of the two groups should be the same. In the extremely rare situation in which one can assume equal standard deviations in the two groups, then there is a way to run a pooled t test. But this “extra” assumption of equal standard deviations is typically questionable at best.↩︎",
    "crumbs": [
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>Inference for two independent means</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html",
    "href": "22-anova-web.html",
    "title": "22  ANOVA",
    "section": "",
    "text": "22.1 Introduction\nANOVA stands for “Analysis of Variance.” In this chapter, we will study the most basic form of ANOVA, called “one-way ANOVA.” We’ve already considered the one-sample and two-sample t tests for means. ANOVA is what you do when you want to compare means for three or more groups.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#introduction",
    "href": "22-anova-web.html#introduction",
    "title": "22  ANOVA",
    "section": "",
    "text": "22.1.1 Install new packages\nType the following at the Console:\ninstall.packages(\"quantreg\")\n\n\n22.1.2 Download the Quarto file\nLook at either the top (Posit Cloud) or the upper right corner of the RStudio screen to make sure you are in your intro_stats project.\nThen click on the following link to download this chapter as a Quarto file (.qmd).\nhttps://vectorposse.github.io/intro_stats/chapter_downloads/22-anova.qmd\nOnce the file is downloaded, move it to your project folder in RStudio and open it there.\n\n\n22.1.3 Restart R and run all chunks\nIn RStudio, select “Restart R and Run All Chunks” from the “Run” menu.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#load-packages",
    "href": "22-anova-web.html#load-packages",
    "title": "22  ANOVA",
    "section": "22.2 Load packages",
    "text": "22.2 Load packages\nWe load the standard tidyverse, janitor, and infer packages. The quantreg package contains the uis data (which must be explicitly loaded using the data command) and the palmerpenguins package for the penguins data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(infer)\nlibrary(quantreg)\n\nLoading required package: SparseM\n\ndata(uis)\nlibrary(palmerpenguins)",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#research-question",
    "href": "22-anova-web.html#research-question",
    "title": "22  ANOVA",
    "section": "22.3 Research question",
    "text": "22.3 Research question\nThe uis data set from the quantreg package contains data from the UIS Drug Treatment Study. Is a history of IV drug use associated with depression?\n\nExercise 1\nThe help file for the uis data is particularly uninformative. The source, like so many we see in R packages, is a statistics textbook. If you happen to have access to a copy of the textbook, it’s pretty easy to look it up and see what the authors say about it. But it’s not likely you have such access.\nSee if you can find out more about where the data came from. This is tricky and you’re going have to dig deep.\nHint #1: Your first hits will be from the University of Illinois-Springfield. That is not the correct source.\nHint #2: You may have more success finding sources that quote from the textbook and mention more detail about the data as it’s explained in the textbook. In fact, you might even stumble across actual pages from the textbook with the direct explanation, but that is much harder. You should not try to find and download PDF files of the book itself. Not only is that illegal, but it might also come along with nasty computer viruses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#data-preparation-and-exploration",
    "href": "22-anova-web.html#data-preparation-and-exploration",
    "title": "22  ANOVA",
    "section": "22.4 Data preparation and exploration",
    "text": "22.4 Data preparation and exploration\nLet’s look at the UIS data:\n\nuis\n\n\n  \n\n\n\n\nglimpse(uis)\n\nRows: 575\nColumns: 18\n$ ID     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, …\n$ AGE    &lt;dbl&gt; 39, 33, 33, 32, 24, 30, 39, 27, 40, 36, 38, 29, 32, 41, 31, 27,…\n$ BECK   &lt;dbl&gt; 9.000, 34.000, 10.000, 20.000, 5.000, 32.550, 19.000, 10.000, 2…\n$ HC     &lt;dbl&gt; 4, 4, 2, 4, 2, 3, 4, 4, 2, 2, 2, 3, 3, 1, 1, 2, 1, 4, 3, 2, 3, …\n$ IV     &lt;dbl&gt; 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 1, 3, 1, …\n$ NDT    &lt;dbl&gt; 1, 8, 3, 1, 5, 1, 34, 2, 3, 7, 8, 1, 2, 8, 1, 3, 6, 1, 15, 5, 1…\n$ RACE   &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ TREAT  &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ SITE   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ LEN.T  &lt;dbl&gt; 123, 25, 7, 66, 173, 16, 179, 21, 176, 124, 176, 79, 182, 174, …\n$ TIME   &lt;dbl&gt; 188, 26, 207, 144, 551, 32, 459, 22, 210, 184, 212, 87, 598, 26…\n$ CENSOR &lt;dbl&gt; 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ Y      &lt;dbl&gt; 5.236442, 3.258097, 5.332719, 4.969813, 6.311735, 3.465736, 6.1…\n$ ND1    &lt;dbl&gt; 5.0000000, 1.1111111, 2.5000000, 5.0000000, 1.6666667, 5.000000…\n$ ND2    &lt;dbl&gt; -8.0471896, -0.1170672, -2.2907268, -8.0471896, -0.8513760, -8.…\n$ LNDT   &lt;dbl&gt; 0.6931472, 2.1972246, 1.3862944, 0.6931472, 1.7917595, 0.693147…\n$ FRAC   &lt;dbl&gt; 0.68333333, 0.13888889, 0.03888889, 0.73333333, 0.96111111, 0.0…\n$ IV3    &lt;dbl&gt; 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, …\n\n\nTo talk about the ANOVA procedure, we’ll use the BECK and IV variables. We need to convert IV to a factor variable first (using the help file for guidance).\n\nuis &lt;- uis |&gt;\n  mutate(IV_fct = factor(IV,\n                         levels = c(1, 2, 3),\n                         labels = c(\"Never\", \"Previous\", \"Recent\")))\nuis\n\n\n  \n\n\n\n\nglimpse(uis)\n\nRows: 575\nColumns: 19\n$ ID     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, …\n$ AGE    &lt;dbl&gt; 39, 33, 33, 32, 24, 30, 39, 27, 40, 36, 38, 29, 32, 41, 31, 27,…\n$ BECK   &lt;dbl&gt; 9.000, 34.000, 10.000, 20.000, 5.000, 32.550, 19.000, 10.000, 2…\n$ HC     &lt;dbl&gt; 4, 4, 2, 4, 2, 3, 4, 4, 2, 2, 2, 3, 3, 1, 1, 2, 1, 4, 3, 2, 3, …\n$ IV     &lt;dbl&gt; 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 1, 3, 1, …\n$ NDT    &lt;dbl&gt; 1, 8, 3, 1, 5, 1, 34, 2, 3, 7, 8, 1, 2, 8, 1, 3, 6, 1, 15, 5, 1…\n$ RACE   &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ TREAT  &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ SITE   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ LEN.T  &lt;dbl&gt; 123, 25, 7, 66, 173, 16, 179, 21, 176, 124, 176, 79, 182, 174, …\n$ TIME   &lt;dbl&gt; 188, 26, 207, 144, 551, 32, 459, 22, 210, 184, 212, 87, 598, 26…\n$ CENSOR &lt;dbl&gt; 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ Y      &lt;dbl&gt; 5.236442, 3.258097, 5.332719, 4.969813, 6.311735, 3.465736, 6.1…\n$ ND1    &lt;dbl&gt; 5.0000000, 1.1111111, 2.5000000, 5.0000000, 1.6666667, 5.000000…\n$ ND2    &lt;dbl&gt; -8.0471896, -0.1170672, -2.2907268, -8.0471896, -0.8513760, -8.…\n$ LNDT   &lt;dbl&gt; 0.6931472, 2.1972246, 1.3862944, 0.6931472, 1.7917595, 0.693147…\n$ FRAC   &lt;dbl&gt; 0.68333333, 0.13888889, 0.03888889, 0.73333333, 0.96111111, 0.0…\n$ IV3    &lt;dbl&gt; 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, …\n$ IV_fct &lt;fct&gt; Recent, Previous, Recent, Recent, Never, Recent, Recent, Recent…\n\n\nLet’s look at the three groups in our data defined by the IV variable. These are people who have never used IV drugs, those who have previously used IV drugs, and those who have recently used IV drugs. The following table shows how many people are in each group.\n\nuis |&gt;\n  tabyl(IV_fct) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\nWe’re interested in depression as measured by the Beck Depression Inventory.\n\nExercise 2\nSearch the internet for the Beck Depression Inventory. (This search is much easier than for Exercise 1.) Write a short paragraph about it and how it purports to measure depression.\n\nPlease write up your answer here.\n\n\nA useful graph is a side-by-side boxplot.\n\nggplot(uis, aes(y = BECK, x = IV_fct)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nThis boxplot shows that the distribution of depression scores is similar across the groups. There are some small differences, but it’s not clear if these differences are statistically significant.\nWe can get the overall mean of all Beck scores, sometimes called the “grand mean”.\n\nuis |&gt;\n  summarize(mean(BECK))\n\n\n  \n\n\n\nIf we use group_by, we can separate this out by IV group:\n\nuis |&gt;\n  group_by(IV_fct) |&gt;\n  summarize(mean(BECK))\n\n\n  \n\n\n\n\n\nExericse 3\nWe have to be careful about the term “grand mean.” In some contexts, the term “grand mean” refers to the mean of all scores in the response variable (17.36743 above). In other cases, the term refers to the mean of the three group means (the mean of 15.94996, 16.64201, and 18.99363).\nFirst calculate the mean of the three group means above. (You can use R to do this if you want, or you can just use a calculator.) Explain mathematically why the overall mean 17.36743 is not the same as the mean of the three group means. What would have to be true of the sample for the overall mean to agree with the mean of the three group means? (Hint: think about the size of each of the three groups.)\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#the-f-distribution",
    "href": "22-anova-web.html#the-f-distribution",
    "title": "22  ANOVA",
    "section": "22.5 The F distribution",
    "text": "22.5 The F distribution\nTo keep the exposition simple here, we’ll assume that the term “grand mean” refers to the overall mean of the response variable, 17.36743.\nWhen assessing the differences among groups, there are two numbers that are important.\nThe first is called the “mean square between groups” (MSG). It measures how far away each group mean is away from the overall grand mean for the whole sample. For example, for those who never used IV drugs, their mean Beck score was 15.95. This is 1.42 points below the grand mean of 17.37. On the other hand, recent IV drug users had a mean Beck score of nearly 19. This is 1.63 points above the grand mean. MSG is calculated by taking these differences for each group, squaring them to make them positive, weighting them by the sizes of each group (larger groups should obviously count for more), and dividing by the “group degrees of freedom” \\(df_{G} = k - 1\\) where \\(k\\) is the number of groups. The idea is that MSG is a kind of “average variability” among the groups. In other words, how far away are the groups from the grand mean (and therefore, from each other)?\nThe second number of interest is the “mean square error” (MSE). It is a measure of variability within groups. In other words, it measures how far away data points are from their own group means. Even under the assumption of a null hypothesis that says all the groups should be the same, we still expect some variability. Its calculation also involves dividing by some degrees of freedom, but now it is \\(df_{E} = n - k\\).\nAll that is somewhat technical and complicated. We’ll leave it to the computer. The key insight comes from considering the ratio of \\(MSG\\) and \\(MSE\\). We will call this quantity F:\n\\[\nF = \\frac{MSG}{MSE}\n\\]\nWhat can be said about this magical F? Under the assumption of the null hypothesis, we expect some variability among the groups, and we expect some variability within each group as well, but these two sources of variability should be about the same. In other words, \\(MSG\\) should be roughly equal to \\(MSE\\). Therefore, F ought to be close to 1.\nWe can simulate this using the infer package. Suppose that there were no difference in the mean BECK scores among the three groups. We can accomplish this by shuffling the IV labels, an idea we’ve seen several times before in this book. Permuting the IV values breaks any association that might have existed in the original data.\n\nset.seed(420)\nBECK_IV_test_sim &lt;- uis |&gt;\n  specify(response = BECK, explanatory = IV_fct) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"F\")\nBECK_IV_test_sim\n\n\n  \n\n\n\n\nBECK_IV_test_sim |&gt;\n  visualize()\n\n\n\n\n\n\n\n\nAs explained earlier, the F scores are clustered around 1. They can never be smaller than zero. (The bar at zero is centered on zero, but no F score can be less than zero.) There are occasional F scores much larger than 1, but just by chance.\nIt’s not particularly interesting if F is less than one. That just means that the variability between groups is small and the variability of the data within each group is large. That doesn’t allow us to conclude that there is a difference among groups. However, if F is really large, that means that there is much more variability between the groups than there is within each group. Therefore, the groups are far apart and there is evidence of a difference among groups.\n\\(MSG\\) and \\(MSE\\) are measures of variability, and that’s why this is called “Analysis of Variance”.\nThe F distribution is the correct sampling distribution model. Like a t model, there are infinitely many different F models because degrees of freedom are involved. But unlike a t model, the F model has two numbers called degrees of freedom, \\(df_{G}\\) and \\(df_{E}\\). Both of these numbers affect the precise shape of the F distribution.\nFor example, here is picture of a few different F models.\n\n# Don't worry about the syntax here.\n# You won't need to know how to do this on your own.\nggplot(data.frame(x = c(0, 5)), aes(x)) +\n  stat_function(fun = df, args = list(df1 = 2, df2 = 5),\n                aes(color = \"2, 5\")) +\n  stat_function(fun = df, args = list(df1 = 2, df2 = 50),\n                aes(color = \"2, 50\" )) +\n  stat_function(fun = df, args = list(df1 = 10, df2 = 50),\n                aes(color = \"10, 50\")) +\n  scale_color_manual(name = expression(paste(df[G], \", \", df[E])),\n                     values = c(\"2, 5\" = \"red\",\n                                \"2, 50\" = \"blue\",\n                                \"10, 50\" = \"green\"),\n                     breaks =  c(\"2, 5\", \"2, 50\", \"10, 50\"))\n\n\n\n\n\n\n\n\nHere is the theoretical F distribution for our data:\n\nBECK_IV_test &lt;- uis |&gt;\n  specify(response = BECK, explanatory = IV_fct) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  assume(distribution = \"F\")\nBECK_IV_test\n\nAn F distribution with 2 and 572 degrees of freedom.\n\n\n\nBECK_IV_test |&gt;\n  visualize()\n\n\n\n\n\n\n\n\n\nExercise 4\nExplain why there are 2 and 572 degrees of freedom. Which one is \\(df_{G}\\) and which one is \\(df_{E}\\)?\n\nPlease write up your answer here.\n\n\nHere are the simulated values again, but with the theoretical F distribution superimposed for comparison.\n\nBECK_IV_test_sim |&gt;\n  visualize(method = \"both\")\n\nWarning: Check to make sure the conditions have been met for the theoretical method.\ninfer currently does not check these for you.\n\n\n\n\n\n\n\n\n\nOther than the very left edge, the theoretical curve is a good fit to the simulated F scores.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#assumptions",
    "href": "22-anova-web.html#assumptions",
    "title": "22  ANOVA",
    "section": "22.6 Assumptions",
    "text": "22.6 Assumptions\nWhat conditions can we check to justify the use of an F model for our sampling distribution? In addition to the typical “Random” and “10%” conditions that ensure independence, we also need to check the “Nearly normal” condition for each group, just like for the t tests. A new assumption is the “Constant variance” assumption, which says that each group should have the same variance in the population. This is impossible to check, although we can use our sample as a rough guide. If each group has about the same spread, that is some evidence that such an assumption might hold in the population as well. Also, ANOVA is pretty robust to this assumption, especially when the groups are close to the same size. Even when the group sizes are unequal (sometimes called “unbalanced”), some say the variances can be off by up to a factor of 3 and ANOVA will still work pretty well. So what we’re looking for here are gross violations, not minor ones.\nLet’s go through the rubric with commentary.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#exploratory-data-analysis",
    "href": "22-anova-web.html#exploratory-data-analysis",
    "title": "22  ANOVA",
    "section": "22.7 Exploratory data analysis",
    "text": "22.7 Exploratory data analysis\n\n22.7.1 Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\nYou should have researched this extensively in a previous exercise.\n\nuis\n\n\n  \n\n\n\n\nglimpse(uis)\n\nRows: 575\nColumns: 19\n$ ID     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, …\n$ AGE    &lt;dbl&gt; 39, 33, 33, 32, 24, 30, 39, 27, 40, 36, 38, 29, 32, 41, 31, 27,…\n$ BECK   &lt;dbl&gt; 9.000, 34.000, 10.000, 20.000, 5.000, 32.550, 19.000, 10.000, 2…\n$ HC     &lt;dbl&gt; 4, 4, 2, 4, 2, 3, 4, 4, 2, 2, 2, 3, 3, 1, 1, 2, 1, 4, 3, 2, 3, …\n$ IV     &lt;dbl&gt; 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 1, 3, 1, …\n$ NDT    &lt;dbl&gt; 1, 8, 3, 1, 5, 1, 34, 2, 3, 7, 8, 1, 2, 8, 1, 3, 6, 1, 15, 5, 1…\n$ RACE   &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ TREAT  &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ SITE   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ LEN.T  &lt;dbl&gt; 123, 25, 7, 66, 173, 16, 179, 21, 176, 124, 176, 79, 182, 174, …\n$ TIME   &lt;dbl&gt; 188, 26, 207, 144, 551, 32, 459, 22, 210, 184, 212, 87, 598, 26…\n$ CENSOR &lt;dbl&gt; 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ Y      &lt;dbl&gt; 5.236442, 3.258097, 5.332719, 4.969813, 6.311735, 3.465736, 6.1…\n$ ND1    &lt;dbl&gt; 5.0000000, 1.1111111, 2.5000000, 5.0000000, 1.6666667, 5.000000…\n$ ND2    &lt;dbl&gt; -8.0471896, -0.1170672, -2.2907268, -8.0471896, -0.8513760, -8.…\n$ LNDT   &lt;dbl&gt; 0.6931472, 2.1972246, 1.3862944, 0.6931472, 1.7917595, 0.693147…\n$ FRAC   &lt;dbl&gt; 0.68333333, 0.13888889, 0.03888889, 0.73333333, 0.96111111, 0.0…\n$ IV3    &lt;dbl&gt; 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, …\n$ IV_fct &lt;fct&gt; Recent, Previous, Recent, Recent, Never, Recent, Recent, Recent…\n\n\n\n\n22.7.2 Prepare the data for analysis. [Not always necessary.]\nCheck for missing data:\n\nuis |&gt;\n  drop_na(BECK, IV) |&gt;\n  NROW()\n\n[1] 575\n\n\nWe need IV to be a factor variable.\n\n# Although we've already done this above, \n# we include it here again for completeness.\nuis &lt;- uis |&gt;\n  mutate(IV_fct = factor(IV,\n                         levels = c(1, 2, 3),\n                         labels = c(\"Never\", \"Previous\", \"Recent\")))\nuis\n\n\n  \n\n\n\n\nglimpse(uis)\n\nRows: 575\nColumns: 19\n$ ID     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, …\n$ AGE    &lt;dbl&gt; 39, 33, 33, 32, 24, 30, 39, 27, 40, 36, 38, 29, 32, 41, 31, 27,…\n$ BECK   &lt;dbl&gt; 9.000, 34.000, 10.000, 20.000, 5.000, 32.550, 19.000, 10.000, 2…\n$ HC     &lt;dbl&gt; 4, 4, 2, 4, 2, 3, 4, 4, 2, 2, 2, 3, 3, 1, 1, 2, 1, 4, 3, 2, 3, …\n$ IV     &lt;dbl&gt; 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 1, 3, 1, …\n$ NDT    &lt;dbl&gt; 1, 8, 3, 1, 5, 1, 34, 2, 3, 7, 8, 1, 2, 8, 1, 3, 6, 1, 15, 5, 1…\n$ RACE   &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ TREAT  &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ SITE   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ LEN.T  &lt;dbl&gt; 123, 25, 7, 66, 173, 16, 179, 21, 176, 124, 176, 79, 182, 174, …\n$ TIME   &lt;dbl&gt; 188, 26, 207, 144, 551, 32, 459, 22, 210, 184, 212, 87, 598, 26…\n$ CENSOR &lt;dbl&gt; 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, …\n$ Y      &lt;dbl&gt; 5.236442, 3.258097, 5.332719, 4.969813, 6.311735, 3.465736, 6.1…\n$ ND1    &lt;dbl&gt; 5.0000000, 1.1111111, 2.5000000, 5.0000000, 1.6666667, 5.000000…\n$ ND2    &lt;dbl&gt; -8.0471896, -0.1170672, -2.2907268, -8.0471896, -0.8513760, -8.…\n$ LNDT   &lt;dbl&gt; 0.6931472, 2.1972246, 1.3862944, 0.6931472, 1.7917595, 0.693147…\n$ FRAC   &lt;dbl&gt; 0.68333333, 0.13888889, 0.03888889, 0.73333333, 0.96111111, 0.0…\n$ IV3    &lt;dbl&gt; 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, …\n$ IV_fct &lt;fct&gt; Recent, Previous, Recent, Recent, Never, Recent, Recent, Recent…\n\n\n\n\n22.7.3 Make tables or plots to explore the data visually.\nWe should calculate group statistics:\n\nuis |&gt;\n  tabyl(IV_fct) |&gt;\n  adorn_totals()\n\n\n  \n\n\n\n\nuis |&gt;\n  summarise(mean(BECK))\n\n\n  \n\n\n\n\nuis |&gt;\n  group_by(IV_fct) |&gt;\n  summarise(mean(BECK))\n\n\n  \n\n\n\nHere are two graphs that are appropriate for one categorical and one numerical variable: a side-by-side boxplot and a stacked histogram.\n\nggplot(uis, aes(y = BECK, x = IV_fct)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(uis, aes(x = BECK)) +\n  geom_histogram(binwidth = 5, boundary = 0) +\n  facet_grid(IV_fct ~ .)\n\n\n\n\n\n\n\n\nBoth graphs show that the distribution of depression scores in each group is similar.\nThe distributions look reasonably normal, or perhaps a bit right skewed, but we can also check the QQ plots:\n\nggplot(uis, aes(sample = BECK)) +\n  geom_qq()  +\n  geom_qq_line() +\n  facet_grid(IV_fct ~ .)\n\n\n\n\n\n\n\n\nThere is one mild outlier in the “Previous” group, but with sample sizes as large as we have in each group, it’s unlikely that this outlier will be influential. So we’ll just leave it in the data and not worry about it.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#hypotheses",
    "href": "22-anova-web.html#hypotheses",
    "title": "22  ANOVA",
    "section": "22.8 Hypotheses",
    "text": "22.8 Hypotheses\n\n22.8.1 Identify the sample (or samples) and a reasonable population (or populations) of interest.\nThe sample consists of people who participated in the UIS drug treatment study. Because the UIS studied the effects of residential treatment for drug abuse, the population is, presumably, all drug addicts.\n\n\n22.8.2 Express the null and alternative hypotheses as contextually meaningful full sentences.\n\\(H_{0}:\\) There is no difference in depression levels among those who have no history of IV drug use, those who have some previous IV drug use, and those who have recent IV drug use.\n\\(H_{A}:\\) There is a difference in depression levels among those who have no history of IV drug use, those who have some previous IV drug use, and those who have recent IV drug use.\n\n\n22.8.3 Express the null and alternative hypotheses in symbols (when possible).\n\\(H_{0}: \\mu_{never} = \\mu_{previous} = \\mu_{recent}\\)\nThere is no easy way to express the alternate hypothesis in symbols because any deviation in any of the categories can lead to rejection of the null. You can’t just say \\(\\mu_{never} \\neq \\mu_{previous} \\neq \\mu_{recent}\\) because two of these categories might be the same and the third different and that would still be consistent with the alternative hypothesis.\nSo the only requirement here is to express the null in symbols.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#model",
    "href": "22-anova-web.html#model",
    "title": "22  ANOVA",
    "section": "22.9 Model",
    "text": "22.9 Model\n\n22.9.1 Identify the sampling distribution model.\nWe will use an F model with \\(df_{G} = 2\\) and \\(df_{E} = 572\\).\nCommentary: Remember that\n\\[\ndf_{G} = k - 1 = 3 - 1 = 2,\n\\]\n(\\(k\\) is the number of groups, in this case, 3), and\n\\[\ndf_{E} = n - k = 575 - 3 = 572.\n\\]\n\n\n22.9.2 Check the relevant conditions to ensure that model assumptions are met.\n\nRandom\n\nWe have little information about how this sample was collected, so we have to hope it’s representative.\n\n10%\n\n575 is definitely less than 10% of all drug addicts.\n\nNearly normal\n\nThe earlier stacked histograms and QQ plots showed that each group is nearly normal. (There was one outlier in one group, but our sample sizes are quite large.)\n\nConstant variance\n\nThe spread of data looks pretty consistent from group to group in the stacked histogram and side-by-side boxplot.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#mechanics",
    "href": "22-anova-web.html#mechanics",
    "title": "22  ANOVA",
    "section": "22.10 Mechanics",
    "text": "22.10 Mechanics\n\n22.10.1 Compute the test statistic.\n\nBECK_IV_F &lt;- uis |&gt; \n  specify(response = BECK, explanatory = IV_fct) |&gt;\n  calculate(stat = \"F\")\nBECK_IV_F\n\n\n  \n\n\n\n\n\n22.10.2 Report the test statistic in context (when possible).\nThe F score is 6.721405.\nCommentary: F scores (much like chi-square values earlier in the course) are not particularly interpretable on their own, so there isn’t really any context we can provide. It’s only required that you report the F score in a full sentence.\n\n\n22.10.3 Plot the null distribution.\n\nBECK_IV_test &lt;- uis |&gt;\n  specify(response = BECK, explanatory = IV_fct) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  assume(distribution = \"F\")\nBECK_IV_test\n\nAn F distribution with 2 and 572 degrees of freedom.\n\n\n\nBECK_IV_test |&gt;\n  visualize() +\n  shade_p_value(obs_stat = BECK_IV_F, direction = \"greater\")\n\n\n\n\n\n\n\n\n\n\n22.10.4 Calculate the P-value.\n\nBECK_IV_P &lt;- BECK_IV_test |&gt;\n  get_p_value(obs_stat = BECK_IV_F, direction = \"greater\")\nBECK_IV_P\n\n\n  \n\n\n\nCommentary: Note that this is, by definition, a one-sided test. Extreme values of F are the ones that are far away from 1, and only those values in the right tail are far from 1.\n\n\n22.10.5 Interpret the P-value as a probability given the null.\nThe P-value is 0.0013023. If there were no differences in depression scores among the three IV groups, there would be a 0.1302279% chance of seeing data at least as extreme as the data we saw.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#conclusion",
    "href": "22-anova-web.html#conclusion",
    "title": "22  ANOVA",
    "section": "22.11 Conclusion",
    "text": "22.11 Conclusion\n\n22.11.1 State the statistical conclusion.\nWe reject the null hypothesis.\n\n\n22.11.2 State (but do not overstate) a contextually meaningful conclusion.\nThere is sufficient evidence that there is a difference in depression levels among those who have no history of IV drug use, those who have some previous IV drug use, and those who have recent IV drug use.\n\n\n22.11.3 Express reservations or uncertainty about the generalizability of the conclusion.\nOur lack of uncertainty about the sample means we don’t know for sure if we can generalize to a larger population of drug users. We hope that the researchers would obtain a representative sample. Also, the study in question is from the 1990s, so we should not suppose that the conclusions are still true today.\n\n\n22.11.4 Identify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\nIf we’ve made a Type I error, that means that there really isn’t a difference among the three groups, but our sample is an unusual one that did detect a difference.\n\nExercise 5(a)\nEverything we saw earlier in the exploratory data analysis pointed toward failing to reject the null. All three groups look very similar in all the plots, and the means are not all that far from each other. So why did we get such a tiny P-value and reject the null? In other words, what is it about our data that allows for small effects to be statistically discernible?\n\nPlease write up your answer here.\n\n\n\nExercise 5(b)\nIf you were a psychologist working with drug addicts, would the statistical conclusion (rejecting the null and concluding that there was a difference among groups) be of clinical importance to you? In other words, if there is a difference, is it of practical significance and not just statistical discernibility?\n\nPlease write up your answer here.\n\n\nThere is no confidence interval for ANOVA. We are not hypothesizing about the value of any particular parameter, so there’s nothing to estimate with a confidence interval.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#your-turn",
    "href": "22-anova-web.html#your-turn",
    "title": "22  ANOVA",
    "section": "22.12 Your turn",
    "text": "22.12 Your turn\nUsing the penguins data, determine if there is a difference in the average body masses among the three species represented in the data (Adelie, Chinstrap, and Gentoo).\nThere are two missing values of body mass, and as we saw earlier in the book, that does affect certain functions. To make it a little easier on you, here is some code to remove those missing values:\n\npenguins2 &lt;- penguins |&gt;\n  drop_na(species, body_mass_g)\n\nFor this whole section, be sure to use penguins2.\nThe rubric outline is reproduced below. You may refer to the worked example above and modify it accordingly. Remember to strip out all the commentary. That is just exposition for your benefit in understanding the steps, but is not meant to form part of the formal inference process.\nAnother word of warning: the copy/paste process is not a substitute for your brain. You will often need to modify more than just the names of the data frames and variables to adapt the worked examples to your own work. Do not blindly copy and paste code without understanding what it does. And you should never copy and paste text. All the sentences and paragraphs you write are expressions of your own analysis. They must reflect your own understanding of the inferential process.\nAlso, so that your answers here don’t mess up the code chunks above, use new variable names everywhere.\n\nExploratory data analysis\n\nUse data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.\n\n\n\n\n\nHypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)\n\n\n\n\nModel\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\n\nMechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.\n\n\n\n\nConclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#post-hoc-analysis",
    "href": "22-anova-web.html#post-hoc-analysis",
    "title": "22  ANOVA",
    "section": "22.13 Post-hoc analysis",
    "text": "22.13 Post-hoc analysis\nSuppose our ANOVA test leads us to reject the null hypothesis. Then we have statistically discernible evidence that there is some difference between the means of the various groups. However, ANOVA doesn’t tell us which groups are actually different—very unsatisfying!\nWe could consider just doing a bunch of individual t-tests between each pair of groups. However, the problem with this approach is that it greatly increases the chances that we might commit a Type I error. (For an exploration of this problem, please see the following XKCD comic.)\nFortunately, there is a tool called post-hoc analysis that allows us to determine which groups differ from the others in a way that doesn’t inflate the Type I error rate.\nThere are several methods for conducting post-hoc analysis. You may have heard of the Bonferroni correction, in which the usual significance level is divided by the number of pairwise comparisons contemplated. Another method, and the one we’ll explore here, is called the Tukey Honestly-Significant-Difference test. The precise details of this test are a little outside the scope of this course, but here’s how it’s done in R.\nWe’ll start by using a different function, called aov, to conduct the ANOVA test. This function produces a slightly different format of outputs than we’re used to, but it produces all the same values as our other tools:\n\nBECK_IV_aov &lt;- aov(BECK ~ IV_fct, uis)\nsummary(BECK_IV_aov)\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)   \nIV_fct        2   1148   574.0   6.721 0.0013 **\nResiduals   572  48850    85.4                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNotice in particular that the F score and the P-value are the same as we obtained using infer tools above. (Bonus result, this table also shows us the values of MSG and MSE. Can you see which one is which?)\nNow that we have the result of the aov command stored in a new variable, we can feed it into the new command TukeyHSD:\n\nTukeyHSD(BECK_IV_aov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = BECK ~ IV_fct, data = uis)\n\n$IV_fct\n                    diff        lwr      upr     p adj\nPrevious-Never  0.692054 -1.8458349 3.229943 0.7976511\nRecent-Never    3.043674  1.0299195 5.057429 0.0012039\nRecent-Previous 2.351620 -0.1517446 4.854986 0.0707718\n\n\nHere’s how to read these results: Start by looking at the p adj column, which tells us adjusted p-values. Look for a p-value that is below the usual significance level \\(\\alpha = 0.05\\). In our example, the second p-value is the only one that is small enough to reach statistical discernibility.\nOnce you’ve located the discernible p-values, read the row to determine which comparisons are discernible. Here, the second row is the meaningful one: this is the comparison between the “Recent” group and the “Never” group.\nThe column labeled diff reports the difference between the means of the two groups; the order of subtraction is reported in the first column. Here, the difference in Beck depression scores is 3.043674, which is computed by subtracting the mean of the “Never” group from the mean of the “Recent” group.\nAs usual, we report our results in a contextually-meaningful sentence. Here’s our example:\n\nTukey’s HSD test reports that recent IV drug users have a Beck inventory score that is, on average, 3.043674 points higher than those who have never used IV drugs.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#your-turn-1",
    "href": "22-anova-web.html#your-turn-1",
    "title": "22  ANOVA",
    "section": "22.14 Your turn",
    "text": "22.14 Your turn\nConduct a post-hoc analysis to determine which penguin species is heavier or lighter than the others.\n\n# Add code here to produce the aov model.\n\n\n# Add code here to run Tukey's HSD test on the aov model.\n\nReport your results in a contextually-meaningful sentence:\n\nPlease write your answer here.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "22-anova-web.html#conclusion-2",
    "href": "22-anova-web.html#conclusion-2",
    "title": "22  ANOVA",
    "section": "22.15 Conclusion",
    "text": "22.15 Conclusion\nWhen analyzing a numerical response variable across three or more levels of a categorical predictor variable, ANOVA provides a way of comparing the variability of the response between the groups to the variability within the groups. When there is more variability between the groups than within the groups, this is evidence that the groups are truly different from one another (rather than simply arising from random sampling variability). The result of comparing the two sources of variability gives rise to the F distribution, which can be used to determine when the difference is more than one would expect from chance alone.\n\n22.15.1 Preparing and submitting your assignment\n\nFrom the “Run” menu, select “Restart R and Run All Chunks”.\nDeal with any code errors that crop up. Repeat steps 1–2 until there are no more code errors.\nSpell check your document by clicking the icon with “ABC” and a check mark.\nHit the “Render” button one last time to generate the final draft of the HTML file. (If there are errors here, you may need to go back and fix broken inline code or other markdown issues.)\nProofread the HTML file carefully. If there are errors, go back and fix them, then repeat steps 1–5 again.\n\nIf you have completed this chapter as part of a statistics course, follow the directions you receive from your professor to submit your assignment.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>ANOVA</span>"
    ]
  },
  {
    "objectID": "Rubric.html",
    "href": "Rubric.html",
    "title": "Appendix A — Rubric for inference",
    "section": "",
    "text": "Exploratory data analysis\nThis is the outline for running inference, both a hypothesis test and a confidence interval.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#exploratory-data-analysis",
    "href": "Rubric.html#exploratory-data-analysis",
    "title": "Appendix A — Rubric for inference",
    "section": "",
    "text": "Use data documentation (help files, code books, Google, etc.) to determine as much as possible about the data provenance and structure.\n\nPlease write up your answer here.\n\n# Add code here to print the data\n\n\n# Add code here to glimpse the variables\n\n\n\n\nPrepare the data for analysis.\n\n\n# Add code here to prepare the data for analysis.\n\n\n\n\nMake tables or plots to explore the data visually.\n\n\n# Add code here to make tables or plots.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#hypotheses",
    "href": "Rubric.html#hypotheses",
    "title": "Appendix A — Rubric for inference",
    "section": "Hypotheses",
    "text": "Hypotheses\n\nIdentify the sample (or samples) and a reasonable population (or populations) of interest.\n\nPlease write up your answer here.\n\n\n\nExpress the null and alternative hypotheses as contextually meaningful full sentences.\n\n\\(H_{0}:\\) Null hypothesis goes here.\n\\(H_{A}:\\) Alternative hypothesis goes here.\n\n\n\nExpress the null and alternative hypotheses in symbols (when possible).\n\n\\(H_{0}: math\\)\n\\(H_{A}: math\\)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#model",
    "href": "Rubric.html#model",
    "title": "Appendix A — Rubric for inference",
    "section": "Model",
    "text": "Model\n\nIdentify the sampling distribution model.\n\nPlease write up your answer here.\n\n\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#mechanics",
    "href": "Rubric.html#mechanics",
    "title": "Appendix A — Rubric for inference",
    "section": "Mechanics",
    "text": "Mechanics\n\nCompute the test statistic.\n\n\n# Add code here to compute the test statistic.\n\n\n\n\nReport the test statistic in context (when possible).\n\nPlease write up your answer here.\n\n\n\nPlot the null distribution.\n\n\n# If you are conducducting a simulation that uses randomization,\n# uncomment (remove the hashtag) from the set.seed line below.\n# set.seed(1) \n\n# Add code here to generate the null distribution.\n\n\n# Add code here to plot the null distribution.\n\n\n\n\nCalculate the P-value.\n\n\n# Add code here to calculate the P-value.\n\n\n\n\nInterpret the P-value as a probability given the null.\n\nPlease write up your answer here.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#conclusion",
    "href": "Rubric.html#conclusion",
    "title": "Appendix A — Rubric for inference",
    "section": "Conclusion",
    "text": "Conclusion\n\nState the statistical conclusion.\n\nPlease write up your answer here.\n\n\n\nState (but do not overstate) a contextually meaningful conclusion.\n\nPlease write up your answer here.\n\n\n\nExpress reservations or uncertainty about the generalizability of the conclusion.\n\nPlease write up your answer here.\n\n\n\nIdentify the possibility of either a Type I or Type II error and state what making such an error means in the context of the hypotheses.\n\nPlease write up your answer here.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Rubric.html#confidence-interval",
    "href": "Rubric.html#confidence-interval",
    "title": "Appendix A — Rubric for inference",
    "section": "Confidence interval",
    "text": "Confidence interval\n\nCheck the relevant conditions to ensure that model assumptions are met.\n\nPlease write up your answer here. (Some conditions may require R code as well.)\n\n\n\nCalculate and graph the confidence interval.\n\n\n# Add code here to calculate the confidence interval.\n\n\n# Add code here to graph the confidence interval.\n\n\n\n\nState (but do not overstate) a contextually meaningful interpretation.\n\nPlease write up your answer here.\n\n\n\nIf running a two-sided test, explain how the confidence interval reinforces the conclusion of the hypothesis test. [Not always applicable.]\n\nPlease write up your answer here.\n\n\n\nComment on the effect size and the practical significance of the result.\n\nPlease write up your answer here.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rubric for inference</span>"
    ]
  },
  {
    "objectID": "Concordance.html",
    "href": "Concordance.html",
    "title": "Appendix B — Concordance with Introduction to Modern Statistics (IMS)",
    "section": "",
    "text": "This book is meant to be somewhat aligned pedagogically with part of the book Introduction to Modern Statistics (IMS) by Mine Çetinkaya-Rundel and Johanna Hardin. But it’s not a perfect, one-to-one match. The table below shows the concordance between the two books with some notes that explain when one book does something different from the other.\n\n\n\n\n\n\n\n\nThis book\nIMS\nNotes\n\n\n\n\nCh. 1\n\nThis book contains a specific introduction to R and RStudio with some basic statistical vocabulary.\n\n\n\nCh. 1\nIMS introduces a lot of vocabulary. This book introduces most of that same vocabulary, but across multiple chapters.\n\n\nCh. 2\n\nThis book contains a specific introduction to R Markdown.\n\n\n\nCh. 2\nIMS discusses study design and sampling. Some of that information is scattered across multiple chapters of this book, but not all of it. (For example, this book doesn’t get into stratified or cluster sampling.)\n\n\n\nCh. 3\nIMS has “Applications” chapters at the end of each section. In this book, the applications are woven into each chapter.\n\n\nCh. 3\nCh. 4\nCategorical data.\n\n\nCh. 4\nCh. 5\nNumerical data.\n\n\nCh. 5\n\nThis book has a dedicated chapter on manipulating data using dplyr.\n\n\n\nCh. 6\nApplications.\n\n\nCh. 6\nCh. 7\nCorrelation.\n\n\nCh. 7\nCh. 7\nSimple linear regression.\n\n\n\nCh. 8\nMultiple regression—not covered in this book.\n\n\n\nCh. 9\nLogistic regression—not covered in this book.\n\n\n\nCh. 10\nApplications.\n\n\nCh. 8\nCh. 11\nIntroduction to randomization, Part 1—This book takes four chapters to cover the material that IMS covers in one chapter.\n\n\nCh. 9\nCh. 11\nIntroduction to randomization, Part 2.\n\n\nCh. 10\nCh. 11\nHypothesis testing with randomization, Part 1.\n\n\nCh. 11\nCh. 11\nHypothesis testing with randomization, Part 2.\n\n\nCh. 12\nCh. 12\nConfidence intervals.\n\n\nCh. 13\nCh. 13\nNormal models—This book takes two chapters to cover the material that IMS covers in one chapter.\n\n\nCh. 14\nCh. 13\nSampling distribution models.\n\n\n\nCh. 14\nIMS has a chapter on decision errors that was covered in this book back in Ch. 10. It also covers the concept of power, which is not covered in this book.\n\n\n\nCh. 15\nApplications.\n\n\nCh. 15\nCh. 16\nInference for one proportion.\n\n\nCh. 16\nCh. 17\nInference for two proportions.\n\n\nCh. 17\n\nChi-square goodness-of-fit test. (This is only covered in IMS in a standalone R tutorial appearing in Ch. 23.)\n\n\nCh. 18\nCh. 18\nChi-square test for independence.\n\n\nCh. 19\nCh. 19\nInference for one mean.\n\n\nCh. 20\nCh. 21\nInference for paired data.\n\n\nCh. 21\nCh. 20\nInference for two independent means.\n\n\nCh. 22\nCh. 22\nANOVA. This is the last chapter of this book.\n\n\n\nCh. 23\nApplications.\n\n\n\nCh. 24\nInference for linear regression with a single predictor.\n\n\n\nCh. 25\nInference for linear regression with multiple predictors.\n\n\n\nCh. 26\nInference for logistic regression.\n\n\n\nCh. 27\nApplications.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Concordance with *Introduction to Modern Statistics* (IMS)</span>"
    ]
  }
]